[*.{csproj,props,targets,xml,config}]
indent_style = space
indent_size = 2
max_line_length = 120

[*.{cs,csx}]
# Non-configurable behaviors for CSharpier
charset = utf-8
insert_final_newline = true
trim_trailing_whitespace = true
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Configurable behaviors for CSharpier
end_of_line = lf
max_line_length = 120
indent_style = space
indent_size = 4

# naming rules (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/naming-rules)
dotnet_naming_rule.private_fields.symbols = private_fields
dotnet_naming_rule.private_fields.style = camel_case
dotnet_naming_rule.private_fields.severity = error

dotnet_naming_rule.private_static_fields_none.symbols = private_static_fields
dotnet_naming_rule.private_static_fields_none.style = pascal_case
dotnet_naming_rule.private_static_fields_none.severity = error

dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.types_should_be_pascal_case.severity = error

dotnet_naming_rule.parameter.symbols = parameter
dotnet_naming_rule.parameter.style = camel_case
dotnet_naming_rule.parameter.severity = error

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum, delegate
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields.required_modifiers = static

dotnet_naming_symbols.parameter.applicable_kinds = parameter

dotnet_naming_style.camel_case.capitalization = camel_case
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_naming_style.first_word_upper.capitalization = first_word_upper
dotnet_naming_style.all_upper.capitalization = all_upper
dotnet_naming_style.all_lower.capitalization = all_lower

# C# formatting rules

csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = flush_left
csharp_indent_switch_labels = true
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = accessors, anonymous_methods, anonymous_types, control_blocks, events, indexers, lambdas, local_functions, methods, object_collection_array_initializers, properties, types
csharp_new_line_between_query_expression_clauses = true
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

## IDE0003 / IDE0009
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false

## IDE0007 / IDE0008
csharp_style_var_elsewhere = true
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true

## IDE0011
csharp_prefer_braces = true

## IDE0016
csharp_style_throw_expression = true

## IDE0017
dotnet_style_object_initializer = true

## IDE0018
csharp_style_inlined_variable_declaration = true

## IDE0019
csharp_style_pattern_matching_over_as_with_null_check = true

## IDE0020 / IDE0038
csharp_style_pattern_matching_over_is_with_cast_check = true

## IDE0021
csharp_style_expression_bodied_constructors = when_on_single_line

## IDE0022
csharp_style_expression_bodied_methods = when_on_single_line

## IDE0023 / IDE0024
csharp_style_expression_bodied_operators = when_on_single_line

## IDE0025
csharp_style_expression_bodied_properties = when_on_single_line

## IDE0026
csharp_style_expression_bodied_indexers = when_on_single_line

## IDE0027
csharp_style_expression_bodied_accessors = when_on_single_line

## IDE0028 / IDE0300 / IDE0301 / IDE0302 / IDE0303 / IDE0304 / IDE0305 / IDE0306
dotnet_style_collection_initializer = true
dotnet_style_prefer_collection_expression = when_types_exactly_match

## IDE0029 / IDE0030 / IDE0270
dotnet_style_coalesce_expression = true

## IDE0031
dotnet_style_null_propagation = true

## IDE0032
dotnet_style_prefer_auto_properties = true

## IDE0033
dotnet_style_explicit_tuple_names = true

## IDE0034
csharp_prefer_simple_default_expression = true

## IDE0036
csharp_preferred_modifier_order = public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async

## IDE0037
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true

## IDE0039
csharp_style_prefer_local_over_anonymous_function = false

## IDE0040
dotnet_style_require_accessibility_modifiers = for_non_interface_members

## IDE0041
dotnet_style_prefer_is_null_check_over_reference_equality_method = true

## IDE0042
csharp_style_deconstructed_variable_declaration = true

## IDE0044
dotnet_style_readonly_field = true

## IDE0045
dotnet_style_prefer_conditional_expression_over_assignment = true

## IDE0046
dotnet_style_prefer_conditional_expression_over_return = true

## IDE0047 / IDE0048
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

## IDE0049
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

## IDE0053
csharp_style_expression_bodied_lambdas = true

## IDE0054 / IDE0074
dotnet_style_prefer_compound_assignment = true

## IDE0055
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

## IDE0056
csharp_style_prefer_index_operator = true

## IDE0057
csharp_style_prefer_range_operator = true

## IDE0058
csharp_style_unused_value_expression_statement_preference = discard_variable

## IDE0059
csharp_style_unused_value_assignment_preference = discard_variable

## IDE0060
dotnet_code_quality_unused_parameters = all

## IDE0061
csharp_style_expression_bodied_local_functions = when_on_single_line

## IDE0062
csharp_prefer_static_local_function = true

## IDE0063
csharp_prefer_simple_using_statement = true

## IDE0065
csharp_using_directive_placement = inside_namespace:silent

## IDE0066
csharp_style_prefer_switch_expression = true

## IDE0071
dotnet_style_prefer_simplified_interpolation = true

## IDE0073
# file_header_template = Copyright (c) SomeCorp. All rights reserved.\nLicensed under the xyz license.

## IDE0075
dotnet_style_prefer_simplified_boolean_expressions = true

## IDE0078 / IDE0260
csharp_style_prefer_pattern_matching = true
csharp_style_pattern_matching_over_as_with_null_check = true

## IDE0079
dotnet_remove_unnecessary_suppression_exclusions = none

## IDE0083
csharp_style_prefer_not_pattern = true

## IDE0090
csharp_style_implicit_object_creation_when_type_is_apparent = false

## IDE0130
dotnet_style_namespace_match_folder = true

## IDE0150
csharp_style_prefer_null_check_over_type_check = true

## IDE0160 / IDE0161
csharp_style_namespace_declarations = file_scoped

## IDE0170
csharp_style_prefer_extended_property_pattern = true

## IDE0180
csharp_style_prefer_tuple_swap = true

## IDE0200
csharp_style_prefer_method_group_conversion = true

## IDE0210 / IDE0211
csharp_style_prefer_top_level_statements = false

## IDE0220
dotnet_style_prefer_foreach_explicit_cast_in_source = always

## IDE0230
csharp_style_prefer_utf8_string_literals = true

## IDE0250
csharp_style_prefer_readonly_struct = true

## IDE0251
csharp_style_prefer_readonly_struct_member = true

## IDE0290
csharp_style_prefer_primary_constructors = true

## IDE0320
csharp_prefer_static_anonymous_function = true

## IDE0330
csharp_prefer_system_threading_lock = true

## IDE0340
csharp_style_prefer_unbound_generic_type_in_nameof = true

## IDE0350
csharp_style_prefer_implicitly_typed_lambda_expression = true

## IDE1005
csharp_style_conditional_delegate_call = true

# Resharper settings
resharper_arrange_default_value_when_type_evident_highlighting = hint
resharper_arrange_object_creation_when_type_evident_highlighting = error
resharper_arrange_object_creation_when_type_evident_highlighting = hint
resharper_arrange_object_creation_when_type_not_evident_highlighting = hint
resharper_arrange_object_creation_when_type_not_evident_highlighting = none
resharper_arrange_redundant_parentheses_highlighting = none
resharper_arrange_this_qualifier_highlighting = none
resharper_arrange_trailing_comma_in_multiline_lists_highlighting = error # redundant with CSharpier
resharper_arrange_trailing_comma_in_multiline_lists_highlighting = none # redundant with MA0007
resharper_arrange_trailing_comma_in_singleline_lists_highlighting = error
resharper_arrange_var_keywords_in_deconstructing_declaration_highlighting = hint
resharper_captured_primary_constructor_parameter_is_mutable_highlighting = error
resharper_check_namespace_highlighting = none # redundant with IDE0130
resharper_empty_statement_highlighting = hidden
resharper_event_never_subscribed_to_local_highlighting = none
resharper_heuristic_unreachable_code_highlighting = hidden # redundant with S108
resharper_member_hides_static_from_outer_class_highlighting = none # redundant with S3218
resharper_redundant_empty_switch_section_highlighting = none
resharper_redundant_if_else_block_highlighting = none
resharper_redundant_switch_expression_arms_highlighting = none
resharper_trailing_comma_in_multiline_lists = true
resharper_unused_parameter_global_highlighting = warning # redundant with RCS1163
resharper_unused_type_parameter_highlighting = none # redundant with S2326

resharper_align_linq_query = true
resharper_align_multiline_extends_list = true
resharper_align_multiline_parameter = true
resharper_arguments_skip_single = true
resharper_arguments_literal = named
resharper_arguments_string_literal = positional
resharper_csharp_stick_comment = false
resharper_outdent_statement_labels = true
resharper_place_accessor_attribute_on_same_line = false
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_field_attribute_on_same_line = false
resharper_space_within_single_line_array_initializer_braces = true

# diagnostics

dotnet_diagnostic.cs0067.severity = none       # (redundant with RCS1213) The event 'event' is never used (https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0067)
dotnet_diagnostic.cs0162.severity = warning    # Unreachable code detected (https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0162)
dotnet_diagnostic.cs0168.severity = warning    # The variable 'var' is declared but never used (https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0168)
dotnet_diagnostic.cs0169.severity = none       # (redundant with RCS1213) The private field 'class member' is never used (https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0169)
dotnet_diagnostic.cs0219.severity = warning    # The variable 'variable' is assigned but its value is never used (https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0219)
dotnet_diagnostic.cs0414.severity = none       # (redundant with IDE0052) The private field 'field' is assigned but its value is never used (https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0414)
dotnet_diagnostic.cs0429.severity = warning    # Unreachable expression code detected (https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0429)
dotnet_diagnostic.cs0649.severity = warning    # Field 'field' is never assigned to, and will always have its default value 'value' (https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs0649)
dotnet_diagnostic.cs9113.severity = warning    # Primary constructor parameter is never accessed (https://learn.microsoft.com/en-us/dotnet/csharp/misc/cs9113)

## formatting and style analyzers
dotnet_diagnostic.ide0001.severity = error      # (unfortunately seems to be missing from Microsoft.CodeAnalysis.CSharp.CodeStyle) Simplify name (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0001)
dotnet_diagnostic.ide0002.severity = error      # (unfortunately seems to be missing from Microsoft.CodeAnalysis.CSharp.CodeStyle) Simplify member access (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0002)
dotnet_diagnostic.ide0003.severity = error      # (also IDE0009) this and Me preferences (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0003)
dotnet_diagnostic.ide0004.severity = error      # Remove unnecessary cast (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0004)
dotnet_diagnostic.ide0005.severity = error      # Remove unnecessary using directives (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0005)
dotnet_diagnostic.ide0007.severity = none       # (also IDE0008, redundant with RCS1264) 'var' preferences (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007)
dotnet_diagnostic.ide0008.severity = none       # (also IDE0007, redundant with RCS1264) 'var' preferences (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0008)
dotnet_diagnostic.ide0009.severity = error      # (also IDE0003) this and Me preferences (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0009)
dotnet_diagnostic.ide0010.severity = error      # Add missing cases to switch statement (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0010)
dotnet_diagnostic.ide0011.severity = error      # Add braces (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0011)
dotnet_diagnostic.ide0016.severity = error      # Use throw expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0016)
dotnet_diagnostic.ide0017.severity = error      # Use object initializers (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0017)
dotnet_diagnostic.ide0018.severity = error      # Inline variable declaration (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0018)
dotnet_diagnostic.ide0019.severity = error      # Use pattern matching to avoid 'as' followed by a 'null' check (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0019)
dotnet_diagnostic.ide0020.severity = error      # (also IDE0038) use pattern matching to avoid 'is' check followed by a cast (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0020)
dotnet_diagnostic.ide0021.severity = suggestion # Use expression body for constructors (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0021)
dotnet_diagnostic.ide0022.severity = suggestion # Use expression body for methods (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0022)
dotnet_diagnostic.ide0023.severity = suggestion # (also IDE0024) Use expression body for operators (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0023)
dotnet_diagnostic.ide0024.severity = suggestion # (also IDE0023) Use expression body for operators (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0024)
dotnet_diagnostic.ide0025.severity = suggestion # Use expression body for properties (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0025)
dotnet_diagnostic.ide0026.severity = suggestion # Use expression body for indexers (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0026)
dotnet_diagnostic.ide0027.severity = suggestion # Use expression body for accessors (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0027)
dotnet_diagnostic.ide0028.severity = suggestion # Use collection initializers or expressions (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0028)
dotnet_diagnostic.ide0029.severity = error      # (also IDE0030 / IDE0270) Null check can be simplified (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0029)
dotnet_diagnostic.ide0030.severity = error      # (also IDE0029 / IDE0270) Null check can be simplified (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0030)
dotnet_diagnostic.ide0031.severity = error      # Use null propagation (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0031)
dotnet_diagnostic.ide0032.severity = error      # Use auto-implemented property (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0032)
dotnet_diagnostic.ide0033.severity = error      # Use explicitly provided tuple name (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0033)
dotnet_diagnostic.ide0034.severity = error      # Simplify 'default' expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0034)
dotnet_diagnostic.ide0035.severity = none       # (redundant with CS0162) Remove unreachable code (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0035)
dotnet_diagnostic.ide0036.severity = error      # Order modifiers (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0036)
dotnet_diagnostic.ide0037.severity = error      # Use inferred member names (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0037)
dotnet_diagnostic.ide0038.severity = error      # (also IDE0020) Use pattern matching to avoid 'is' check followed by a cast (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0038)
dotnet_diagnostic.ide0039.severity = suggestion # Use local function instead of lambda (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0039)
dotnet_diagnostic.ide0040.severity = none       # (redundant with RCS1018) Add accessibility modifiers (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0040)
dotnet_diagnostic.ide0041.severity = error      # Use 'is null' check (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0041)
dotnet_diagnostic.ide0042.severity = suggestion # Deconstruct variable declaration (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0042)
dotnet_diagnostic.ide0044.severity = error      # Add readonly modifier (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0044)
dotnet_diagnostic.ide0045.severity = suggestion # Use conditional expression for assignment (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0045)
dotnet_diagnostic.ide0046.severity = suggestion # Use conditional expression for return (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0046)
dotnet_diagnostic.ide0047.severity = error      # (also IDE0048) Parentheses preferences (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0047)
dotnet_diagnostic.ide0048.severity = error      # (also IDE0047) Parentheses preferences (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0048)
dotnet_diagnostic.ide0049.severity = error      # Use language keywords instead of framework type names for type references (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0049)
dotnet_diagnostic.ide0050.severity = suggestion # Convert anonymous type to tuple (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0050)
dotnet_diagnostic.ide0051.severity = none       # (redundant with RCS1213) Remove unused private member (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0051)
dotnet_diagnostic.ide0052.severity = warning    # Remove unread private member (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0052)
dotnet_diagnostic.ide0053.severity = suggestion # Use expression body for lambdas (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0053)
dotnet_diagnostic.ide0054.severity = error      # (also IDE0074) Use compound assignment (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0054)
dotnet_diagnostic.ide0055.severity = none       # Formatting-related rules which are known to interfere with CSharpier (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0055)
dotnet_diagnostic.ide0056.severity = error      # Use index operator (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0056)
dotnet_diagnostic.ide0057.severity = error      # Use range operator (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0057)
dotnet_diagnostic.ide0058.severity = error      # Remove unnecessary expression value (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0058)
dotnet_diagnostic.ide0059.severity = error      # Remove unnecessary value assignment (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0059)
dotnet_diagnostic.ide0060.severity = none       # (redundant with RCS1163) Remove unused parameter (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0060)
dotnet_diagnostic.ide0061.severity = suggestion # Use expression body for local functions (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0061)
dotnet_diagnostic.ide0062.severity = error      # Make local function static (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0062)
dotnet_diagnostic.ide0063.severity = suggestion # Use simple 'using' statement (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0063)
dotnet_diagnostic.ide0064.severity = error      # Make struct fields writable (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0064)
dotnet_diagnostic.ide0065.severity = error      # 'using' directive placement (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0065)
dotnet_diagnostic.ide0066.severity = error      # Use switch expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0066)
dotnet_diagnostic.ide0070.severity = error      # Use 'System.HashCode.Combine' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0070)
dotnet_diagnostic.ide0071.severity = error      # Simplify interpolation (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0071)
dotnet_diagnostic.ide0072.severity = none       # (produces false positives for switch expressions) Add missing cases to switch expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0072)
dotnet_diagnostic.ide0073.severity = none       # Require file header (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0073)
dotnet_diagnostic.ide0074.severity = error      # (also IDE0054) Use compound assignment (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0074)
dotnet_diagnostic.ide0075.severity = error      # Simplify conditional expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0075)
dotnet_diagnostic.ide0076.severity = error      # Remove invalid global 'SuppressMessageAttribute' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0076)
dotnet_diagnostic.ide0077.severity = error      # Avoid legacy format target in global 'SuppressMessageAttribute' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0077)
dotnet_diagnostic.ide0078.severity = error      # Use pattern matching (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0078)
dotnet_diagnostic.ide0079.severity = warning    # Remove unnecessary suppression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0079)
dotnet_diagnostic.ide0080.severity = error      # Remove unnecessary suppression operator (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0080)
dotnet_diagnostic.ide0081.severity = error      # Remove ByVal (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0081)
dotnet_diagnostic.ide0082.severity = error      # Convert typeof to nameof (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0082)
dotnet_diagnostic.ide0083.severity = error      # Use pattern matching (not operator) (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0083)
dotnet_diagnostic.ide0084.severity = error      # Use pattern matching (IsNot operator) (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0084)
dotnet_diagnostic.ide0090.severity = error      # Simplify new expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0090)
dotnet_diagnostic.ide0100.severity = error      # Remove unnecessary equality operator (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0100)
dotnet_diagnostic.ide0110.severity = error      # Remove unnecessary discard (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0110)
dotnet_diagnostic.ide0120.severity = error      # Simplify LINQ expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0120)
dotnet_diagnostic.ide0121.severity = error      # Simplify LINQ type check and cast (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0121)
dotnet_diagnostic.ide0130.severity = warning    # Namespace does not match folder structure (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0130)
dotnet_diagnostic.ide0140.severity = error      # Simplify object creation (Visual Basic) (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0140)
dotnet_diagnostic.ide0150.severity = error      # Prefer 'null' check over type check (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0150)
dotnet_diagnostic.ide0160.severity = error      # (also IDE0161) Namespace declaration preferences (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0160)
dotnet_diagnostic.ide0161.severity = error      # (also IDE0160) Namespace declaration preferences (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0161)
dotnet_diagnostic.ide0170.severity = error      # Simplify property pattern (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0170)
dotnet_diagnostic.ide0180.severity = error      # Use tuple to swap values (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0180)
dotnet_diagnostic.ide0200.severity = suggestion # Remove unnecessary lambda expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0200)
dotnet_diagnostic.ide0210.severity = silent     # Convert to top-level statements (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0210)
dotnet_diagnostic.ide0211.severity = silent     # Convert to 'Program.Main' style program (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0211)
dotnet_diagnostic.ide0220.severity = error      # Add explicit cast in foreach loop (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0220)
dotnet_diagnostic.ide0230.severity = error      # Use UTF-8 string literal (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0230)
dotnet_diagnostic.ide0240.severity = error      # Nullable directive is redundant (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0240)
dotnet_diagnostic.ide0241.severity = error      # Nullable directive is unnecessary (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0241)
dotnet_diagnostic.ide0250.severity = error      # Struct can be made 'readonly' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0250)
dotnet_diagnostic.ide0251.severity = error      # Member can be made 'readonly' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0251)
dotnet_diagnostic.ide0260.severity = error      # (also IDE0078) Use pattern matching (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0260)
dotnet_diagnostic.ide0270.severity = error      # (also IDE0029 / IDE0030) Null check can be simplified (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0270)
dotnet_diagnostic.ide0280.severity = error      # Use 'nameof' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0280)
dotnet_diagnostic.ide0290.severity = error      # Use primary constructor (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0290)
dotnet_diagnostic.ide0300.severity = error      # Use collection expression for array (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0300)
dotnet_diagnostic.ide0301.severity = none       # (RCS1250 also handles collections) Use collection expression for empty (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0301)
dotnet_diagnostic.ide0302.severity = error      # Use collection expression for stackalloc (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0302)
dotnet_diagnostic.ide0303.severity = error      # Use collection expression for Create() (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0303)
dotnet_diagnostic.ide0304.severity = error      # Use collection expression for builder (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0304)
dotnet_diagnostic.ide0305.severity = none       # Use collection expression for fluent (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0305)
dotnet_diagnostic.ide0306.severity = error      # Use collection expression for new (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0306)
dotnet_diagnostic.ide0320.severity = silent     # (when set to error, this analyzer is not executed during builds unfortunately) Make anonymous function static (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0320)
dotnet_diagnostic.ide0330.severity = error      # Prefer 'System.Threading.Lock' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0330)
dotnet_diagnostic.ide0340.severity = error      # Use unbound generic type (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0340)
dotnet_diagnostic.ide0350.severity = error      # Use implicitly typed lambda (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0350)
dotnet_diagnostic.ide1005.severity = error      # Use conditional delegate call (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide1005)
dotnet_diagnostic.ide1006.severity = error      # Enforce naming rules (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide1006)
dotnet_diagnostic.ide3000.severity = none       # Implement with Copilot (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide3000)

# Microsoft Analyzers
dotnet_diagnostic.ca1000.severity = none       # Do not declare static members on generic types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1000)
dotnet_diagnostic.ca1001.severity = error      # Types that own disposable fields should be disposable (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1001)
dotnet_diagnostic.ca1002.severity = none       # Do not expose generic lists (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1002)
dotnet_diagnostic.ca1003.severity = none       # Use generic event handler instances (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1003)
dotnet_diagnostic.ca1005.severity = none       # Avoid excessive parameters on generic types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1005)
dotnet_diagnostic.ca1008.severity = error      # Enums should have zero value (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1008)
dotnet_diagnostic.ca1010.severity = error      # Collections should implement generic interface (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1010)
dotnet_diagnostic.ca1012.severity = error      # Abstract types should not have public constructors (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1012)
dotnet_diagnostic.ca1014.severity = none       # Mark assemblies with CLSCompliantAttribute (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1014)
dotnet_diagnostic.ca1016.severity = none       # Mark assemblies with AssemblyVersionAttribute (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1016)
dotnet_diagnostic.ca1017.severity = none       # Mark assemblies with ComVisibleAttribute (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1017)
dotnet_diagnostic.ca1018.severity = error      # Mark attributes with AttributeUsageAttribute (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1018)
dotnet_diagnostic.ca1019.severity = error      # Define accessors for attribute arguments (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1019)
dotnet_diagnostic.ca1021.severity = silent     # Avoid out parameters (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1021)
dotnet_diagnostic.ca1024.severity = error      # Use properties where appropriate (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1024)
dotnet_diagnostic.ca1027.severity = error      # Mark enums with FlagsAttribute (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1027)
dotnet_diagnostic.ca1028.severity = silent     # Enum storage should be Int32 (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1028)
dotnet_diagnostic.ca1030.severity = silent     # Use events where appropriate (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1030)
dotnet_diagnostic.ca1031.severity = none       # Do not catch general exception types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1031)
dotnet_diagnostic.ca1032.severity = none       # (redundant with RCS1194) Implement standard exception constructors (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1032)
dotnet_diagnostic.ca1033.severity = none       # Interface methods should be callable by child types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1033)
dotnet_diagnostic.ca1034.severity = none       # Nested types should not be visible (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1034)
dotnet_diagnostic.ca1036.severity = error      # Override methods on comparable types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1036)
dotnet_diagnostic.ca1040.severity = none       # Avoid empty interfaces (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1040)
dotnet_diagnostic.ca1041.severity = error      # Provide ObsoleteAttribute message (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1041)
dotnet_diagnostic.ca1043.severity = none       # Use integral or string argument for indexers (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1043)
dotnet_diagnostic.ca1044.severity = error      # Properties should not be write only (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1044)
dotnet_diagnostic.ca1045.severity = none       # Do not pass types by reference (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1045)
dotnet_diagnostic.ca1046.severity = none       # Do not overload operator equals on reference types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1046)
dotnet_diagnostic.ca1047.severity = error      # Do not declare protected members in sealed types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1047)
dotnet_diagnostic.ca1050.severity = error      # Declare types in namespaces (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1050)
dotnet_diagnostic.ca1051.severity = error      # Do not declare visible instance fields (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1051)
dotnet_diagnostic.ca1052.severity = error      # Static holder types should be sealed (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1052)
dotnet_diagnostic.ca1053.severity = none       # Static holder types should not have constructors (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1053)
dotnet_diagnostic.ca1054.severity = error      # URI parameters should not be strings (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1054)
dotnet_diagnostic.ca1055.severity = error      # URI return values should not be strings (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1055)
dotnet_diagnostic.ca1056.severity = error      # URI properties should not be strings (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1056)
dotnet_diagnostic.ca1058.severity = error      # Types should not extend certain base types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1058)
dotnet_diagnostic.ca1060.severity = error      # Move P/Invokes to NativeMethods class (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1060)
dotnet_diagnostic.ca1061.severity = error      # Do not hide base class methods (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1061)
dotnet_diagnostic.ca1062.severity = silent     # Validate arguments of public methods (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1062)
dotnet_diagnostic.ca1063.severity = error      # Implement IDisposable correctly (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1063)
dotnet_diagnostic.ca1064.severity = error      # Exceptions should be public (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1064)
dotnet_diagnostic.ca1065.severity = none       # Do not raise exceptions in unexpected locations (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1065)
dotnet_diagnostic.ca1066.severity = error      # Implement IEquatable when overriding Equals (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1066)
dotnet_diagnostic.ca1067.severity = error      # Override Equals when implementing IEquatable (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1067)
dotnet_diagnostic.ca1068.severity = error      # CancellationToken parameters must come last (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1068)
dotnet_diagnostic.ca1069.severity = error      # Enums should not have duplicate values (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1069)
dotnet_diagnostic.ca1070.severity = error      # Do not declare event fields as virtual (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1070)
dotnet_diagnostic.ca1200.severity = silent     # Avoid using cref tags with a prefix (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1200)
dotnet_diagnostic.ca1303.severity = silent     # Do not pass literals as localized parameters (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1303)
dotnet_diagnostic.ca1304.severity = error      # Specify Cultureinfo (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1304)
dotnet_diagnostic.ca1305.severity = suggestion # Specify IFormatProvider (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1305)
dotnet_diagnostic.ca1307.severity = error      # Specify StringComparison for clarity (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1307)
dotnet_diagnostic.ca1308.severity = silent     # Normalize strings to uppercase (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1308)
dotnet_diagnostic.ca1309.severity = error      # Use ordinal StringComparison (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1309)
dotnet_diagnostic.ca1310.severity = error      # Specify StringComparison for correctness (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1310)
dotnet_diagnostic.ca1311.severity = error      # Specify a culture or use an invariant version (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1311)
dotnet_diagnostic.ca1401.severity = error      # P/Invokes should not be visible (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1401)
dotnet_diagnostic.ca1416.severity = error      # Validate platform compatibility (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1416)
dotnet_diagnostic.ca1417.severity = error      # Do not use `OutAttribute` on string parameters for P/Invokes (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1417)
dotnet_diagnostic.ca1418.severity = error      # Use valid platform string (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1418)
dotnet_diagnostic.ca1419.severity = error      # Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1419)
dotnet_diagnostic.ca1420.severity = error      # Property type or attribute requires runtime marshalling (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1420)
dotnet_diagnostic.ca1421.severity = error      # Method uses runtime marshalling when DisableRuntimeMarshallingAttribute is applied (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1421)
dotnet_diagnostic.ca1422.severity = error      # Validate platform compatibility (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1422)
dotnet_diagnostic.ca1501.severity = none       # (causes Analyzer crashes) Avoid excessive inheritance (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1501)
dotnet_diagnostic.ca1502.severity = none       # (causes Analyzer crashes) Avoid excessive complexity (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1502)
dotnet_diagnostic.ca1505.severity = none       # (causes Analyzer crashes) Avoid unmaintainable code (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1505)
dotnet_diagnostic.ca1506.severity = none       # (causes Analyzer crashes) Avoid excessive class coupling (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1506)
dotnet_diagnostic.ca1507.severity = error      # Use nameof in place of string (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1507)
dotnet_diagnostic.ca1508.severity = error      # Avoid dead conditional code (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1508)
dotnet_diagnostic.ca1509.severity = none       # (causes Analyzer crashes) Invalid entry in code metrics configuration file (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1509)
dotnet_diagnostic.ca1510.severity = error      # Use ArgumentNullException throw helper (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1510)
dotnet_diagnostic.ca1511.severity = error      # Use ArgumentException throw helper (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1511)
dotnet_diagnostic.ca1512.severity = error      # Use ArgumentOutOfRangeException throw helper (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1512)
dotnet_diagnostic.ca1513.severity = error      # Use ObjectDisposedException throw helper (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1513)
dotnet_diagnostic.ca1514.severity = error      # Avoid redundant length argument (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1514)
dotnet_diagnostic.ca1515.severity = error      # Consider making public types internal (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1515)
dotnet_diagnostic.ca1700.severity = none       # Do not name enum values 'Reserved' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1700)
dotnet_diagnostic.ca1707.severity = error      # Identifiers should not contain underscores (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1707)
dotnet_diagnostic.ca1708.severity = error      # Identifiers should differ by more than case (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1708)
dotnet_diagnostic.ca1710.severity = error      # Identifiers should have correct suffix (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1710)
dotnet_diagnostic.ca1711.severity = error      # Identifiers should not have incorrect suffix (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1711)
dotnet_diagnostic.ca1712.severity = error      # Do not prefix enum values with type name (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1712)
dotnet_diagnostic.ca1713.severity = error      # Events should not have before or after prefix (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1713)
dotnet_diagnostic.ca1714.severity = none       # Flags enums should have plural names (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1714)
dotnet_diagnostic.ca1715.severity = error      # Identifiers should have correct prefix (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1715)
dotnet_diagnostic.ca1716.severity = none       # Identifiers should not match keywords (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1716)
dotnet_diagnostic.ca1717.severity = none       # Only FlagsAttribute enums should have plural names (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1717)
dotnet_diagnostic.ca1720.severity = error      # Identifiers should not contain type names (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1720)
dotnet_diagnostic.ca1721.severity = error      # Property names should not match get methods (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1721)
dotnet_diagnostic.ca1724.severity = error      # Type Names Should Not Match Namespaces (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1724)
dotnet_diagnostic.ca1725.severity = error      # Parameter names should match base declaration (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1725)
dotnet_diagnostic.ca1727.severity = error      # Use PascalCase for named placeholders (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1727)
dotnet_diagnostic.ca1801.severity = error      # Review unused parameters (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1801)
dotnet_diagnostic.ca1802.severity = error      # Use Literals Where Appropriate (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1802)
dotnet_diagnostic.ca1805.severity = error      # Do not initialize unnecessarily (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1805)
dotnet_diagnostic.ca1806.severity = error      # Do not ignore method results (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1806)
dotnet_diagnostic.ca1810.severity = error      # Initialize reference type static fields inline (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1810)
dotnet_diagnostic.ca1812.severity = silent     # Avoid uninstantiated internal classes (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1812)
dotnet_diagnostic.ca1813.severity = error      # Avoid unsealed attributes (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1813)
dotnet_diagnostic.ca1814.severity = error      # Prefer jagged arrays over multidimensional (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1814)
dotnet_diagnostic.ca1815.severity = silent     # Override equals and operator equals on value types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1815)
dotnet_diagnostic.ca1816.severity = error      # Call GC.SuppressFinalize correctly (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1816)
dotnet_diagnostic.ca1819.severity = error      # Properties should not return arrays (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1819)
dotnet_diagnostic.ca1820.severity = error      # Test for empty strings using string length (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1820)
dotnet_diagnostic.ca1821.severity = error      # Remove empty finalizers (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1821)
dotnet_diagnostic.ca1822.severity = suggestion # Mark members as static (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1822)
dotnet_diagnostic.ca1823.severity = none       # (redundant with RCS1213) Avoid unused private fields (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1823)
dotnet_diagnostic.ca1824.severity = suggestion # Mark assemblies with NeutralResourcesLanguageAttribute (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1824)
dotnet_diagnostic.ca1825.severity = error      # Avoid zero-length array allocations (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1825)
dotnet_diagnostic.ca1826.severity = error      # Use property instead of Linq Enumerable method (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1826)
dotnet_diagnostic.ca1827.severity = error      # Do not use Count/LongCount when Any can be used (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1827)
dotnet_diagnostic.ca1828.severity = error      # Do not use CountAsync/LongCountAsync when AnyAsync can be used (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1828)
dotnet_diagnostic.ca1829.severity = error      # Use Length/Count property instead of Enumerable.Count method (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1829)
dotnet_diagnostic.ca1830.severity = error      # Prefer strongly-typed Append and Insert method overloads on StringBuilder (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1830)
dotnet_diagnostic.ca1831.severity = error      # Use AsSpan instead of Range-based indexers for string when appropriate (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1831)
dotnet_diagnostic.ca1832.severity = error      # Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1832)
dotnet_diagnostic.ca1833.severity = error      # Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1833)
dotnet_diagnostic.ca1834.severity = error      # Use StringBuilder.Append(char) for single character strings (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1834)
dotnet_diagnostic.ca1835.severity = error      # Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1835)
dotnet_diagnostic.ca1836.severity = error      # Prefer `IsEmpty` over `Count` when available (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1836)
dotnet_diagnostic.ca1837.severity = error      # Use `Environment.ProcessId` instead of `Process.GetCurrentProcess().Id` (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1837)
dotnet_diagnostic.ca1838.severity = error      # Avoid `StringBuilder` parameters for P/Invokes (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1838)
dotnet_diagnostic.ca1839.severity = error      # Use Environment.ProcessPath instead of Process.GetCurrentProcess().MainModule.FileName (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1839)
dotnet_diagnostic.ca1840.severity = error      # Use Environment.CurrentManagedThreadId instead of Thread.CurrentThread.ManagedThreadId (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1840)
dotnet_diagnostic.ca1841.severity = error      # Prefer Dictionary Contains methods (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1841)
dotnet_diagnostic.ca1842.severity = error      # Do not use 'WhenAll' with a single task (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1842)
dotnet_diagnostic.ca1843.severity = error      # Do not use 'WaitAll' with a single task (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1843)
dotnet_diagnostic.ca1844.severity = error      # Provide memory-based overrides of async methods when subclassing 'Stream' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1844)
dotnet_diagnostic.ca1845.severity = error      # Use span-based 'string.Concat' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1845)
dotnet_diagnostic.ca1846.severity = error      # Prefer `AsSpan` over `Substring` (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1846)
dotnet_diagnostic.ca1847.severity = error      # Use char literal for a single character lookup (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1847)
dotnet_diagnostic.ca1848.severity = suggestion # Use the LoggerMessage delegates (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1848)
dotnet_diagnostic.ca1849.severity = suggestion # Call async methods when in an async method (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1849)
dotnet_diagnostic.ca1850.severity = error      # Prefer static `HashData` method over `ComputeHash` (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1850)
dotnet_diagnostic.ca1851.severity = error      # Possible multiple enumerations of `IEnumerable` collection (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1851)
dotnet_diagnostic.ca1852.severity = error      # Seal internal types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1852)
dotnet_diagnostic.ca1853.severity = error      # Unnecessary call to 'Dictionary.ContainsKey(key)' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1853)
dotnet_diagnostic.ca1854.severity = error      # Prefer the 'IDictionary.TryGetValue(TKey out TValue)' method (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1854)
dotnet_diagnostic.ca1855.severity = error      # Use Span<T>.Clear() instead of Span<T>.Fill() (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1855)
dotnet_diagnostic.ca1856.severity = error      # Incorrect usage of ConstantExpected attribute (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1856)
dotnet_diagnostic.ca1857.severity = error      # The parameter expects a constant for optimal performance (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1857)
dotnet_diagnostic.ca1858.severity = error      # Use StartsWith instead of IndexOf (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1858)
dotnet_diagnostic.ca1859.severity = error      # Use concrete types when possible for improved performance (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1859)
dotnet_diagnostic.ca1860.severity = error      # Avoid using 'Enumerable.Any()' extension method (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1860)
dotnet_diagnostic.ca1861.severity = error      # Avoid constant arrays as arguments (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1861)
dotnet_diagnostic.ca1862.severity = error      # Use the 'StringComparison' method overloads to perform case-insensitive string comparisons (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1862)
dotnet_diagnostic.ca1863.severity = suggestion # Use 'CompositeFormat' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1863)
dotnet_diagnostic.ca1864.severity = error      # Prefer the 'IDictionary.TryAdd(TKey TValue)' method (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1864)
dotnet_diagnostic.ca1865.severity = error      # Use char overload (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1865)
dotnet_diagnostic.ca1866.severity = error      # Use char overload (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1866)
dotnet_diagnostic.ca1867.severity = error      # Use char overload (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1867)
dotnet_diagnostic.ca1868.severity = error      # Unnecessary call to 'Contains' for sets (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1868)
dotnet_diagnostic.ca1869.severity = error      # Cache and reuse 'JsonSerializerOptions' instances (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1869)
dotnet_diagnostic.ca1870.severity = error      # Use a cached 'SearchValues' instance (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1870)
dotnet_diagnostic.ca1871.severity = error      # Do not pass a nullable struct to 'ArgumentNullException.ThrowIfNull' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1871)
dotnet_diagnostic.ca1872.severity = error      # Prefer 'Convert.ToHexString' and 'Convert.ToHexStringLower' over call chains based on 'BitConverter.ToString' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1872)
dotnet_diagnostic.ca2000.severity = error      # Dispose objects before losing scope (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2000)
dotnet_diagnostic.ca2002.severity = error      # Do not lock on objects with weak identity (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2002)
dotnet_diagnostic.ca2007.severity = silent     # Do not directly await a Task (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2007)
dotnet_diagnostic.ca2008.severity = error      # Do not create tasks without passing a TaskScheduler (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2008)
dotnet_diagnostic.ca2009.severity = error      # Do not call ToImmutableCollection on an ImmutableCollection value (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2009)
dotnet_diagnostic.ca2011.severity = error      # Do not assign property within its setter (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2011)
dotnet_diagnostic.ca2012.severity = error      # Use ValueTasks correctly (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2012)
dotnet_diagnostic.ca2013.severity = error      # Do not use ReferenceEquals with value types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2013)
dotnet_diagnostic.ca2014.severity = error      # Do not use stackalloc in loops. (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2014)
dotnet_diagnostic.ca2015.severity = error      # Do not define finalizers for types derived from MemoryManager<T> (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2015)
dotnet_diagnostic.ca2016.severity = error      # Forward the CancellationToken parameter to methods that take one (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2016)
dotnet_diagnostic.ca2017.severity = error      # Parameter count mismatch (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2017)
dotnet_diagnostic.ca2018.severity = error      # The `count` argument to `Buffer.BlockCopy` should specify the number of bytes to copy (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2018)
dotnet_diagnostic.ca2019.severity = error      # `ThreadStatic` fields should not use inline initialization (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2019)
dotnet_diagnostic.ca2020.severity = error      # Prevent behavioral change caused by built-in operators of IntPtr/UIntPtr (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2020)
dotnet_diagnostic.ca2021.severity = error      # Don't call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2021)
dotnet_diagnostic.ca2022.severity = error      # Avoid inexact read with Stream.Read (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2022)
dotnet_diagnostic.ca2024.severity = error      # Do not use StreamReader.EndOfStream in async methods (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2024)
dotnet_diagnostic.ca2025.severity = error      # Do not pass `IDisposable` instances into unawaited tasks (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2025)
dotnet_diagnostic.ca2100.severity = suggestion # Review SQL queries for security vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2100)
dotnet_diagnostic.ca2101.severity = error      # Specify marshalling for P/Invoke string arguments (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2101)
dotnet_diagnostic.ca2109.severity = error      # Review visible event handlers (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2109)
dotnet_diagnostic.ca2119.severity = error      # Seal methods that satisfy private interfaces (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2119)
dotnet_diagnostic.ca2153.severity = error      # Avoid handling Corrupted State Exceptions (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2153)
dotnet_diagnostic.ca2200.severity = error      # Rethrow to preserve stack details (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2200)
dotnet_diagnostic.ca2201.severity = suggestion # Do not raise reserved exception types (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2201)
dotnet_diagnostic.ca2207.severity = error      # Initialize value type static fields inline (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2207)
dotnet_diagnostic.ca2208.severity = error      # Instantiate argument exceptions correctly (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2208)
dotnet_diagnostic.ca2211.severity = error      # Non-constant fields should not be visible (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2211)
dotnet_diagnostic.ca2213.severity = error      # Disposable fields should be disposed (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2213)
dotnet_diagnostic.ca2214.severity = error      # Do not call overridable methods in constructors (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2214)
dotnet_diagnostic.ca2215.severity = error      # Dispose methods should call base class dispose (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2215)
dotnet_diagnostic.ca2216.severity = none       # Disposable types should declare finalizer (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2216)
dotnet_diagnostic.ca2217.severity = none       # Do not mark enums with FlagsAttribute (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2217)
dotnet_diagnostic.ca2218.severity = error      # Override GetHashCode on overriding Equals (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2218)
dotnet_diagnostic.ca2219.severity = error      # Do not raise exceptions in exception clauses (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2219)
dotnet_diagnostic.ca2224.severity = error      # Override equals on overloading operator equals (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2224)
dotnet_diagnostic.ca2225.severity = none       # Operator overloads have named alternates (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2225)
dotnet_diagnostic.ca2226.severity = error      # Operators should have symmetrical overloads (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2226)
dotnet_diagnostic.ca2227.severity = error      # Collection properties should be read only (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2227)
dotnet_diagnostic.ca2229.severity = none       # Implement serialization constructors (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2229)
dotnet_diagnostic.ca2231.severity = error      # Overload operator equals on overriding ValueType.Equals (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2231)
dotnet_diagnostic.ca2234.severity = error      # Pass System.Uri objects instead of strings (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2234)
dotnet_diagnostic.ca2235.severity = none       # Mark all non-serializable fields (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2235)
dotnet_diagnostic.ca2237.severity = none       # Mark ISerializable types with SerializableAttribute (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2237)
dotnet_diagnostic.ca2241.severity = error      # Provide correct arguments to formatting methods (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2241)
dotnet_diagnostic.ca2242.severity = error      # Test for NaN correctly (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2242)
dotnet_diagnostic.ca2243.severity = error      # Attribute string literals should parse correctly (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2243)
dotnet_diagnostic.ca2244.severity = error      # Do not duplicate indexed element initializations (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2244)
dotnet_diagnostic.ca2245.severity = error      # Do not assign a property to itself (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2245)
dotnet_diagnostic.ca2246.severity = error      # Do not assign a symbol and its member in the same statement (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2246)
dotnet_diagnostic.ca2247.severity = error      # Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum. (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2247)
dotnet_diagnostic.ca2248.severity = error      # Provide correct enum argument to Enum.HasFlag (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2248)
dotnet_diagnostic.ca2249.severity = error      # Consider using String.Contains instead of String.IndexOf (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2249)
dotnet_diagnostic.ca2250.severity = error      # Use `ThrowIfCancellationRequested` (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2250)
dotnet_diagnostic.ca2251.severity = error      # Use `String.Equals` over `String.Compare` (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2251)
dotnet_diagnostic.ca2252.severity = error      # Opt in to preview features (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2252)
dotnet_diagnostic.ca2253.severity = error      # Named placeholders should not be numeric values (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2253)
dotnet_diagnostic.ca2254.severity = error      # Template should be a static expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2254)
dotnet_diagnostic.ca2255.severity = none       # The `ModuleInitializer` attribute should not be used in libraries (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2255)
dotnet_diagnostic.ca2256.severity = error      # All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2256)
dotnet_diagnostic.ca2257.severity = error      # Members defined on an interface with 'DynamicInterfaceCastableImplementationAttribute' should be 'static' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2257)
dotnet_diagnostic.ca2258.severity = error      # Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2258)
dotnet_diagnostic.ca2259.severity = error      # Ensure `ThreadStatic` is only used with static fields (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2259)
dotnet_diagnostic.ca2260.severity = error      # Implement generic math interfaces correctly (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2260)
dotnet_diagnostic.ca2261.severity = error      # Do not use `ConfigureAwaitOptions.SuppressThrowing` with `Task<TResult>` (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2261)
dotnet_diagnostic.ca2262.severity = error      # Set `MaxResponseHeadersLength` properly (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2262)
dotnet_diagnostic.ca2263.severity = error      # Prefer generic overload when type is known (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2263)
dotnet_diagnostic.ca2264.severity = error      # Do not pass a non-nullable value to 'ArgumentNullException.ThrowIfNull' (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2264)
dotnet_diagnostic.ca2265.severity = error      # Do not compare `Span<T>` to `null` or `default` (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2265)
dotnet_diagnostic.ca2300.severity = none       # Do not use insecure deserializer BinaryFormatter (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2300)
dotnet_diagnostic.ca2301.severity = none       # Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2301)
dotnet_diagnostic.ca2302.severity = none       # Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2302)
dotnet_diagnostic.ca2305.severity = none       # Do not use insecure deserializer LosFormatter (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2305)
dotnet_diagnostic.ca2310.severity = none       # Do not use insecure deserializer NetDataContractSerializer (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2310)
dotnet_diagnostic.ca2311.severity = none       # Do not deserialize without first setting NetDataContractSerializer.Binder (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2311)
dotnet_diagnostic.ca2312.severity = none       # Ensure NetDataContractSerializer.Binder is set before deserializing (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2312)
dotnet_diagnostic.ca2315.severity = none       # Do not use insecure deserializer ObjectStateFormatter (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2315)
dotnet_diagnostic.ca2321.severity = none       # Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2321)
dotnet_diagnostic.ca2322.severity = none       # Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2322)
dotnet_diagnostic.ca2326.severity = none       # Do not use TypeNameHandling values other than None (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2326)
dotnet_diagnostic.ca2327.severity = none       # Do not use insecure JsonSerializerSettings (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2327)
dotnet_diagnostic.ca2328.severity = none       # Ensure that JsonSerializerSettings are secure (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2328)
dotnet_diagnostic.ca2329.severity = none       # Do not deserialize with JsonSerializer using an insecure configuration (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2329)
dotnet_diagnostic.ca2330.severity = none       # Ensure that JsonSerializer has a secure configuration when deserializing (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2330)
dotnet_diagnostic.ca2350.severity = none       # Ensure DataTable.ReadXml()'s input is trusted (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2350)
dotnet_diagnostic.ca2351.severity = none       # Ensure DataSet.ReadXml()'s input is trusted (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2351)
dotnet_diagnostic.ca2352.severity = none       # Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2352)
dotnet_diagnostic.ca2353.severity = none       # Unsafe DataSet or DataTable in serializable type (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2353)
dotnet_diagnostic.ca2354.severity = none       # Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attack (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2354)
dotnet_diagnostic.ca2355.severity = none       # Unsafe DataSet or DataTable in deserialized object graph (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2355)
dotnet_diagnostic.ca2356.severity = none       # Unsafe DataSet or DataTable in web deserialized object graph (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2356)
dotnet_diagnostic.ca2361.severity = none       # Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2361)
dotnet_diagnostic.ca2362.severity = none       # Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2362)
dotnet_diagnostic.ca3001.severity = none       # Review code for SQL injection vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3001)
dotnet_diagnostic.ca3002.severity = none       # Review code for XSS vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3002)
dotnet_diagnostic.ca3003.severity = none       # Review code for file path injection vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3003)
dotnet_diagnostic.ca3004.severity = none       # Review code for information disclosure vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3004)
dotnet_diagnostic.ca3005.severity = none       # Review code for LDAP injection vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3005)
dotnet_diagnostic.ca3006.severity = none       # Review code for process command injection vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3006)
dotnet_diagnostic.ca3007.severity = none       # Review code for open redirect vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3007)
dotnet_diagnostic.ca3008.severity = none       # Review code for XPath injection vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3008)
dotnet_diagnostic.ca3009.severity = none       # Review code for XML injection vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3009)
dotnet_diagnostic.ca3010.severity = none       # Review code for XAML injection vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3010)
dotnet_diagnostic.ca3011.severity = none       # Review code for DLL injection vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3011)
dotnet_diagnostic.ca3012.severity = none       # Review code for regex injection vulnerabilities (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3012)
dotnet_diagnostic.ca3061.severity = suggestion # Do not add schema by URL (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3061)
dotnet_diagnostic.ca3075.severity = suggestion # Insecure DTD Processing (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3075)
dotnet_diagnostic.ca3076.severity = suggestion # Insecure XSLT Script Execution (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3076)
dotnet_diagnostic.ca3077.severity = suggestion # Insecure Processing in API Design XML Document and XML Text Reader (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3077)
dotnet_diagnostic.ca3147.severity = suggestion # Mark verb handlers with ValidateAntiForgeryToken (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3147)
dotnet_diagnostic.ca5350.severity = error      # Do Not Use Weak Cryptographic Algorithms (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5350)
dotnet_diagnostic.ca5351.severity = error      # Do Not Use Broken Cryptographic Algorithms (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5351)
dotnet_diagnostic.ca5358.severity = error      # Do Not Use Unsafe Cipher Modes (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5358)
dotnet_diagnostic.ca5359.severity = error      # Do not disable certificate validation (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5359)
dotnet_diagnostic.ca5360.severity = error      # Do not call dangerous methods in deserialization (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5360)
dotnet_diagnostic.ca5361.severity = error      # Do not disable Schannel use of strong crypto (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5361)
dotnet_diagnostic.ca5362.severity = error      # Potential reference cycle in deserialized object graph (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5362)
dotnet_diagnostic.ca5363.severity = error      # Do not disable request validation (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5363)
dotnet_diagnostic.ca5364.severity = error      # Do not use deprecated security protocols (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5364)
dotnet_diagnostic.ca5365.severity = error      # Do Not Disable HTTP Header Checking (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5365)
dotnet_diagnostic.ca5366.severity = suggestion # Use XmlReader For DataSet Read XML (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5366)
dotnet_diagnostic.ca5367.severity = error      # Do Not Serialize Types With Pointer Fields (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5367)
dotnet_diagnostic.ca5368.severity = suggestion # Set ViewStateUserKey For Classes Derived From Page (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5368)
dotnet_diagnostic.ca5369.severity = error      # Use XmlReader for Deserialize (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5369)
dotnet_diagnostic.ca5370.severity = error      # Use XmlReader for validating reader (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5370)
dotnet_diagnostic.ca5371.severity = error      # Use XmlReader for schema read (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5371)
dotnet_diagnostic.ca5372.severity = error      # Use XmlReader for XPathDocument (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5372)
dotnet_diagnostic.ca5373.severity = error      # Do not use obsolete key derivation function (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5373)
dotnet_diagnostic.ca5374.severity = error      # Do Not Use XslTransform (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5374)
dotnet_diagnostic.ca5375.severity = error      # Do not use account shared access signature (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5375)
dotnet_diagnostic.ca5376.severity = error      # Use SharedAccessProtocol HttpsOnly (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5376)
dotnet_diagnostic.ca5377.severity = error      # Use container level access policy (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5377)
dotnet_diagnostic.ca5378.severity = error      # Do not disable ServicePointManagerSecurityProtocols (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5378)
dotnet_diagnostic.ca5379.severity = error      # Do not use weak key derivation function algorithm (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5379)
dotnet_diagnostic.ca5380.severity = error      # Do not add certificates to root store (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5380)
dotnet_diagnostic.ca5381.severity = error      # Ensure certificates are not added to root store (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5381)
dotnet_diagnostic.ca5382.severity = error      # Use secure cookies in ASP.NET Core (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5382)
dotnet_diagnostic.ca5383.severity = error      # Ensure use secure cookies in ASP.NET Core (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5383)
dotnet_diagnostic.ca5384.severity = error      # Do not use digital signature algorithm (DSA) (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5384)
dotnet_diagnostic.ca5385.severity = error      # Use Rivest–Shamir–Adleman (RSA) algorithm with sufficient key size (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5385)
dotnet_diagnostic.ca5386.severity = error      # Avoid hardcoding SecurityProtocolType value (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5386)
dotnet_diagnostic.ca5387.severity = error      # Do not use weak key derivation function with insufficient iteration count (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5387)
dotnet_diagnostic.ca5388.severity = error      # Ensure sufficient iteration count when using weak key derivation function (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5388)
dotnet_diagnostic.ca5389.severity = error      # Do not add archive item's path to the target file system path (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5389)
dotnet_diagnostic.ca5390.severity = error      # Do not hard-code encryption key (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5390)
dotnet_diagnostic.ca5391.severity = error      # Use antiforgery tokens in ASP.NET Core MVC controllers (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5391)
dotnet_diagnostic.ca5392.severity = error      # Use DefaultDllImportSearchPaths attribute for P/Invokes (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5392)
dotnet_diagnostic.ca5393.severity = error      # Do not use unsafe DllImportSearchPath value (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5393)
dotnet_diagnostic.ca5394.severity = error      # Do not use insecure randomness (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5394)
dotnet_diagnostic.ca5395.severity = error      # Miss HttpVerb attribute for action methods (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5395)
dotnet_diagnostic.ca5396.severity = error      # Set HttpOnly to true for HttpCookie (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5396)
dotnet_diagnostic.ca5397.severity = error      # Do not use deprecated SslProtocols values (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5397)
dotnet_diagnostic.ca5398.severity = error      # Avoid hardcoded SslProtocols values (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5398)
dotnet_diagnostic.ca5399.severity = error      # Definitely disable HttpClient certificate revocation list check (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5399)
dotnet_diagnostic.ca5400.severity = error      # Ensure HttpClient certificate revocation list check is not none (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5400)
dotnet_diagnostic.ca5401.severity = error      # Do not use CreateEncryptor with non-default IV (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5401)
dotnet_diagnostic.ca5402.severity = error      # Use CreateEncryptor with the default IV (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5402)
dotnet_diagnostic.ca5403.severity = error      # Do not hard-code certificate (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5403)
dotnet_diagnostic.ca5404.severity = error      # Do not disable token validation checks (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5404)
dotnet_diagnostic.ca5405.severity = error      # Do not always skip token validation in delegates (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5405)
dotnet_diagnostic.IL3000.severity = error      # Avoid accessing Assembly file path when publishing as a single file (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/il3000)
dotnet_diagnostic.IL3001.severity = error      # Avoid accessing Assembly file path when publishing as a single-file (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/il3001)
dotnet_diagnostic.IL3002.severity = error      # Avoid calling members annotated with 'RequiresAssemblyFilesAttribute' when publishing as a single file (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/il3002)
dotnet_diagnostic.IL3003.severity = error      # 'RequiresAssemblyFilesAttribute' annotations must match across all interface implementations or overrides. (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/il3003)
dotnet_diagnostic.IL3005.severity = error      # `RequiresAssemblyFilesAttribute` cannot be placed directly on application dotnet_diagnostic.ca1000.severity =  point #  (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/il3005)

# StyleCop

## special rules
dotnet_diagnostic.sa0001.severity = error      # All diagnostics of XML documentation comments has been disabled due to the current project configuration (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA0001.md)
dotnet_diagnostic.sa0002.severity = error      # The stylecop.json settings file could not be loaded due to a deserialization error (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA0002.md)

## spacing rules
dotnet_diagnostic.sa1000.severity = none       # (CSharpier conflict) The spacing around a C# keyword is incorrect (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1000.md)
dotnet_diagnostic.sa1001.severity = none       # (CSharpier redundant) The spacing around a comma is incorrect, within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1001.md)
dotnet_diagnostic.sa1002.severity = none       # (CSharpier redundant) The spacing around a semicolon is incorrect, within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1002.md)
dotnet_diagnostic.sa1003.severity = none       # (CSharpier redundant) The spacing around an operator symbol is incorrect, within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1003.md)
dotnet_diagnostic.sa1004.severity = error      # A line within a documentation header above a C# element does not begin with a single space (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1004.md)
dotnet_diagnostic.sa1005.severity = error      # A single-line comment within a C# code file does not begin with a single space (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1005.md)
dotnet_diagnostic.sa1006.severity = error      # A C# preprocessor-type keyword is preceded by space (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1006.md)
dotnet_diagnostic.sa1007.severity = none       # (CSharpier redundant) The operator keyword within a C# operator overload method is not followed by any whitespace (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1007.md)
dotnet_diagnostic.sa1008.severity = none       # (CSharpier redundant) An opening parenthesis within a C# statement is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1008.md)
dotnet_diagnostic.sa1009.severity = none       # (CSharpier conflict) A closing parenthesis within a C# statement is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1009.md)
dotnet_diagnostic.sa1010.severity = none       # (CSharpier redundant) An opening square bracket within a C# statement is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1010.md)
dotnet_diagnostic.sa1011.severity = none       # (CSharpier redundant) A closing square bracket within a C# statement is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1011.md)
dotnet_diagnostic.sa1012.severity = none       # (CSharpier redundant) An opening brace within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1012.md)
dotnet_diagnostic.sa1013.severity = none       # (CSharpier redundant) A closing brace within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1013.md)
dotnet_diagnostic.sa1014.severity = none       # (CSharpier redundant) An opening generic bracket within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1014.md)
dotnet_diagnostic.sa1015.severity = none       # (CSharpier redundant) A closing generic bracket within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1015.md)
dotnet_diagnostic.sa1016.severity = none       # (CSharpier redundant) An opening attribute bracket within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1016.md)
dotnet_diagnostic.sa1017.severity = none       # (CSharpier redundant) A closing attribute bracket within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1017.md)
dotnet_diagnostic.sa1018.severity = none       # (CSharpier redundant) A nullable type symbol within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1018.md)
dotnet_diagnostic.sa1019.severity = none       # (CSharpier redundant) The spacing around a member access symbol is incorrect, within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1019.md)
dotnet_diagnostic.sa1020.severity = none       # (CSharpier redundant) An increment or decrement symbol within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1020.md)
dotnet_diagnostic.sa1021.severity = none       # (CSharpier redundant) A negative sign within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1021.md)
dotnet_diagnostic.sa1022.severity = none       # (CSharpier redundant) A positive sign within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1022.md)
dotnet_diagnostic.sa1023.severity = none       # (CSharpier redundant) A dereference symbol or an access-of symbol within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1023.md)
dotnet_diagnostic.sa1024.severity = none       # (CSharpier redundant) A colon within a C# element is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1024.md)
dotnet_diagnostic.sa1025.severity = none       # (CSharpier redundant) The code contains multiple whitespace characters in a row (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1025.md)
dotnet_diagnostic.sa1026.severity = none       # (CSharpier redundant) An implicitly typed new array allocation within a C# code file is not spaced correctly (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1026.md)
dotnet_diagnostic.sa1027.severity = none       # (CSharpier redundant) The code contains a tab or space character which is not consistent with the current project settings (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1027.md)
dotnet_diagnostic.sa1028.severity = none       # (CSharpier redundant) A line of code ends with a space, tab, or other whitespace characters before the end of line character(s) (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1028.md)

## readability rules
dotnet_diagnostic.sa1100.severity = error      # A call to a member from an inherited class begins with `base.`, and the local class does not contain an override or implementation of the member (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1100.md)
dotnet_diagnostic.sa1101.severity = none       # A call to an instance member of the local class or a base class is not prefixed with 'this.', within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1101.md)
dotnet_diagnostic.sa1102.severity = none       # (CSharpier redundant) A C# query clause does not begin on the same line as the previous clause, or on the next line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1102.md)
dotnet_diagnostic.sa1103.severity = none       # (CSharpier redundant) The clauses within a C# query expression are not all placed on the same line, and each clause is not placed on its own line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1103.md)
dotnet_diagnostic.sa1104.severity = none       # (CSharpier redundant) A clause within a C# query expression begins on the same line as the previous clause, when the previous clause spans across multiple lines (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1104.md)
dotnet_diagnostic.sa1105.severity = none       # (CSharpier redundant) A clause within a C# query expression spans across multiple lines, and does not begin on its own line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1105.md)
dotnet_diagnostic.sa1106.severity = none       # (redundant with rcs1259) The C# code contains an extra semicolon (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1106.md)
dotnet_diagnostic.sa1107.severity = none       # (CSharpier redundant) The C# code contains more than one statement on a single line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1107.md)
dotnet_diagnostic.sa1108.severity = error      # A C# statement contains a comment between the declaration of the statement and the opening brace of the statement (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1108.md)
dotnet_diagnostic.sa1109.severity = error      # A C# statement contains a region tag between the declaration of the statement and the opening brace of the statement (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1109.md)
dotnet_diagnostic.sa1110.severity = none       # (CSharpier redundant) The opening parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the method or indexer nam (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1110.md)
dotnet_diagnostic.sa1111.severity = none       # (CSharpier conflict) The closing parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the last parameter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1111.md)
dotnet_diagnostic.sa1112.severity = none       # (CSharpier redundant) The closing parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the opening bracket when the element does not take any parameters (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1112.md)
dotnet_diagnostic.sa1113.severity = none       # (CSharpier redundant) A comma between two parameters in a call to a C# method or indexer, or in the declaration of a method or indexer, is not placed on the same line as the previous parameter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1113.md)
dotnet_diagnostic.sa1114.severity = none       # (CSharpier redundant) The start of the parameter list for a method or indexer call or declaration does not begin on the same line as the opening bracket, or on the line after the opening bracket (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1114.md)
dotnet_diagnostic.sa1115.severity = none       # (CSharpier redundant) A parameter within a C# method or indexer call or declaration does not begin on the same line as the previous parameter, or on the next line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1115.md)
dotnet_diagnostic.sa1116.severity = none       # (CSharpier redundant) The parameters to a C# method or indexer call or declaration span across multiple lines, but the first parameter does not start on the line after the opening bracket (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1116.md)
dotnet_diagnostic.sa1117.severity = none       # (CSharpier redundant) The parameters to a C# method or indexer call or declaration are not all on the same line or each on a separate line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1117.md)
dotnet_diagnostic.sa1118.severity = none       # (CSharpier conflict) A parameter to a C# method or indexer, other than the first parameter, spans across multiple lines (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1118.md)
dotnet_diagnostic.sa1120.severity = error      # The C# comment does not contain any comment text (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1120.md)
dotnet_diagnostic.sa1121.severity = error      # The code uses one of the basic C# types, but does not use the built-in alias for the type (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1121.md)
dotnet_diagnostic.sa1122.severity = none       # The C# code includes an empty string, written as `""` (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1122.md)
dotnet_diagnostic.sa1123.severity = error      # The C# code contains a region within the body of a code element (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1123.md)
dotnet_diagnostic.sa1124.severity = error      # The C# code contains a region (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1124.md)
dotnet_diagnostic.sa1125.severity = error      # The Nullable type has been defined not using the C# shorthand (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1125.md)
dotnet_diagnostic.sa1126.severity = none       # A call to a member is not prefixed with the 'this.', 'base.', 'object.' or 'typename.' prefix to indicate the intended method call, within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1126.md)
dotnet_diagnostic.sa1127.severity = none       # (CSharpier redundant) A generic constraint on a type or method declaration is on the same line as the declaration, within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1127.md)
dotnet_diagnostic.sa1128.severity = none       # (CSharpier redundant) A constructor initializer is on the same line as the constructor declaration, within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1128.md)
dotnet_diagnostic.sa1129.severity = error      # A value type was constructed using the syntax `new T()` (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1129.md)
dotnet_diagnostic.sa1130.severity = error      # An anonymous method was declared using the form `delegate (parameters) { }`, when a lambda expression would provide equivalent behavior with the syntax `(parameters) => { } (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1130.md)
dotnet_diagnostic.sa1131.severity = error      # A comparison was made between a variable and a literal or constant value, and the variable appeared on the right-hand side of the expression (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1131.md)
dotnet_diagnostic.sa1132.severity = error      # Two or more fields were declared in the same field declaration syntax (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1132.md)
dotnet_diagnostic.sa1133.severity = error      # Two or more attributes appeared within the same set of square brackets (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1133.md)
dotnet_diagnostic.sa1134.severity = error      # An attribute is placed on the same line of code as another attribute or element (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1134.md)
dotnet_diagnostic.sa1135.severity = none       # (conflicts with using statements inside namespace) A using directive is not qualified (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1135.md)
dotnet_diagnostic.sa1136.severity = none       # (CSharpier redundant) Multiple enum values are placed on the same line of code (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1136.md)
dotnet_diagnostic.sa1137.severity = none       # (CSharpier conflict) Two sibling elements which each start on their own line have different levels of indentation (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1137.md)
dotnet_diagnostic.sa1139.severity = error      # Use literal suffix notation instead of casting (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1139.md)
dotnet_diagnostic.sa1141.severity = error      # Use tuple syntax instead of the underlying ValueTuple implementation type (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1141.md)
dotnet_diagnostic.sa1142.severity = error      # An element of a tuple was referenced by its metadata name when an element name is available (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1142.md)

## ordering rules
dotnet_diagnostic.sa1200.severity = error      # A C# using directive is placed outside of a namespace element (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1200.md)
dotnet_diagnostic.sa1201.severity = error      # An element within a C# code file is out of order in relation to the other elements in the code (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1201.md)
dotnet_diagnostic.sa1202.severity = error      # An element within a C# code file is out of order within regard to access level, in relation to other elements in the code (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1202.md)
dotnet_diagnostic.sa1203.severity = error      # A constant field is placed beneath a non-constant field (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1203.md)
dotnet_diagnostic.sa1204.severity = none       # (causes false positives for multiple types in the same file) A static element is positioned beneath an instance element of the same type (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1204.md)
dotnet_diagnostic.sa1205.severity = error      # The partial element does not have an access modifier defined (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1205.md)
dotnet_diagnostic.sa1206.severity = none       # (redundant with IDE0036) The keywords within the declaration of an element do not follow a standard ordering scheme (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1206.md)
dotnet_diagnostic.sa1207.severity = error      # The keyword *protected* is positioned after the keyword *internal* within the declaration of a protected internal C# element (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1207.md)
dotnet_diagnostic.sa1208.severity = error      # A using directive which declares a member of the *System* namespace appears after a using directive which declares a member of a different namespace, within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1208.md)
dotnet_diagnostic.sa1209.severity = error      # A using-alias directive is positioned before a regular using directive (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1209.md)
dotnet_diagnostic.sa1210.severity = error      # The using directives within a C# code file are not sorted alphabetically by namespace (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1210.md)
dotnet_diagnostic.sa1211.severity = error      # The using-alias directives within a C# code file are not sorted alphabetically by alias name (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1211.md)
dotnet_diagnostic.sa1212.severity = error      # A get accessor appears after a set accessor within a property or indexer (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1212.md)
dotnet_diagnostic.sa1213.severity = error      # An add accessor appears after a remove accessor within an event (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1213.md)
dotnet_diagnostic.sa1214.severity = error      # A readonly field is positioned beneath a non-readonly field (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1214.md)
dotnet_diagnostic.sa1215.severity = error      # An instance readonly element is positioned beneath an instance non-readonly element of the same type (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1215.md)
dotnet_diagnostic.sa1216.severity = error      # A `using static` directive is positioned at the wrong location (before a regular using directive or after an alias using directive) (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1216.md)
dotnet_diagnostic.sa1217.severity = error      # The `using static` directives within a C# code file are not sorted alphabetically by full type name (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1217.md)

## naming rules
dotnet_diagnostic.sa1300.severity = none       # (redundant with IDE1006) The name of a C# element does not begin with an upper-case letter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md)
dotnet_diagnostic.sa1301.severity = none       # There are currently no situations in which this rule will fire (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1301.md)
dotnet_diagnostic.sa1302.severity = none       # (redundant with IDE1006) The name of a C# interface does not begin with the capital letter I (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1302.md)
dotnet_diagnostic.sa1303.severity = none       # (redundant with IDE1006) The name of a constant C# field should begin with an upper-case letter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1303.md)
dotnet_diagnostic.sa1304.severity = none       # (redundant with IDE1006) The name of a non-private readonly C# field should being with an upper-case letter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1304.md)
dotnet_diagnostic.sa1305.severity = error      # The name of a field or variable in C# uses Hungarian notation (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1305.md)
dotnet_diagnostic.sa1306.severity = none       # (redundant with IDE0006) The name of a field in C# does not begin with a lower-case letter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1306.md)
dotnet_diagnostic.sa1307.severity = none       # (redundant with IDE1006) The name of a public or internal field in C# does not begin with an upper-case letter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1307.md)
dotnet_diagnostic.sa1308.severity = error      # A field name in C# is prefixed with *m_* or *s_* (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1308.md)
dotnet_diagnostic.sa1309.severity = none       # (redundant with IDE1006) A field name in C# begins with an underscore (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1309.md)
dotnet_diagnostic.sa1310.severity = none       # (redundant with IDE1006) A field name in C# contains an underscore (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1310.md)
dotnet_diagnostic.sa1311.severity = none       # (redundant with IDE1006) The name of a static readonly field does not begin with an upper-case letter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1311.md)
dotnet_diagnostic.sa1312.severity = none       # (redundant with IDE1006) The name of a variable in C# does not begin with a lower-case letter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1312.md)
dotnet_diagnostic.sa1313.severity = none       # (redundant with IDE1006) The name of a parameter in C# does not begin with a lower-case letter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1313.md)
dotnet_diagnostic.sa1314.severity = none       # (redundant with IDE1006) The name of a C# type parameter does not begin with the capital letter  (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1314.md)
dotnet_diagnostic.sa1316.severity = error      # Element names within a tuple type should have the correct casing (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1316.md)

## maintainability rules
dotnet_diagnostic.sa1119.severity = none       # A C# statement contains parenthesis which are unnecessary and should be removed (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1119.md)
dotnet_diagnostic.sa1400.severity = none       # (redundant with RCS1018) The access modifier for a C# element has not been explicitly defined (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1400.md)
dotnet_diagnostic.sa1401.severity = none       # (redundant with CA1051) A field within a C# class has an access modifier other than private (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1401.md)
dotnet_diagnostic.sa1402.severity = none       # A C# code file contains more than one unique type (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1402.md)
dotnet_diagnostic.sa1403.severity = error      # A C# code file contains more than one namespace (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1403.md)
dotnet_diagnostic.sa1404.severity = error      # A Code Analysis SuppressMessage attribute does not include a justification (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1404.md)
dotnet_diagnostic.sa1405.severity = error      # A call to Debug.Assert in C# code does not include a descriptive message (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1405.md)
dotnet_diagnostic.sa1406.severity = error      # A call to Debug.Fail in C# code does not include a descriptive message (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1406.md)
dotnet_diagnostic.sa1407.severity = error      # A C# statement contains a complex arithmetic expression which omits parenthesis around operators (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1407.md)
dotnet_diagnostic.sa1408.severity = error      # A C# statement contains a complex conditional expression which omits parenthesis around operators (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1408.md)
dotnet_diagnostic.sa1409.severity = error      # A C# file contains code which is unnecessary and can be removed without changing the overall logic of the code (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1409.md)
dotnet_diagnostic.sa1410.severity = error      # A call to a C# anonymous method does not contain any method parameters, yet the statement still includes parenthesis (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1410.md)
dotnet_diagnostic.sa1411.severity = error      # An attribute declaration does not contain any parameters, yet it still includes parenthesis (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1411.md)
dotnet_diagnostic.sa1412.severity = none       # The encoding of the file is not UTF-8 with byte order mark (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1412.md)
dotnet_diagnostic.sa1413.severity = none       # (CSharpier conflict) A multi-line initializer should use a comma on the last item (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1413.md)
dotnet_diagnostic.sa1414.severity = error      # Tuple types appearing in member declarations should have explicitly named tuple element (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1414.md)

## layout rules
dotnet_diagnostic.sa1500.severity = none       # (CSharpier conflict) The opening or closing brace within a C# statement, element, or expression is not placed on its own line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1500.md)
dotnet_diagnostic.sa1501.severity = none       # (CSharpier conflict) A C# statement containing opening and closing braces is written completely on a single line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1501.md)
dotnet_diagnostic.sa1502.severity = none       # (CSharpier conflict) A C# element containing opening and closing braces is written completely on a single line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1502.md)
dotnet_diagnostic.sa1503.severity = none       # (redundant with IDE0011) The opening and closing braces for a C# statement have been omitted (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1503.md)
dotnet_diagnostic.sa1504.severity = none       # (CSharpier conflict) Within a C# property, indexer or event, at least one of the child accessors is written on a single line, and at least one of the child accessors is written across multiple lines (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1504.md)
dotnet_diagnostic.sa1505.severity = none       # (CSharpier redundant) An opening brace within a C# element, statement, or expression is followed by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1505.md)
dotnet_diagnostic.sa1506.severity = none       # (CSharpier redundant) An element documentation header above a C# element is followed by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1506.md)
dotnet_diagnostic.sa1507.severity = none       # (CSharpier redundant) The C# code contains multiple blank lines in a row (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1507.md)
dotnet_diagnostic.sa1508.severity = none       # (CSharpier redundant) A closing brace within a C# element, statement, or expression is preceded by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1508.md)
dotnet_diagnostic.sa1509.severity = none       # (CSharpier redundant) An opening brace within a C# element, statement, or expression is preceded by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1509.md)
dotnet_diagnostic.sa1510.severity = none       # (CSharpier redundant) Chained C# statements are separated by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1510.md)
dotnet_diagnostic.sa1511.severity = none       # (CSharpier redundant) The while footer at the bottom of a do-while statement is separated from the statement by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1511.md)
dotnet_diagnostic.sa1512.severity = none       # A single-line comment within C# code is followed by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1512.md)
dotnet_diagnostic.sa1513.severity = error      # A closing brace within a C# element, statement, or expression is not followed by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1513.md)
dotnet_diagnostic.sa1514.severity = error      # An element documentation header above a C# element is not preceded by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1514.md)
dotnet_diagnostic.sa1515.severity = none       # (CSharpier conflict) A single-line comment within C# code is not preceded by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1515.md)
dotnet_diagnostic.sa1516.severity = none       # (CSharpier conflict) Adjacent C# elements are not separated by a blank line (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1516.md)
dotnet_diagnostic.sa1517.severity = none       # (CSharpier redundant) The code file has blank lines at the start (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1517.md)
dotnet_diagnostic.sa1518.severity = none       # (CSharpier redundant) The line endings at the end of a file do not match the settings for the project (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1518.md)
dotnet_diagnostic.sa1519.severity = error      # The opening and closing braces for a multi-line C# statement have been omitted (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1519.md)
dotnet_diagnostic.sa1520.severity = error      # The opening and closing braces of a chained `if`/`else if`/`else` construct were included for some clauses, but omitted for other (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1520.md)

## documentation rules
dotnet_diagnostic.sa1600.severity = none       # A C# code element is missing a documentation header (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1600.md)
dotnet_diagnostic.sa1601.severity = none       # A C# partial element is missing a documentation header (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1601.md)
dotnet_diagnostic.sa1602.severity = none       # An item within a C# enumeration is missing an Xml documentation header (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1602.md)
dotnet_diagnostic.sa1603.severity = error      # The Xml within a C# element's document header is badly formed (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1603.md)
dotnet_diagnostic.sa1604.severity = error      # The Xml header documentation for a C# element is missing a `<summary>` tag (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1604.md)
dotnet_diagnostic.sa1605.severity = error      # The `<summary>` or `<content>` tag within the documentation header for a C# code element is missing or empty (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1605.md)
dotnet_diagnostic.sa1606.severity = error      # The `<summary>` tag within the documentation header for a C# code element is empty (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1606.md)
dotnet_diagnostic.sa1607.severity = error      # The `<summary>` or `<content>` tag within the documentation header for a C# code element is empty (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1607.md)
dotnet_diagnostic.sa1608.severity = error      # The `<summary>` tag within an element's Xml header documentation contains the default text generated by Visual Studio during the creation of the element (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1608.md)
dotnet_diagnostic.sa1609.severity = none       # The Xml header documentation for a C# property does not contain a `<value>` tag (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1609.md)
dotnet_diagnostic.sa1610.severity = error      # The Xml header documentation for a C# property contains an empty `<value>` tag (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1610.md)
dotnet_diagnostic.sa1611.severity = error      # A C# method, constructor, delegate or indexer element is missing documentation for one or more of its parameters (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1611.md)
dotnet_diagnostic.sa1612.severity = error      # The documentation describing the parameters to a C# method, constructor, delegate or indexer element does not match the actual parameters on the element (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1612.md)
dotnet_diagnostic.sa1613.severity = error      # A `<param>` tag within a C# element's documentation header is missing a name attribute containing the name of the parameter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1613.md)
dotnet_diagnostic.sa1614.severity = error      # A `<param>` tag within a C# element's documentation header is empty (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1614.md)
dotnet_diagnostic.sa1615.severity = error      # A C# element is missing documentation for its return value (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1615.md)
dotnet_diagnostic.sa1616.severity = error      # The `<returns>` tag within a C# element's documentation header is empty (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1616.md)
dotnet_diagnostic.sa1617.severity = error      # A C# code element does not contain a return value, or returns void, but the documentation header for the element contains a `<returns>` tag (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1617.md)
dotnet_diagnostic.sa1618.severity = error      # A generic C# element is missing documentation for one or more of its generic type parameters (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1618.md)
dotnet_diagnostic.sa1619.severity = error      # A generic, partial C# element is missing documentation for one or more of its generic type parameters, and the documentation for the element contains a `<summary>` tag (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1619.md)
dotnet_diagnostic.sa1620.severity = error      # The `<typeparam>` tags within the Xml header documentation for a generic C# element do not match the generic type parameters on the element (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1620.md)
dotnet_diagnostic.sa1621.severity = error      # A `<typeparam>` tag within the Xml header documentation for a generic C# element is missing a name attribute, or contains an empty name attribute (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1621.md)
dotnet_diagnostic.sa1622.severity = error      # A `<typeparam>` tag within the Xml header documentation for a generic C# element is empty (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1622.md)
dotnet_diagnostic.sa1623.severity = none       # The documentation text within a C# property's `<summary>` tag does not match the accessors within the property (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1623.md)
dotnet_diagnostic.sa1624.severity = error      # The documentation text within a C# property's `<summary>` tag takes into account all of the accessors within the property, but one of the accessors has limited access (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1624.md)
dotnet_diagnostic.sa1625.severity = error      # The Xml documentation for a C# element contains two or more identical entries, indicating that the documentation has been copied and paste (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1625.md)
dotnet_diagnostic.sa1626.severity = error      # The C# code contains a single-line comment which begins with three forward slashes in a row (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1626.md)
dotnet_diagnostic.sa1627.severity = error      # The Xml header documentation for a C# code element contains an empty tag (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1627.md)
dotnet_diagnostic.sa1628.severity = error      # A section of the Xml header documentation for a C# element does not begin with a capital letter (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1628.md)
dotnet_diagnostic.sa1629.severity = none       # A section of the Xml header documentation for a C# element does not end with a period (also known as a full stop) (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1629.md)
dotnet_diagnostic.sa1630.severity = error      # A section of the Xml header documentation for a C# element does not contain any whitespace between words (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1630.md)
dotnet_diagnostic.sa1631.severity = error      # A section of the Xml header documentation for a C# element does not contain enough alphabetic characters (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1631.md)
dotnet_diagnostic.sa1632.severity = none       # From StyleCop 4.5 this rule is disabled by default (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1632.md)
dotnet_diagnostic.sa1633.severity = none       # A C# code file is missing a standard file header (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1633.md)
dotnet_diagnostic.sa1634.severity = error      # The file header at the top of a C# code file is missing a copyright tag (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1634.md)
dotnet_diagnostic.sa1635.severity = error      # The file header at the top of a C# code file is missing copyright text (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1635.md)
dotnet_diagnostic.sa1636.severity = error      # The file header at the top of a C# code file does not contain the appropriate copyright text (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1636.md)
dotnet_diagnostic.sa1637.severity = error      # The file header at the top of a C# code file is missing the file name (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1637.md)
dotnet_diagnostic.sa1638.severity = error      # The file tag within the file header at the top of a C# code file does not contain the name of the file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1638.md)
dotnet_diagnostic.sa1639.severity = error      # The file header at the top of a C# code file does not contain a filled-in summary tag (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1639.md)
dotnet_diagnostic.sa1640.severity = error      # The file header at the top of a C# code file does not contain company name text (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1640.md)
dotnet_diagnostic.sa1641.severity = error      # The file header at the top of a C# code file does not contain the appropriate company name text (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1641.md)
dotnet_diagnostic.sa1642.severity = error      # The XML documentation header for a C# constructor does not contain the appropriate summary text (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1642.md)
dotnet_diagnostic.sa1643.severity = error      # The Xml documentation header for a C# finalizer does not contain the appropriate summary text (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1643.md)
dotnet_diagnostic.sa1644.severity = error      # A section within the Xml documentation header for a C# element contains blank lines (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1644.md)
dotnet_diagnostic.sa1645.severity = error      # An included Xml documentation file does not exist (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1645.md)
dotnet_diagnostic.sa1646.severity = error      # An included Xml documentation link contains an invalid path (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1646.md)
dotnet_diagnostic.sa1647.severity = error      # An include tag within an Xml documentation header does not contain valid file and path attribute (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1647.md)
dotnet_diagnostic.sa1648.severity = error      # `<inheritdoc>` has been used on an element that doesn't inherit from a base class or implement an interface (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1648.md)
dotnet_diagnostic.sa1649.severity = error      # The file name of a C# code file does not match the first type declared in the file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1649.md)
dotnet_diagnostic.sa1650.severity = error      # The element documentation for the element contains one or more spelling mistakes or unrecognized words (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1650.md)
dotnet_diagnostic.sa1651.severity = error      # The documentation for the element contains one or more `<placeholder>` elements (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1651.md)
dotnet_diagnostic.sa1652.severity = error      # This rule was moved to [SA0001] (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1652.md)

## alternative rules
dotnet_diagnostic.sx1101.severity = error      # A call to an instance member of the local class or a base class is prefixed with 'this.', within a C# code file (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SX1101.md)
dotnet_diagnostic.sx1309.severity = none       # A field name does not begin with an underscore (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SX1309.md)
dotnet_diagnostic.sx1309.severity = none       # A static field name does not begin with an underscore (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SX1309.md)

# Roslynator

dotnet_analyzer_diagnostic.category-roslynator.severity = error
roslynator_refactorings.enabled = true
roslynator_compiler_diagnostic_fixes.enabled = true

## formatting options
roslynator_accessibility_modifiers = explicit # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1018
roslynator_accessor_braces_style = multi_line # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0020
roslynator_array_creation_type_style = implicit # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1014
roslynator_arrow_token_new_line = before # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0032, rcs0062, rcs1016
roslynator_binary_operator_new_line = before # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0027
roslynator_blank_line_after_file_scoped_namespace_declaration = true # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0060
roslynator_blank_line_between_closing_brace_and_switch_section = true # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0014, rcs0063, rcs1036
roslynator_blank_line_between_single_line_accessors = false # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0011
roslynator_blank_line_between_switch_sections = include # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0061
roslynator_blank_line_between_using_directives = never # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0015
roslynator_block_braces_style = single_line_when_empty # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0021
roslynator_body_style = expression # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1016
roslynator_conditional_operator_condition_parentheses_style = omit # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1051
roslynator_conditional_operator_new_line = before # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0028
roslynator_configure_await = false # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1090
roslynator_doc_comment_summary_style = multi_line # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1253
roslynator_empty_string_style = literal # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1078
roslynator_enum_flag_value_style = shift_operator # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1254
roslynator_enum_has_flag_style = method # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1096
roslynator_equals_token_new_line = after # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0052
roslynator_infinite_loop_style = while # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1252
roslynator_max_line_length = 140 # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0056
roslynator_new_line_at_end_of_file = true # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0058
roslynator_new_line_before_while_in_do_statement = true # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0051
roslynator_null_check_style = pattern_matching # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1248
roslynator_null_conditional_operator_new_line = before # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0059
roslynator_object_creation_parentheses_style = omit # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1050
roslynator_object_creation_type_style = implicit_when_type_is_obvious # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1250
roslynator_prefix_field_identifier_with_underscore = false
roslynator_tab_length = 4 # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0056
roslynator_trailing_comma_style = omit_when_single_line # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1260
roslynator_unity_code_analysis.enabled = false # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1169, rcs1213
roslynator_use_anonymous_function_or_method_group = method_group # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1207
roslynator_use_block_body_when_declaration_spans_over_multiple_lines = true # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1016
roslynator_use_block_body_when_expression_spans_over_multiple_lines = true # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1016
roslynator_use_collection_expression = true # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1014, rcs1250
roslynator_use_var = always # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1264
roslynator_use_var_instead_of_implicit_object_creation = true # https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1250

## analyzers

dotnet_diagnostic.rcs0001.severity = none       # Add blank line after embedded statement (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0001)
dotnet_diagnostic.rcs0002.severity = none       # Add blank line after #region (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0002)
dotnet_diagnostic.rcs0003.severity = error      # Add blank line after using directive list (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0003)
dotnet_diagnostic.rcs0005.severity = none       # Add blank line before #endregion (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0005)
dotnet_diagnostic.rcs0006.severity = error      # Add blank line before using directive list (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0006)
dotnet_diagnostic.rcs0007.severity = error      # Add blank line between accessors (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0007)
dotnet_diagnostic.rcs0008.severity = none       # Add blank line between closing brace and next statement (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0008)
dotnet_diagnostic.rcs0009.severity = error      # Add blank line between declaration and documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0009)
dotnet_diagnostic.rcs0010.severity = error      # Add blank line between declarations (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0010)
dotnet_diagnostic.rcs0011.severity = none       # Add/remove blank line between single-line accessors (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0011)
dotnet_diagnostic.rcs0012.severity = none       # Add blank line between single-line declarations (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0012)
dotnet_diagnostic.rcs0013.severity = none       # Add blank line between single-line declarations of different kind (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0013)
dotnet_diagnostic.rcs0015.severity = none       # Add/remove blank line between using directives (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0015)
dotnet_diagnostic.rcs0016.severity = none       # Put attribute list on its own line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0016)
dotnet_diagnostic.rcs0020.severity = error      # Format accessor's braces on a single line or multiple lines (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0020)
dotnet_diagnostic.rcs0021.severity = error      # Format block's braces on a single line or multiple lines (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0021)
dotnet_diagnostic.rcs0023.severity = error      # Format type declaration's braces (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0023)
dotnet_diagnostic.rcs0024.severity = error      # Add new line after switch label (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0024)
dotnet_diagnostic.rcs0025.severity = error      # Put full accessor on its own line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0025)
dotnet_diagnostic.rcs0027.severity = error      # Place new line after/before binary operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0027)
dotnet_diagnostic.rcs0028.severity = error      # Place new line after/before '?:' operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0028)
dotnet_diagnostic.rcs0029.severity = error      # Put constructor initializer on its own line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0029)
dotnet_diagnostic.rcs0030.severity = none       # Put embedded statement on its own line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0030)
dotnet_diagnostic.rcs0031.severity = error      # Put enum member on its own line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0031)
dotnet_diagnostic.rcs0032.severity = error      # Place new line after/before arrow token (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0032)
dotnet_diagnostic.rcs0033.severity = error      # Put statement on its own line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0033)
dotnet_diagnostic.rcs0034.severity = error      # Put type parameter constraint on its own line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0034)
dotnet_diagnostic.rcs0036.severity = none       # Remove blank line between single-line declarations of same kind (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0036)
dotnet_diagnostic.rcs0039.severity = none       # Remove new line before base list (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0039)
dotnet_diagnostic.rcs0041.severity = error      # Remove new line between 'if' keyword and 'else' keyword (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0041)
dotnet_diagnostic.rcs0042.severity = error      # Put auto-accessors on a single line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0042)
dotnet_diagnostic.rcs0044.severity = none       # Use carriage return + linefeed as new line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0044)
dotnet_diagnostic.rcs0045.severity = error      # Use linefeed as new line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0045)
dotnet_diagnostic.rcs0046.severity = error      # Use spaces instead of tab (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0046)
dotnet_diagnostic.rcs0048.severity = none       # Put initializer on a single line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0048)
dotnet_diagnostic.rcs0049.severity = error      # Add blank line after top comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0049)
dotnet_diagnostic.rcs0050.severity = error      # Add blank line before top declaration (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0050)
dotnet_diagnostic.rcs0051.severity = error      # Add/remove new line before 'while' in 'do' statement (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0051)
dotnet_diagnostic.rcs0052.severity = error      # Place new line after/before equals token (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0052)
dotnet_diagnostic.rcs0053.severity = none       # Fix formatting of a list (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0053)
dotnet_diagnostic.rcs0054.severity = none       # Fix formatting of a call chain (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0054)
dotnet_diagnostic.rcs0055.severity = none       # Fix formatting of a binary expression chain (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0055)
dotnet_diagnostic.rcs0056.severity = none       # A line is too long (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0056)
dotnet_diagnostic.rcs0057.severity = error      # Normalize whitespace at the beginning of a file (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0057)
dotnet_diagnostic.rcs0058.severity = error      # Normalize whitespace at the end of a file (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0058)
dotnet_diagnostic.rcs0059.severity = error      # Place new line after/before null-conditional operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0059)
dotnet_diagnostic.rcs0060.severity = error      # Add/remove line after file scoped namespace declaration (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0060)
dotnet_diagnostic.rcs0061.severity = error      # Add/remove blank line between switch sections (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0061)
dotnet_diagnostic.rcs0062.severity = error      # Put expression body on its own line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0062)
dotnet_diagnostic.rcs0063.severity = none       # Remove unnecessary blank line (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs0063)
dotnet_diagnostic.rcs1001.severity = error      # Add braces (when expression spans over multiple lines) (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1001)
dotnet_diagnostic.rcs1002.severity = none       # Remove braces (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1002)
dotnet_diagnostic.rcs1003.severity = error      # Add braces to if-else (when expression spans over multiple lines) (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1003)
dotnet_diagnostic.rcs1004.severity = none       # Remove braces from if-else (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1004)
dotnet_diagnostic.rcs1005.severity = error      # Simplify nested using statement (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1005)
dotnet_diagnostic.rcs1006.severity = error      # Merge 'else' with nested 'if' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1006)
dotnet_diagnostic.rcs1007.severity = none       # Add braces (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1007)
dotnet_diagnostic.rcs1013.severity = none       # Use predefined type (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1013)
dotnet_diagnostic.rcs1014.severity = error      # Use explicitly/implicitly typed array (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1014)
dotnet_diagnostic.rcs1015.severity = error      # Use nameof operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1015)
dotnet_diagnostic.rcs1016.severity = none       # Use block body or expression body (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1016)
dotnet_diagnostic.rcs1018.severity = error      # Add/remove accessibility modifiers (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1018)
dotnet_diagnostic.rcs1019.severity = none       # (redundant with IDE0036) Order modifiers (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1019)
dotnet_diagnostic.rcs1020.severity = error      # Simplify Nullable<T> to T? (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1020)
dotnet_diagnostic.rcs1021.severity = suggestion # Convert lambda expression body to expression body (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1021)
dotnet_diagnostic.rcs1031.severity = suggestion # Remove unnecessary braces in switch section (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1031)
dotnet_diagnostic.rcs1032.severity = error      # Remove redundant parentheses (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1032)
dotnet_diagnostic.rcs1033.severity = error      # Remove redundant boolean literal (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1033)
dotnet_diagnostic.rcs1034.severity = error      # Remove redundant 'sealed' modifier (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1034)
dotnet_diagnostic.rcs1036.severity = none       # (obsolete with RCS0063) Remove trailing white-space (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1036)
dotnet_diagnostic.rcs1037.severity = error      # Remove trailing white-space (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1037)
dotnet_diagnostic.rcs1039.severity = error      # Remove argument list from attribute (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1039)
dotnet_diagnostic.rcs1042.severity = suggestion # Remove enum default underlying type (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1042)
dotnet_diagnostic.rcs1043.severity = suggestion # Remove 'partial' modifier from type with a single part (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1043)
dotnet_diagnostic.rcs1044.severity = error      # Remove original exception from throw statement (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1044)
dotnet_diagnostic.rcs1046.severity = none       # Asynchronous method name should end with 'Async' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1046)
dotnet_diagnostic.rcs1047.severity = error      # Non-asynchronous method name should not end with 'Async' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1047)
dotnet_diagnostic.rcs1048.severity = error      # Use lambda expression instead of anonymous method (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1048)
dotnet_diagnostic.rcs1049.severity = error      # Simplify boolean comparison (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1049)
dotnet_diagnostic.rcs1050.severity = error      # Include/omit parentheses when creating new object (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1050)
dotnet_diagnostic.rcs1051.severity = error      # Add/remove parentheses from condition in conditional operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1051)
dotnet_diagnostic.rcs1052.severity = error      # Declare each attribute separately (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1052)
dotnet_diagnostic.rcs1055.severity = error      # Unnecessary semicolon at the end of declaration (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1055)
dotnet_diagnostic.rcs1056.severity = none       # Avoid usage of using alias directive (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1056)
dotnet_diagnostic.rcs1058.severity = error      # Use compound assignment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1058)
dotnet_diagnostic.rcs1059.severity = error      # Avoid locking on publicly accessible instance (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1059)
dotnet_diagnostic.rcs1060.severity = none       # Declare each type in separate file (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1060)
dotnet_diagnostic.rcs1061.severity = error      # Merge 'if' with nested 'if' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1061)
dotnet_diagnostic.rcs1068.severity = error      # Simplify logical negation (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1068)
dotnet_diagnostic.rcs1069.severity = suggestion # Remove unnecessary case label (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1069)
dotnet_diagnostic.rcs1070.severity = none       # Remove redundant default switch section (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1070)
dotnet_diagnostic.rcs1071.severity = suggestion # Remove redundant base constructor call (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1071)
dotnet_diagnostic.rcs1073.severity = error      # Convert 'if' to 'return' statement (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1073)
dotnet_diagnostic.rcs1074.severity = suggestion # Remove redundant constructor (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1074)
dotnet_diagnostic.rcs1075.severity = error      # Avoid empty catch clause that catches System.Exception (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1075)
dotnet_diagnostic.rcs1077.severity = error      # Optimize LINQ method call (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1077)
dotnet_diagnostic.rcs1078.severity = error      # Use "" or 'string.Empty' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1078)
dotnet_diagnostic.rcs1079.severity = none       # Throwing of new NotImplementedException (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1079)
dotnet_diagnostic.rcs1080.severity = error      # Use 'Count/Length' property instead of 'Any' method (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1080)
dotnet_diagnostic.rcs1081.severity = error      # Split variable declaration (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1081)
dotnet_diagnostic.rcs1084.severity = error      # Use coalesce expression instead of conditional expression (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1084)
dotnet_diagnostic.rcs1085.severity = error      # Use auto-implemented property (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1085)
dotnet_diagnostic.rcs1089.severity = none       # Use --/++ operator instead of assignment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1089)
dotnet_diagnostic.rcs1090.severity = none       # Add/remove 'ConfigureAwait(false)' call (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1090)
dotnet_diagnostic.rcs1093.severity = error      # File contains no code (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1093)
dotnet_diagnostic.rcs1094.severity = none       # Declare using directive on top level (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1094)
dotnet_diagnostic.rcs1096.severity = error      # Use 'HasFlag' method or bitwise operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1096)
dotnet_diagnostic.rcs1097.severity = error      # Remove redundant 'ToString' call (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1097)
dotnet_diagnostic.rcs1098.severity = error      # Constant values should be placed on right side of comparisons (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1098)
dotnet_diagnostic.rcs1099.severity = error      # Default label should be the last label in a switch section (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1099)
dotnet_diagnostic.rcs1102.severity = suggestion # Make class static (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1102)
dotnet_diagnostic.rcs1103.severity = suggestion # Convert 'if' to assignment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1103)
dotnet_diagnostic.rcs1104.severity = error      # Simplify conditional expression (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1104)
dotnet_diagnostic.rcs1105.severity = error      # Unnecessary interpolation (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1105)
dotnet_diagnostic.rcs1107.severity = error      # Remove redundant 'ToCharArray' call (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1107)
dotnet_diagnostic.rcs1108.severity = error      # Add 'static' modifier to all partial class declarations (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1108)
dotnet_diagnostic.rcs1110.severity = none       # (redundant with CA1050) Declare type inside namespace (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1110)
dotnet_diagnostic.rcs1111.severity = none       # Add braces to switch section with multiple statements (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1111)
dotnet_diagnostic.rcs1112.severity = suggestion # Combine 'Enumerable.Where' method chain (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1112)
dotnet_diagnostic.rcs1113.severity = error      # Use 'string.IsNullOrEmpty' method (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1113)
dotnet_diagnostic.rcs1114.severity = error      # Remove redundant delegate creation (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1114)
dotnet_diagnostic.rcs1118.severity = suggestion # Mark local variable as const (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1118)
dotnet_diagnostic.rcs1123.severity = error      # Add parentheses when necessary (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1123)
dotnet_diagnostic.rcs1124.severity = suggestion # Inline local variable (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1124)
dotnet_diagnostic.rcs1126.severity = error      # Add braces to if-else (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1126)
dotnet_diagnostic.rcs1128.severity = error      # Use coalesce expression (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1128)
dotnet_diagnostic.rcs1129.severity = error      # Remove redundant field initialization (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1129)
dotnet_diagnostic.rcs1130.severity = error      # Bitwise operation on enum without Flags attribute (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1130)
dotnet_diagnostic.rcs1132.severity = error      # Remove redundant overriding member (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1132)
dotnet_diagnostic.rcs1133.severity = error      # Remove redundant Dispose/Close call (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1133)
dotnet_diagnostic.rcs1134.severity = error      # Remove redundant statement (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1134)
dotnet_diagnostic.rcs1135.severity = error      # Declare enum member with zero value (when enum has FlagsAttribute) (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1135)
dotnet_diagnostic.rcs1136.severity = suggestion # Merge switch sections with equivalent content (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1136)
dotnet_diagnostic.rcs1138.severity = error      # Add summary to documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1138)
dotnet_diagnostic.rcs1139.severity = error      # Add summary element to documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1139)
dotnet_diagnostic.rcs1140.severity = suggestion # Add exception to documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1140)
dotnet_diagnostic.rcs1141.severity = error      # Add 'param' element to documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1141)
dotnet_diagnostic.rcs1142.severity = error      # Add 'typeparam' element to documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1142)
dotnet_diagnostic.rcs1143.severity = error      # Simplify coalesce expression (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1143)
dotnet_diagnostic.rcs1145.severity = error      # Remove redundant 'as' operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1145)
dotnet_diagnostic.rcs1146.severity = error      # Use conditional access (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1146)
dotnet_diagnostic.rcs1151.severity = error      # Remove redundant cast (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1151)
dotnet_diagnostic.rcs1154.severity = error      # Sort enum members (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1154)
dotnet_diagnostic.rcs1155.severity = error      # Use StringComparison when comparing strings (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1155)
dotnet_diagnostic.rcs1156.severity = error      # Use string.Length instead of comparison with empty string (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1156)
dotnet_diagnostic.rcs1157.severity = error      # Composite enum value contains undefined flag (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1157)
dotnet_diagnostic.rcs1158.severity = error      # Static member in generic type should use a type parameter (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1158)
dotnet_diagnostic.rcs1159.severity = suggestion # Use EventHandler<T> (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1159)
dotnet_diagnostic.rcs1160.severity = error      # Abstract type should not have public constructors (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1160)
dotnet_diagnostic.rcs1161.severity = suggestion # Enum should declare explicit values (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1161)
dotnet_diagnostic.rcs1162.severity = error      # Avoid chain of assignments (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1162)
dotnet_diagnostic.rcs1163.severity = warning    # Unused parameter (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1163)
dotnet_diagnostic.rcs1164.severity = error      # Unused type parameter (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1164)
dotnet_diagnostic.rcs1165.severity = suggestion # Unconstrained type parameter checked for null (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1165)
dotnet_diagnostic.rcs1166.severity = error      # Value type object is never equal to null (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1166)
dotnet_diagnostic.rcs1168.severity = error      # Parameter name differs from base name (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1168)
dotnet_diagnostic.rcs1169.severity = error      # Make field read-only (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1169)
dotnet_diagnostic.rcs1170.severity = error      # Use read-only auto-implemented property (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1170)
dotnet_diagnostic.rcs1171.severity = error      # Simplify lazy initialization (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1171)
dotnet_diagnostic.rcs1172.severity = error      # Use 'is' operator instead of 'as' operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1172)
dotnet_diagnostic.rcs1173.severity = error      # Use coalesce expression instead of 'if' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1173)
dotnet_diagnostic.rcs1174.severity = error      # Remove redundant async/await (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1174)
dotnet_diagnostic.rcs1175.severity = suggestion # Unused 'this' parameter (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1175)
dotnet_diagnostic.rcs1179.severity = suggestion # Unnecessary assignment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1179)
dotnet_diagnostic.rcs1180.severity = suggestion # Inline lazy initialization (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1180)
dotnet_diagnostic.rcs1181.severity = suggestion # Convert comment to documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1181)
dotnet_diagnostic.rcs1182.severity = error      # Remove redundant base interface (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1182)
dotnet_diagnostic.rcs1186.severity = suggestion # Use Regex instance instead of static method (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1186)
dotnet_diagnostic.rcs1187.severity = error      # Use constant instead of field (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1187)
dotnet_diagnostic.rcs1188.severity = error      # Remove redundant auto-property initialization (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1188)
dotnet_diagnostic.rcs1189.severity = none       # Add or remove region name (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1189)
dotnet_diagnostic.rcs1190.severity = error      # Join string expressions (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1190)
dotnet_diagnostic.rcs1191.severity = error      # Declare enum value as combination of names (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1191)
dotnet_diagnostic.rcs1192.severity = error      # Unnecessary usage of verbatim string literal (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1192)
dotnet_diagnostic.rcs1193.severity = error      # Overriding member should not change 'params' modifier (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1193)
dotnet_diagnostic.rcs1194.severity = error      # Implement exception constructors (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1194)
dotnet_diagnostic.rcs1195.severity = error      # Use ^ operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1195)
dotnet_diagnostic.rcs1196.severity = error      # Call extension method as instance method (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1196)
dotnet_diagnostic.rcs1197.severity = error      # Optimize StringBuilder.Append/AppendLine call (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1197)
dotnet_diagnostic.rcs1198.severity = suggestion # Avoid unnecessary boxing of value type (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1198)
dotnet_diagnostic.rcs1199.severity = error      # Unnecessary null check (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1199)
dotnet_diagnostic.rcs1200.severity = error      # Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1200)
dotnet_diagnostic.rcs1201.severity = suggestion # Use method chaining (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1201)
dotnet_diagnostic.rcs1202.severity = error      # Avoid NullReferenceException (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1202)
dotnet_diagnostic.rcs1203.severity = error      # Use AttributeUsageAttribute (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1203)
dotnet_diagnostic.rcs1204.severity = error      # Use EventArgs.Empty (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1204)
dotnet_diagnostic.rcs1205.severity = error      # Order named arguments according to the order of parameters (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1205)
dotnet_diagnostic.rcs1206.severity = error      # Use conditional access instead of conditional expression (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1206)
dotnet_diagnostic.rcs1207.severity = error      # Use anonymous function or method group (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1207)
dotnet_diagnostic.rcs1208.severity = suggestion # Reduce 'if' nesting (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1208)
dotnet_diagnostic.rcs1209.severity = error      # Order type parameter constraints (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1209)
dotnet_diagnostic.rcs1210.severity = error      # Return completed task instead of returning null (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1210)
dotnet_diagnostic.rcs1211.severity = error      # Remove unnecessary 'else' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1211)
dotnet_diagnostic.rcs1212.severity = error      # Remove redundant assignment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1212)
dotnet_diagnostic.rcs1213.severity = warning    # Remove unused member declaration (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1213)
dotnet_diagnostic.rcs1214.severity = error      # Unnecessary interpolated string (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1214)
dotnet_diagnostic.rcs1215.severity = error      # Expression is always equal to true/false (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1215)
dotnet_diagnostic.rcs1216.severity = error      # Unnecessary unsafe context (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1216)
dotnet_diagnostic.rcs1217.severity = none       # Convert interpolated string to concatenation (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1217)
dotnet_diagnostic.rcs1218.severity = error      # Simplify code branching (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1218)
dotnet_diagnostic.rcs1220.severity = error      # Use pattern matching instead of combination of 'is' operator and cast operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1220)
dotnet_diagnostic.rcs1221.severity = error      # Use pattern matching instead of combination of 'as' operator and null check (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1221)
dotnet_diagnostic.rcs1222.severity = error      # Merge preprocessor directives (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1222)
dotnet_diagnostic.rcs1223.severity = none       # Mark publicly visible type with DebuggerDisplay attribute (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1223)
dotnet_diagnostic.rcs1224.severity = error      # Make method an extension method (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1224)
dotnet_diagnostic.rcs1225.severity = error      # Make class sealed (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1225)
dotnet_diagnostic.rcs1226.severity = suggestion # Add paragraph to documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1226)
dotnet_diagnostic.rcs1227.severity = error      # Validate arguments correctly (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1227)
dotnet_diagnostic.rcs1228.severity = error      # Unused element in a documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1228)
dotnet_diagnostic.rcs1229.severity = error      # Use async/await when necessary (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1229)
dotnet_diagnostic.rcs1230.severity = error      # Unnecessary explicit use of enumerator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1230)
dotnet_diagnostic.rcs1231.severity = suggestion # Make parameter ref read-only (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1231)
dotnet_diagnostic.rcs1232.severity = error      # Order elements in documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1232)
dotnet_diagnostic.rcs1233.severity = error      # Use short-circuiting operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1233)
dotnet_diagnostic.rcs1234.severity = error      # Duplicate enum value (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1234)
dotnet_diagnostic.rcs1235.severity = error      # Optimize method call (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1235)
dotnet_diagnostic.rcs1236.severity = error      # Use exception filter (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1236)
dotnet_diagnostic.rcs1238.severity = suggestion # Avoid nested ?: operators (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1238)
dotnet_diagnostic.rcs1239.severity = error      # Use 'for' statement instead of 'while' statement (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1239)
dotnet_diagnostic.rcs1240.severity = error      # Operator is unnecessary (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1240)
dotnet_diagnostic.rcs1241.severity = suggestion # Implement non-generic counterpart (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1241)
dotnet_diagnostic.rcs1242.severity = suggestion # Do not pass non-read-only struct by read-only reference (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1242)
dotnet_diagnostic.rcs1243.severity = error      # Duplicate word in a comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1243)
dotnet_diagnostic.rcs1244.severity = error      # Simplify 'default' expression (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1244)
dotnet_diagnostic.rcs1246.severity = error      # Use element access (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1246)
dotnet_diagnostic.rcs1247.severity = error      # Fix documentation comment tag (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1247)
dotnet_diagnostic.rcs1248.severity = error      # Normalize null check (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1248)
dotnet_diagnostic.rcs1249.severity = error      # Unnecessary null-forgiving operator (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1249)
dotnet_diagnostic.rcs1250.severity = error      # Use implicit/explicit object creation (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1250)
dotnet_diagnostic.rcs1251.severity = error      # Remove unnecessary braces from record declaration (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1251)
dotnet_diagnostic.rcs1252.severity = error      # Normalize usage of infinite loop (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1252)
dotnet_diagnostic.rcs1253.severity = error      # Format documentation comment summary (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1253)
dotnet_diagnostic.rcs1254.severity = error      # Normalize format of enum flag value (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1254)
dotnet_diagnostic.rcs1255.severity = none       # (redundant with CA1510) Simplify argument null check (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1255)
dotnet_diagnostic.rcs1256.severity = error      # Invalid argument null check (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1256)
dotnet_diagnostic.rcs1257.severity = error      # Use enum field explicitly (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1257)
dotnet_diagnostic.rcs1258.severity = error      # Unnecessary enum flag (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1258)
dotnet_diagnostic.rcs1259.severity = error      # Remove empty syntax (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1259)
dotnet_diagnostic.rcs1260.severity = none       # (causes too many false positives to be set to `error`) Add/remove trailing comma (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1260)
dotnet_diagnostic.rcs1261.severity = error      # Resource can be disposed asynchronously (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1261)
dotnet_diagnostic.rcs1262.severity = error      # Unnecessary raw string literal (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1262)
dotnet_diagnostic.rcs1263.severity = error      # Invalid reference in a documentation comment (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1263)
dotnet_diagnostic.rcs1264.severity = error      # Use 'var' or explicit type (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1264)
dotnet_diagnostic.rcs1265.severity = error      # Remove redundant catch block (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1265)
dotnet_diagnostic.rcs1266.severity = error      # Use raw string literal (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1266)
dotnet_diagnostic.rcs1267.severity = error      # Use string interpolation instead of 'string.Concat' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1267)
dotnet_diagnostic.rcs1268.severity = error      # Simplify numeric comparison (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1268)
dotnet_diagnostic.rcs9001.severity = error      # Use pattern matching (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9001)
dotnet_diagnostic.rcs9002.severity = error      # Use property SyntaxNode.SpanStart (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9002)
dotnet_diagnostic.rcs9003.severity = error      # Unnecessary conditional access (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9003)
dotnet_diagnostic.rcs9004.severity = error      # Call 'Any' instead of accessing 'Count' (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9004)
dotnet_diagnostic.rcs9005.severity = error      # Unnecessary null check (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9005)
dotnet_diagnostic.rcs9006.severity = error      # Use element access (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9006)
dotnet_diagnostic.rcs9007.severity = error      # Use return value (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9007)
dotnet_diagnostic.rcs9008.severity = none       # Call 'Last' instead of using [] (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9008)
dotnet_diagnostic.rcs9009.severity = error      # Unknown language name (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9009)
dotnet_diagnostic.rcs9010.severity = suggestion # Specify ExportCodeRefactoringProviderAttribute.Name (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9010)
dotnet_diagnostic.rcs9011.severity = suggestion # Specify ExportCodeFixProviderAttribute.Name (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs9011)

## Refactorings
roslynator_refactoring.add_all_properties_to_initializer.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0216
roslynator_refactoring.add_argument_name.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0011
roslynator_refactoring.add_braces.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0002
roslynator_refactoring.add_braces_to_if_else.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0003
roslynator_refactoring.add_braces_to_switch_section.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0004
roslynator_refactoring.add_braces_to_switch_sections.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0005
roslynator_refactoring.add_default_value_to_parameter.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0007
roslynator_refactoring.add_empty_line_between_declarations.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0205
roslynator_refactoring.add_exception_element_to_documentation_comment.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0009
roslynator_refactoring.add_generic_parameter_to_declaration.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0178
roslynator_refactoring.add_member_to_interface.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0195
roslynator_refactoring.add_missing_cases_to_switch.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0059
roslynator_refactoring.add_parameter_to_interface_member.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0213
roslynator_refactoring.add_tag_to_documentation_comment.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0208
roslynator_refactoring.add_using_directive.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0013
roslynator_refactoring.add_using_static_directive.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0014
roslynator_refactoring.call_extension_method_as_instance_method.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0016
roslynator_refactoring.call_indexof_instead_of_contains.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0144
roslynator_refactoring.change_accessibility.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0186
roslynator_refactoring.change_method_return_type_to_void.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0021
roslynator_refactoring.change_type_according_to_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0022
roslynator_refactoring.check_expression_for_null.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0024
roslynator_refactoring.check_parameter_for_null.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0025
roslynator_refactoring.comment_out_member_declaration.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0027
roslynator_refactoring.comment_out_statement.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0028
roslynator_refactoring.convert_auto_property_to_full_property.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0041
roslynator_refactoring.convert_auto_property_to_full_property_without_backing_field.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0040
roslynator_refactoring.convert_block_body_to_expression_body.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0169
roslynator_refactoring.convert_comment_to_documentation_comment.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0192
roslynator_refactoring.convert_conditional_expression_to_if_else.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0120
roslynator_refactoring.convert_do_to_while.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0123
roslynator_refactoring.convert_expression_body_to_block_body.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0037
roslynator_refactoring.convert_for_to_foreach.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0130
roslynator_refactoring.convert_for_to_while.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0131
roslynator_refactoring.convert_foreach_to_for.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0129
roslynator_refactoring.convert_foreach_to_for_and_reverse_loop.enabled = false # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0188
roslynator_refactoring.convert_hasflag_call_to_bitwise_operation.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0164
roslynator_refactoring.convert_hexadecimal_literal_to_decimal_literal.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0132
roslynator_refactoring.convert_if_to_conditional_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0166
roslynator_refactoring.convert_if_to_switch.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0133
roslynator_refactoring.convert_interpolated_string_to_concatenation.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0193
roslynator_refactoring.convert_interpolated_string_to_string_format.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0201
roslynator_refactoring.convert_interpolated_string_to_string_literal.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0136
roslynator_refactoring.convert_lambda_block_body_to_expression_body.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0154
roslynator_refactoring.convert_lambda_expression_body_to_block_body.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0039
roslynator_refactoring.convert_method_group_to_lambda.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0137
roslynator_refactoring.convert_regular_string_literal_to_verbatim_string_literal.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0142
roslynator_refactoring.convert_return_statement_to_if.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0143
roslynator_refactoring.convert_statements_to_if_else.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0211
roslynator_refactoring.convert_string_format_to_interpolated_string.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0145
roslynator_refactoring.convert_switch_expression_to_switch_statement.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0214
roslynator_refactoring.convert_switch_to_if.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0147
roslynator_refactoring.convert_verbatim_string_literal_to_regular_string_literal.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0148
roslynator_refactoring.convert_verbatim_string_literal_to_regular_string_literals.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0149
roslynator_refactoring.convert_while_to_do.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0150
roslynator_refactoring.convert_while_to_for.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0151
roslynator_refactoring.copy_argument.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0030
roslynator_refactoring.copy_documentation_comment_from_base_member.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0029
roslynator_refactoring.copy_member_declaration.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0031
roslynator_refactoring.copy_parameter.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0032
roslynator_refactoring.copy_statement.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0033
roslynator_refactoring.copy_switch_section.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0212
roslynator_refactoring.deconstruct_foreach_variable.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0217
roslynator_refactoring.expand_coalesce_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0035
roslynator_refactoring.expand_compound_assignment.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0034
roslynator_refactoring.expand_event_declaration.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0036
roslynator_refactoring.expand_initializer.enabled = false # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0038
roslynator_refactoring.expand_positional_constructor.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0215
roslynator_refactoring.extract_event_handler_method.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0203
roslynator_refactoring.extract_expression_from_condition.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0043
roslynator_refactoring.extract_type_declaration_to_new_file.enabled = false # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0046
roslynator_refactoring.generate_base_constructors.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0054
roslynator_refactoring.generate_combined_enum_member.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0055
roslynator_refactoring.generate_enum_member.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0056
roslynator_refactoring.generate_enum_values.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0057
roslynator_refactoring.generate_event_invoking_method.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0058
roslynator_refactoring.generate_property_for_debuggerdisplay_attribute.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0204
roslynator_refactoring.implement_custom_enumerator.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0210
roslynator_refactoring.implement_iequatable.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0179
roslynator_refactoring.initialize_field_from_constructor.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0197
roslynator_refactoring.initialize_local_variable_with_default_value.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0060
roslynator_refactoring.inline_alias_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0061
roslynator_refactoring.inline_constant.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0181
roslynator_refactoring.inline_constant_value.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0127
roslynator_refactoring.inline_method.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0062
roslynator_refactoring.inline_property.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0198
roslynator_refactoring.inline_using_static.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0180
roslynator_refactoring.insert_string_interpolation.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0063
roslynator_refactoring.introduce_and_initialize_field.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0064
roslynator_refactoring.introduce_and_initialize_property.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0065
roslynator_refactoring.introduce_constructor.enabled = false # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0066
roslynator_refactoring.introduce_field_to_lock_on.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0067
roslynator_refactoring.introduce_local_variable.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0068
roslynator_refactoring.invert_binary_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0079
roslynator_refactoring.invert_boolean_literal.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0080
roslynator_refactoring.invert_conditional_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0160
roslynator_refactoring.invert_if.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0189
roslynator_refactoring.invert_if_else.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0162
roslynator_refactoring.invert_is_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0081
roslynator_refactoring.invert_linq_method_call.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0116
roslynator_refactoring.invert_operator.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0082
roslynator_refactoring.invert_prefix_or_postfix_unary_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0134
roslynator_refactoring.join_string_expressions.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0078
roslynator_refactoring.make_member_abstract.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0069
roslynator_refactoring.make_member_virtual.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0070
roslynator_refactoring.merge_attributes.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0075
roslynator_refactoring.merge_if_statements.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0074
roslynator_refactoring.merge_if_with_parent_if.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0196
roslynator_refactoring.merge_local_declarations.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0077
roslynator_refactoring.merge_switch_sections.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0110
roslynator_refactoring.move_unsafe_context_to_containing_declaration.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0202
roslynator_refactoring.notify_when_property_changes.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0083
roslynator_refactoring.parenthesize_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0084
roslynator_refactoring.promote_local_variable_to_parameter.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0085
roslynator_refactoring.remove_all_comments.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0086
roslynator_refactoring.remove_all_comments_except_documentation_comments.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0087
roslynator_refactoring.remove_all_documentation_comments.enabled = false # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0088
roslynator_refactoring.remove_all_member_declarations.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0089
roslynator_refactoring.remove_all_preprocessor_directives.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0090
roslynator_refactoring.remove_all_region_directives.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0091
roslynator_refactoring.remove_all_statements.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0092
roslynator_refactoring.remove_all_switch_sections.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0093
roslynator_refactoring.remove_argument_name.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0105
roslynator_refactoring.remove_async_await.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0209
roslynator_refactoring.remove_braces.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0094
roslynator_refactoring.remove_braces_from_if_else.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0095
roslynator_refactoring.remove_braces_from_switch_section.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0096
roslynator_refactoring.remove_braces_from_switch_sections.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0097
roslynator_refactoring.remove_comment.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0098
roslynator_refactoring.remove_condition_from_last_else.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0099
roslynator_refactoring.remove_containing_statement.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0045
roslynator_refactoring.remove_empty_lines.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0101
roslynator_refactoring.remove_enum_member_value.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0199
roslynator_refactoring.remove_instantiation_of_local_variable.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0185
roslynator_refactoring.remove_interpolation.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0102
roslynator_refactoring.remove_member_declaration.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0103
roslynator_refactoring.remove_member_declarations_above_or_below.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0104
roslynator_refactoring.remove_parentheses.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0106
roslynator_refactoring.remove_preprocessor_directive.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0100
roslynator_refactoring.remove_property_initializer.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0107
roslynator_refactoring.remove_region.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0108
roslynator_refactoring.remove_statement.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0109
roslynator_refactoring.remove_unnecessary_assignment.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0073
roslynator_refactoring.rename_identifier_according_to_type_name.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0112
roslynator_refactoring.rename_method_according_to_type_name.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0113
roslynator_refactoring.rename_parameter_according_to_type_name.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0114
roslynator_refactoring.rename_property_according_to_type_name.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0115
roslynator_refactoring.replace_as_expression_with_explicit_cast.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0117
roslynator_refactoring.replace_conditional_expression_with_true_or_false_branch.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0119
roslynator_refactoring.replace_equality_operator_with_string_equals.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0124
roslynator_refactoring.replace_equality_operator_with_string_isnullorempty.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0125
roslynator_refactoring.replace_equality_operator_with_string_isnullorwhitespace.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0126
roslynator_refactoring.replace_explicit_cast_with_as_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0118
roslynator_refactoring.replace_interpolated_string_with_interpolation_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0135
roslynator_refactoring.replace_method_with_property.enabled = false # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0138
roslynator_refactoring.replace_null_literal_with_default_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0139
roslynator_refactoring.replace_prefix_operator_with_postfix_operator.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0140
roslynator_refactoring.replace_property_with_method.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0141
roslynator_refactoring.reverse_for_statement.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0152
roslynator_refactoring.simplify_if.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0153
roslynator_refactoring.sort_case_labels.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0207
roslynator_refactoring.sort_member_declarations.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0155
roslynator_refactoring.split_attributes.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0156
roslynator_refactoring.split_if.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0184
roslynator_refactoring.split_if_else.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0190
roslynator_refactoring.split_local_declaration_and_assignment.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0194
roslynator_refactoring.split_switch_labels.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0157
roslynator_refactoring.split_variable_declaration.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0158
roslynator_refactoring.swap_binary_operands.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0159
roslynator_refactoring.swap_member_declarations.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0161
roslynator_refactoring.sync_property_name_and_backing_field_name.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0111
roslynator_refactoring.uncomment_multiline_comment.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0200
roslynator_refactoring.uncomment_singleline_comment.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0163
roslynator_refactoring.use_coalesce_expression_instead_of_if.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0165
roslynator_refactoring.use_constant_instead_of_readonly_field.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0128
roslynator_refactoring.use_element_access_instead_of_linq_method.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0167
roslynator_refactoring.use_enumerator_explicitly.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0206
roslynator_refactoring.use_explicit_type.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0023
roslynator_refactoring.use_implicit_type.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0018
roslynator_refactoring.use_index_initializer.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0191
roslynator_refactoring.use_lambda_instead_of_anonymous_method.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0170
roslynator_refactoring.use_list_instead_of_yield.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0183
roslynator_refactoring.use_object_initializer.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0026
roslynator_refactoring.use_readonly_field_instead_of_constant.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0121
roslynator_refactoring.use_string_empty_instead_of_empty_string_literal.enabled = false # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0171
roslynator_refactoring.use_stringbuilder_instead_of_concatenation.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0182
roslynator_refactoring.wrap_arguments.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0048
roslynator_refactoring.wrap_binary_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0049
roslynator_refactoring.wrap_call_chain.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0051
roslynator_refactoring.wrap_conditional_expression.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0050
roslynator_refactoring.wrap_constraint_clauses.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0187
roslynator_refactoring.wrap_initializer_expressions.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0052
roslynator_refactoring.wrap_lines_in_preprocessor_directive.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0174
roslynator_refactoring.wrap_lines_in_region.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0175
roslynator_refactoring.wrap_lines_in_try_catch.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0176
roslynator_refactoring.wrap_parameters.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0053
roslynator_refactoring.wrap_statements_in_condition.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0172
roslynator_refactoring.wrap_statements_in_using_statement.enabled = true # https://josefpihrt.github.io/docs/roslynator/refactorings/RR0177

## Compiler diagnostic fixes
roslynator_compiler_diagnostic_fix.cs0019.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/CS0019
roslynator_compiler_diagnostic_fix.cs0021.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0021
roslynator_compiler_diagnostic_fix.cs0023.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0023
roslynator_compiler_diagnostic_fix.cs0029.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0029
roslynator_compiler_diagnostic_fix.cs0030.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0030
roslynator_compiler_diagnostic_fix.cs0037.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0037
roslynator_compiler_diagnostic_fix.cs0069.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0069
roslynator_compiler_diagnostic_fix.cs0077.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0077
roslynator_compiler_diagnostic_fix.cs0080.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0080
roslynator_compiler_diagnostic_fix.cs0101.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0101
roslynator_compiler_diagnostic_fix.cs0102.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0102
roslynator_compiler_diagnostic_fix.cs0103.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0103
roslynator_compiler_diagnostic_fix.cs0106.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0106
roslynator_compiler_diagnostic_fix.cs0107.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0107
roslynator_compiler_diagnostic_fix.cs0108.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0108
roslynator_compiler_diagnostic_fix.cs0109.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0109
roslynator_compiler_diagnostic_fix.cs0112.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0112
roslynator_compiler_diagnostic_fix.cs0114.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0114
roslynator_compiler_diagnostic_fix.cs0115.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0115
roslynator_compiler_diagnostic_fix.cs0119.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0119
roslynator_compiler_diagnostic_fix.cs0120.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0120
roslynator_compiler_diagnostic_fix.cs0123.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0123
roslynator_compiler_diagnostic_fix.cs0126.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0126
roslynator_compiler_diagnostic_fix.cs0127.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0127
roslynator_compiler_diagnostic_fix.cs0128.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0128
roslynator_compiler_diagnostic_fix.cs0131.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0131
roslynator_compiler_diagnostic_fix.cs0132.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0132
roslynator_compiler_diagnostic_fix.cs0133.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0133
roslynator_compiler_diagnostic_fix.cs0136.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0136
roslynator_compiler_diagnostic_fix.cs0139.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0139
roslynator_compiler_diagnostic_fix.cs0152.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0152
roslynator_compiler_diagnostic_fix.cs0161.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0161
roslynator_compiler_diagnostic_fix.cs0162.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0162
roslynator_compiler_diagnostic_fix.cs0163.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0163
roslynator_compiler_diagnostic_fix.cs0164.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0164
roslynator_compiler_diagnostic_fix.cs0165.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0165
roslynator_compiler_diagnostic_fix.cs0168.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0168
roslynator_compiler_diagnostic_fix.cs0173.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0173
roslynator_compiler_diagnostic_fix.cs0177.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0177
roslynator_compiler_diagnostic_fix.cs0191.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0191
roslynator_compiler_diagnostic_fix.cs0192.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0192
roslynator_compiler_diagnostic_fix.cs0201.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0201
roslynator_compiler_diagnostic_fix.cs0214.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0214
roslynator_compiler_diagnostic_fix.cs0216.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0216
roslynator_compiler_diagnostic_fix.cs0219.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0219
roslynator_compiler_diagnostic_fix.cs0221.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0221
roslynator_compiler_diagnostic_fix.cs0225.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0225
roslynator_compiler_diagnostic_fix.cs0238.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0238
roslynator_compiler_diagnostic_fix.cs0246.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0246
roslynator_compiler_diagnostic_fix.cs0260.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0260
roslynator_compiler_diagnostic_fix.cs0262.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0262
roslynator_compiler_diagnostic_fix.cs0266.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0266
roslynator_compiler_diagnostic_fix.cs0267.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0267
roslynator_compiler_diagnostic_fix.cs0272.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0272
roslynator_compiler_diagnostic_fix.cs0275.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0275
roslynator_compiler_diagnostic_fix.cs0305.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0305
roslynator_compiler_diagnostic_fix.cs0401.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0401
roslynator_compiler_diagnostic_fix.cs0403.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0403
roslynator_compiler_diagnostic_fix.cs0405.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0405
roslynator_compiler_diagnostic_fix.cs0407.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0407
roslynator_compiler_diagnostic_fix.cs0409.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0409
roslynator_compiler_diagnostic_fix.cs0428.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0428
roslynator_compiler_diagnostic_fix.cs0441.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0441
roslynator_compiler_diagnostic_fix.cs0442.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0442
roslynator_compiler_diagnostic_fix.cs0449.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0449
roslynator_compiler_diagnostic_fix.cs0450.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0450
roslynator_compiler_diagnostic_fix.cs0451.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0451
roslynator_compiler_diagnostic_fix.cs0472.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0472
roslynator_compiler_diagnostic_fix.cs0500.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0500
roslynator_compiler_diagnostic_fix.cs0501.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0501
roslynator_compiler_diagnostic_fix.cs0507.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0507
roslynator_compiler_diagnostic_fix.cs0508.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0508
roslynator_compiler_diagnostic_fix.cs0513.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0513
roslynator_compiler_diagnostic_fix.cs0515.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0515
roslynator_compiler_diagnostic_fix.cs0524.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0524
roslynator_compiler_diagnostic_fix.cs0525.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0525
roslynator_compiler_diagnostic_fix.cs0527.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0527
roslynator_compiler_diagnostic_fix.cs0531.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0531
roslynator_compiler_diagnostic_fix.cs0539.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0539
roslynator_compiler_diagnostic_fix.cs0541.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0541
roslynator_compiler_diagnostic_fix.cs0549.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0549
roslynator_compiler_diagnostic_fix.cs0558.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0558
roslynator_compiler_diagnostic_fix.cs0567.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0567
roslynator_compiler_diagnostic_fix.cs0568.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0568
roslynator_compiler_diagnostic_fix.cs0573.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0573
roslynator_compiler_diagnostic_fix.cs0574.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0574
roslynator_compiler_diagnostic_fix.cs0575.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0575
roslynator_compiler_diagnostic_fix.cs0579.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0579
roslynator_compiler_diagnostic_fix.cs0592.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0592
roslynator_compiler_diagnostic_fix.cs0621.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0621
roslynator_compiler_diagnostic_fix.cs0628.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0628
roslynator_compiler_diagnostic_fix.cs0659.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0659
roslynator_compiler_diagnostic_fix.cs0660.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0660
roslynator_compiler_diagnostic_fix.cs0661.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0661
roslynator_compiler_diagnostic_fix.cs0678.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0678
roslynator_compiler_diagnostic_fix.cs0693.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0693
roslynator_compiler_diagnostic_fix.cs0708.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0708
roslynator_compiler_diagnostic_fix.cs0710.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0710
roslynator_compiler_diagnostic_fix.cs0713.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0713
roslynator_compiler_diagnostic_fix.cs0714.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0714
roslynator_compiler_diagnostic_fix.cs0718.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0718
roslynator_compiler_diagnostic_fix.cs0750.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0750
roslynator_compiler_diagnostic_fix.cs0751.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0751
roslynator_compiler_diagnostic_fix.cs0753.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0753
roslynator_compiler_diagnostic_fix.cs0756.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0756
roslynator_compiler_diagnostic_fix.cs0759.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0759
roslynator_compiler_diagnostic_fix.cs0766.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0766
roslynator_compiler_diagnostic_fix.cs0815.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0815
roslynator_compiler_diagnostic_fix.cs0819.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0819
roslynator_compiler_diagnostic_fix.cs0822.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs0822
roslynator_compiler_diagnostic_fix.cs1002.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1002
roslynator_compiler_diagnostic_fix.cs1003.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1003
roslynator_compiler_diagnostic_fix.cs1004.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1004
roslynator_compiler_diagnostic_fix.cs1012.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1012
roslynator_compiler_diagnostic_fix.cs1023.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1023
roslynator_compiler_diagnostic_fix.cs1031.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1031
roslynator_compiler_diagnostic_fix.cs1057.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1057
roslynator_compiler_diagnostic_fix.cs1061.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1061
roslynator_compiler_diagnostic_fix.cs1100.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1100
roslynator_compiler_diagnostic_fix.cs1105.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1105
roslynator_compiler_diagnostic_fix.cs1106.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1106
roslynator_compiler_diagnostic_fix.cs1503.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1503
roslynator_compiler_diagnostic_fix.cs1522.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1522
roslynator_compiler_diagnostic_fix.cs1526.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1526
roslynator_compiler_diagnostic_fix.cs1527.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1527
roslynator_compiler_diagnostic_fix.cs1591.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1591
roslynator_compiler_diagnostic_fix.cs1597.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1597
roslynator_compiler_diagnostic_fix.cs1609.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1609
roslynator_compiler_diagnostic_fix.cs1615.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1615
roslynator_compiler_diagnostic_fix.cs1620.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1620
roslynator_compiler_diagnostic_fix.cs1621.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1621
roslynator_compiler_diagnostic_fix.cs1622.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1622
roslynator_compiler_diagnostic_fix.cs1623.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1623
roslynator_compiler_diagnostic_fix.cs1624.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1624
roslynator_compiler_diagnostic_fix.cs1643.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1643
roslynator_compiler_diagnostic_fix.cs1674.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1674
roslynator_compiler_diagnostic_fix.cs1689.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1689
roslynator_compiler_diagnostic_fix.cs1715.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1715
roslynator_compiler_diagnostic_fix.cs1717.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1717
roslynator_compiler_diagnostic_fix.cs1722.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1722
roslynator_compiler_diagnostic_fix.cs1737.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1737
roslynator_compiler_diagnostic_fix.cs1741.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1741
roslynator_compiler_diagnostic_fix.cs1743.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1743
roslynator_compiler_diagnostic_fix.cs1750.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1750
roslynator_compiler_diagnostic_fix.cs1751.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1751
roslynator_compiler_diagnostic_fix.cs1955.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1955
roslynator_compiler_diagnostic_fix.cs1983.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1983
roslynator_compiler_diagnostic_fix.cs1988.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1988
roslynator_compiler_diagnostic_fix.cs1994.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1994
roslynator_compiler_diagnostic_fix.cs1997.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs1997
roslynator_compiler_diagnostic_fix.cs3000.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3000
roslynator_compiler_diagnostic_fix.cs3001.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3001
roslynator_compiler_diagnostic_fix.cs3002.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3002
roslynator_compiler_diagnostic_fix.cs3003.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3003
roslynator_compiler_diagnostic_fix.cs3005.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3005
roslynator_compiler_diagnostic_fix.cs3006.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3006
roslynator_compiler_diagnostic_fix.cs3007.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3007
roslynator_compiler_diagnostic_fix.cs3008.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3008
roslynator_compiler_diagnostic_fix.cs3009.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3009
roslynator_compiler_diagnostic_fix.cs3016.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3016
roslynator_compiler_diagnostic_fix.cs3024.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3024
roslynator_compiler_diagnostic_fix.cs3027.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs3027
roslynator_compiler_diagnostic_fix.cs7036.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs7036
roslynator_compiler_diagnostic_fix.cs8050.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8050
roslynator_compiler_diagnostic_fix.cs8070.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8070
roslynator_compiler_diagnostic_fix.cs8112.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8112
roslynator_compiler_diagnostic_fix.cs8139.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8139
roslynator_compiler_diagnostic_fix.cs8340.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8340
roslynator_compiler_diagnostic_fix.cs8403.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8403
roslynator_compiler_diagnostic_fix.cs8600.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8600
roslynator_compiler_diagnostic_fix.cs8602.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8602
roslynator_compiler_diagnostic_fix.cs8604.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8604
roslynator_compiler_diagnostic_fix.cs8610.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8610
roslynator_compiler_diagnostic_fix.cs8618.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8618
roslynator_compiler_diagnostic_fix.cs8625.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8625
roslynator_compiler_diagnostic_fix.cs8632.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8632
roslynator_compiler_diagnostic_fix.cs8765.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8765
roslynator_compiler_diagnostic_fix.cs8767.enabled = true # https://josefpihrt.github.io/docs/roslynator/fixes/cs8767

# Meziantou.Analyzer

dotnet_diagnostic.ma0001.severity = error      # StringComparison is missing (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0001.md)
dotnet_diagnostic.ma0002.severity = error      # IEqualityComparer<string> or IComparer<string> is missing (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0002.md)
dotnet_diagnostic.ma0003.severity = error      # Add parameter name to improve readability (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0003.md)
dotnet_diagnostic.ma0004.severity = none       # Use Task.ConfigureAwait (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0004.md)
dotnet_diagnostic.ma0005.severity = none       # Use Array.Empty<T>() (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0005.md)
dotnet_diagnostic.ma0006.severity = error      # Use String.Equals instead of equality operator (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0006.md)
dotnet_diagnostic.ma0007.severity = error      # Add a comma after the last value (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0007.md)
dotnet_diagnostic.ma0008.severity = error      # Add StructLayoutAttribute (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0008.md)
dotnet_diagnostic.ma0009.severity = error      # Add regex evaluation timeout (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0009.md)
dotnet_diagnostic.ma0010.severity = error      # Mark attributes with AttributeUsageAttribute (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0010.md)
dotnet_diagnostic.ma0011.severity = error      # IFormatProvider is missing (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0011.md)
dotnet_diagnostic.ma0012.severity = error      # Do not raise reserved exception type (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0012.md)
dotnet_diagnostic.ma0013.severity = error      # Types should not extend System.ApplicationException (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0013.md)
dotnet_diagnostic.ma0014.severity = error      # Do not raise System.ApplicationException type (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0014.md)
dotnet_diagnostic.ma0015.severity = error      # Specify the parameter name in ArgumentException (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0015.md)
dotnet_diagnostic.ma0016.severity = none       # Prefer using collection abstraction instead of implementation (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0016.md)
dotnet_diagnostic.ma0017.severity = error      # Abstract types should not have public or internal constructors (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0017.md)
dotnet_diagnostic.ma0018.severity = none       # Do not declare static members on generic types (deprecated; use CA1000 instead) (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0018.md)
dotnet_diagnostic.ma0019.severity = error      # Use EventArgs.Empty (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0019.md)
dotnet_diagnostic.ma0020.severity = error      # Use direct methods instead of LINQ methods (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0020.md)
dotnet_diagnostic.ma0021.severity = error      # Use StringComparer.GetHashCode instead of string.GetHashCode (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0021.md)
dotnet_diagnostic.ma0022.severity = error      # Return Task.FromResult instead of returning null (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0022.md)
dotnet_diagnostic.ma0023.severity = error      # Add RegexOptions.ExplicitCapture (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0023.md)
dotnet_diagnostic.ma0024.severity = error      # Use an explicit StringComparer when possible (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0024.md)
dotnet_diagnostic.ma0025.severity = none       # Implement the functionality instead of throwing NotImplementedException (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0025.md)
dotnet_diagnostic.ma0026.severity = none       # Fix TODO comment (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0026.md)
dotnet_diagnostic.ma0027.severity = error      # Prefer rethrowing an exception implicitly (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0027.md)
dotnet_diagnostic.ma0028.severity = none       # (gives outdated recommendation to replace string interpolation with multiple appends) Optimize StringBuilder usage (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0028.md)
dotnet_diagnostic.ma0029.severity = error      # Combine LINQ methods (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0029.md)
dotnet_diagnostic.ma0030.severity = error      # Remove useless OrderBy call (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0030.md)
dotnet_diagnostic.ma0031.severity = error      # Optimize Enumerable.Count() usage (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0031.md)
dotnet_diagnostic.ma0032.severity = error      # Use an overload with a CancellationToken argument (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0032.md)
dotnet_diagnostic.ma0033.severity = error      # Do not tag instance fields with ThreadStaticAttribute (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0033.md)
dotnet_diagnostic.ma0035.severity = error      # Do not use dangerous threading methods (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0035.md)
dotnet_diagnostic.ma0036.severity = suggestion # Make class static (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0036.md)
dotnet_diagnostic.ma0037.severity = none       # (redundant with rcs1259) Remove empty statement (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0037.md)
dotnet_diagnostic.ma0038.severity = none       # Make method static (deprecated, use CA1822 instead) (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0038.md)
dotnet_diagnostic.ma0039.severity = error      # Do not write your own certificate validation method (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0039.md)
dotnet_diagnostic.ma0040.severity = error      # Forward the CancellationToken parameter to methods that take one (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0040.md)
dotnet_diagnostic.ma0041.severity = none       # Make property static (deprecated, use CA1822 instead) (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0041.md)
dotnet_diagnostic.ma0042.severity = error      # Do not use blocking calls in an async method (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0042.md)
dotnet_diagnostic.ma0043.severity = error      # Use nameof operator in ArgumentException (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0043.md)
dotnet_diagnostic.ma0044.severity = error      # Remove useless ToString call (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0044.md)
dotnet_diagnostic.ma0045.severity = error      # Do not use blocking calls in a sync method (need to make calling method async) (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0045.md)
dotnet_diagnostic.ma0046.severity = suggestion # Use EventHandler<T> to declare events (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0046.md)
dotnet_diagnostic.ma0047.severity = none       # (redundant with CA1050) Declare types in namespaces (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0047.md)
dotnet_diagnostic.ma0048.severity = none       # (causes false positive with multiple types in file) File name must match type name (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0048.md)
dotnet_diagnostic.ma0049.severity = error      # Type name should not match containing namespace (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0049.md)
dotnet_diagnostic.ma0050.severity = error      # Validate arguments correctly in iterator methods (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0050.md)
dotnet_diagnostic.ma0051.severity = none       # Method is too long (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0051.md)
dotnet_diagnostic.ma0052.severity = error      # Replace constant Enum.ToString with nameof (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0052.md)
dotnet_diagnostic.ma0053.severity = none       # (redundant with CA1852) Make class sealed (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0053.md)
dotnet_diagnostic.ma0054.severity = error      # Embed the caught exception as innerException (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0054.md)
dotnet_diagnostic.ma0055.severity = error      # Do not use finalizer (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0055.md)
dotnet_diagnostic.ma0056.severity = error      # Do not call overridable members in constructor (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0056.md)
dotnet_diagnostic.ma0057.severity = error      # Class name should end with 'Attribute' (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0057.md)
dotnet_diagnostic.ma0058.severity = error      # Class name should end with 'Exception' (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0058.md)
dotnet_diagnostic.ma0059.severity = error      # Class name should end with 'EventArgs' (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0059.md)
dotnet_diagnostic.ma0060.severity = error      # The value returned by Stream.Read/Stream.ReadAsync is not used (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0060.md)
dotnet_diagnostic.ma0061.severity = error      # Method overrides should not change default values (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0061.md)
dotnet_diagnostic.ma0062.severity = error      # Non-flags enums should not be marked with "FlagsAttribute" (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0062.md)
dotnet_diagnostic.ma0063.severity = error      # Use Where before OrderBy (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0063.md)
dotnet_diagnostic.ma0064.severity = error      # Avoid locking on publicly accessible instance (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0064.md)
dotnet_diagnostic.ma0065.severity = error      # Default ValueType.Equals or HashCode is used for struct equality (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0065.md)
dotnet_diagnostic.ma0066.severity = error      # Hash table unfriendly type is used in a hash table (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0066.md)
dotnet_diagnostic.ma0067.severity = error      # Use Guid.Empty (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0067.md)
dotnet_diagnostic.ma0068.severity = error      # Invalid parameter name for nullable attribute (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0068.md)
dotnet_diagnostic.ma0069.severity = error      # Non-constant static fields should not be visible (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0069.md)
dotnet_diagnostic.ma0070.severity = error      # Obsolete attributes should include explanations (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0070.md)
dotnet_diagnostic.ma0071.severity = none       # (conflicts with S126) Avoid using redundant else (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0071.md)
dotnet_diagnostic.ma0072.severity = error      # Do not throw from a finally block (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0072.md)
dotnet_diagnostic.ma0073.severity = error      # Avoid comparison with bool constant (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0073.md)
dotnet_diagnostic.ma0074.severity = none       # (redundant with CA1310) Avoid implicit culture-sensitive methods (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0074.md)
dotnet_diagnostic.ma0075.severity = error      # Do not use implicit culture-sensitive ToString (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0075.md)
dotnet_diagnostic.ma0076.severity = error      # Do not use implicit culture-sensitive ToString in interpolated strings (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0076.md)
dotnet_diagnostic.ma0077.severity = error      # A class that provides Equals(T) should implement IEquatable<T> (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0077.md)
dotnet_diagnostic.ma0078.severity = error      # Use 'Cast' instead of 'Select' to cast (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0078.md)
dotnet_diagnostic.ma0079.severity = error      # Forward the CancellationToken using .WithCancellation() (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0079.md)
dotnet_diagnostic.ma0080.severity = error      # Use a cancellation token using .WithCancellation() (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0080.md)
dotnet_diagnostic.ma0081.severity = error      # Method overrides should not omit params keyword (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0081.md)
dotnet_diagnostic.ma0082.severity = error      # NaN should not be used in comparisons (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0082.md)
dotnet_diagnostic.ma0083.severity = error      # ConstructorArgument parameters should exist in constructors (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0083.md)
dotnet_diagnostic.ma0084.severity = error      # Local variables should not hide other symbols (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0084.md)
dotnet_diagnostic.ma0085.severity = error      # Anonymous delegates should not be used to unsubscribe from Events (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0085.md)
dotnet_diagnostic.ma0086.severity = error      # Do not throw from a finalizer (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0086.md)
dotnet_diagnostic.ma0087.severity = error      # Parameters with [DefaultParameterValue] attributes should also be marked [Optional] (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0087.md)
dotnet_diagnostic.ma0088.severity = error      # Use [DefaultParameterValue] instead of [DefaultValue] (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0088.md)
dotnet_diagnostic.ma0089.severity = error      # Optimize string method usage (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0089.md)
dotnet_diagnostic.ma0090.severity = error      # Remove empty else/finally block (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0090.md)
dotnet_diagnostic.ma0091.severity = error      # Sender should be 'this' for instance events (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0091.md)
dotnet_diagnostic.ma0092.severity = error      # Sender should be 'null' for static events (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0092.md)
dotnet_diagnostic.ma0093.severity = error      # EventArgs should not be null (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0093.md)
dotnet_diagnostic.ma0094.severity = error      # A class that provides CompareTo(T) should implement IComparable<T> (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0094.md)
dotnet_diagnostic.ma0095.severity = error      # A class that implements IEquatable<T> should override Equals(object) (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0095.md)
dotnet_diagnostic.ma0096.severity = error      # A class that implements IComparable<T> should also implement IEquatable<T> (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0096.md)
dotnet_diagnostic.ma0097.severity = error      # A class that implements IComparable<T> or IComparable should override comparison operators (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0097.md)
dotnet_diagnostic.ma0098.severity = error      # Use indexer instead of LINQ methods (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0098.md)
dotnet_diagnostic.ma0099.severity = error      # Use Explicit enum value instead of 0 (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0099.md)
dotnet_diagnostic.ma0100.severity = error      # Await task before disposing of resources (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0100.md)
dotnet_diagnostic.ma0101.severity = suggestion # String contains an implicit end of line character (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0101.md)
dotnet_diagnostic.ma0102.severity = error      # Make member readonly (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0102.md)
dotnet_diagnostic.ma0103.severity = error      # Use SequenceEqual instead of equality operator (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0103.md)
dotnet_diagnostic.ma0104.severity = error      # Do not create a type with a name from the BCL (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0104.md)
dotnet_diagnostic.ma0105.severity = error      # Use the lambda parameters instead of using a closure (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0105.md)
dotnet_diagnostic.ma0106.severity = error      # Avoid closure by using an overload with the 'factoryArgument' parameter (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0106.md)
dotnet_diagnostic.ma0107.severity = error      # Do not use culture-sensitive object.ToString (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0107.md)
dotnet_diagnostic.ma0108.severity = error      # Remove redundant argument value (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0108.md)
dotnet_diagnostic.ma0109.severity = error      # Consider adding an overload with a Span<T> or Memory<T> (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0109.md)
dotnet_diagnostic.ma0110.severity = error      # Use the Regex source generator (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0110.md)
dotnet_diagnostic.ma0111.severity = error      # Use string.Create instead of FormattableString (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0111.md)
dotnet_diagnostic.ma0112.severity = error      # Use 'Count > 0' instead of 'Any()' (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0112.md)
dotnet_diagnostic.ma0113.severity = error      # Use DateTime.UnixEpoch (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0113.md)
dotnet_diagnostic.ma0114.severity = error      # Use DateTimeOffset.UnixEpoch (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0114.md)
dotnet_diagnostic.ma0115.severity = error      # Unknown component parameter (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0115.md)
dotnet_diagnostic.ma0116.severity = error      # Parameters with [SupplyParameterFromQuery] attributes should also be marked as [Parameter] (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0116.md)
dotnet_diagnostic.ma0117.severity = error      # Parameters with [EditorRequired] attributes should also be marked as [Parameter] (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0117.md)
dotnet_diagnostic.ma0118.severity = error      # [JSInvokable] methods must be public (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0118.md)
dotnet_diagnostic.ma0119.severity = error      # JSRuntime must not be used in OnInitialized or OnInitializedAsync (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0119.md)
dotnet_diagnostic.ma0120.severity = error      # Use InvokeVoidAsync when the returned value is not used (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0120.md)
dotnet_diagnostic.ma0121.severity = error      # Do not overwrite parameter value (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0121.md)
dotnet_diagnostic.ma0122.severity = error      # Parameters with [SupplyParameterFromQuery] attributes are only valid in routable components (@page) (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0122.md)
dotnet_diagnostic.ma0123.severity = error      # Sequence number must be a constant (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0123.md)
dotnet_diagnostic.ma0124.severity = error      # Log parameter type is not valid (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0124.md)
dotnet_diagnostic.ma0125.severity = error      # The list of log parameter types contains an invalid type (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0125.md)
dotnet_diagnostic.ma0126.severity = error      # The list of log parameter types contains a duplicate (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0126.md)
dotnet_diagnostic.ma0127.severity = error      # Use String.Equals instead of is pattern (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0127.md)
dotnet_diagnostic.ma0128.severity = error      # Use 'is' operator instead of SequenceEqual (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0128.md)
dotnet_diagnostic.ma0129.severity = error      # Await task in using statement (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0129.md)
dotnet_diagnostic.ma0130.severity = error      # GetType() should not be used on System.Type instances (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0130.md)
dotnet_diagnostic.ma0131.severity = error      # ArgumentNullException.ThrowIfNull should not be used with non-nullable types (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0131.md)
dotnet_diagnostic.ma0132.severity = error      # Do not convert implicitly to DateTimeOffset (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0132.md)
dotnet_diagnostic.ma0133.severity = error      # Use DateTimeOffset instead of relying on the implicit conversion (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0133.md)
dotnet_diagnostic.ma0134.severity = error      # Observe result of async calls (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0134.md)
dotnet_diagnostic.ma0135.severity = error      # The log parameter has no configured type (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0135.md)
dotnet_diagnostic.ma0136.severity = suggestion # Raw String contains an implicit end of line character (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0136.md)
dotnet_diagnostic.ma0137.severity = none       # Use 'Async' suffix when a method returns an awaitable type (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0137.md)
dotnet_diagnostic.ma0138.severity = error      # Do not use 'Async' suffix when a method does not return an awaitable type (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0138.md)
dotnet_diagnostic.ma0139.severity = error      # Log parameter type is not valid (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0139.md)
dotnet_diagnostic.ma0140.severity = error      # Both if and else branch have identical code (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0140.md)
dotnet_diagnostic.ma0141.severity = error      # Use pattern matching instead of inequality operators for null check (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0141.md)
dotnet_diagnostic.ma0142.severity = none       # (redundant with RCS1248) Use pattern matching instead of equality operators for null check (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0142.md)
dotnet_diagnostic.ma0143.severity = error      # Primary constructor parameters should be readonly (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0143.md)
dotnet_diagnostic.ma0144.severity = error      # Use System.OperatingSystem to check the current OS (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0144.md)
dotnet_diagnostic.ma0145.severity = error      # Signature for [UnsafeAccessorAttribute] method is not valid (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0145.md)
dotnet_diagnostic.ma0146.severity = error      # Name must be set explicitly on local functions (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0146.md)
dotnet_diagnostic.ma0147.severity = error      # Avoid async void method for delegate (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0147.md)
dotnet_diagnostic.ma0148.severity = error      # Use pattern matching instead of equality operators for discrete value (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0148.md)
dotnet_diagnostic.ma0149.severity = error      # Use pattern matching instead of inequality operators for discrete value (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0149.md)
dotnet_diagnostic.ma0150.severity = error      # Do not call the default object.ToString explicitly (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0150.md)
dotnet_diagnostic.ma0151.severity = error      # DebuggerDisplay must contain valid members (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0151.md)
dotnet_diagnostic.ma0152.severity = error      # Use Unwrap instead of using await twice (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0152.md)
dotnet_diagnostic.ma0153.severity = error      # Do not log symbols decorated with DataClassificationAttribute directly (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0153.md)
dotnet_diagnostic.ma0154.severity = error      # Use langword in XML comment (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0154.md)
dotnet_diagnostic.ma0155.severity = error      # Do not use async void methods (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0155.md)
dotnet_diagnostic.ma0156.severity = none       # Use 'Async' suffix when a method returns IAsyncEnumerable<T> (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0156.md)
dotnet_diagnostic.ma0157.severity = error      # Do not use 'Async' suffix when a method returns IAsyncEnumerable<T> (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0157.md)
dotnet_diagnostic.ma0158.severity = error      # Use System.Threading.Lock (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0158.md)
dotnet_diagnostic.ma0159.severity = error      # Use 'Order' instead of 'OrderBy' (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0159.md)
dotnet_diagnostic.ma0160.severity = error      # Use ContainsKey instead of TryGetValue (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0160.md)
dotnet_diagnostic.ma0161.severity = error      # UseShellExecute must be explicitly set (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0161.md)
dotnet_diagnostic.ma0162.severity = error      # Use Process.Start overload with ProcessStartInfo (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0162.md)
dotnet_diagnostic.ma0163.severity = error      # UseShellExecute must be false when redirecting standard input or output (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0163.md)
dotnet_diagnostic.ma0164.severity = error      # Use parentheses to make not pattern clearer (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0164.md)
dotnet_diagnostic.ma0165.severity = none       # Make interpolated string (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0165.md)
dotnet_diagnostic.ma0166.severity = error      # Forward the TimeProvider to methods that take one (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0166.md)
dotnet_diagnostic.ma0167.severity = error      # Use an overload with a TimeProvider argument (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0167.md)
dotnet_diagnostic.ma0168.severity = error      # Use readonly struct for in or ref readonly parameter (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0168.md)
dotnet_diagnostic.ma0169.severity = error      # Use Equals method instead of operator (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0169.md)
dotnet_diagnostic.ma0170.severity = error      # Type cannot be used as an attribute argument (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0170.md)

## Suppressions
# MAS0001: [CA1822](https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822) Suppress CA1822 on methods decorated with BenchmarkDotNet attributes.
# MAS0002: [CA1822](https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822) Suppress CA1822 on methods decorated with a System.Text.Json attribute such as [JsonPropertyName] or [JsonInclude].
# MAS0003: [IDE0058](https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0058) Suppress IDE0058 on well-known types
# MAS0004: [CA1507](https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1507) Suppress CA1507 on methods decorated with a [Newtonsoft.Json.JsonPropertyAttribute].

# SonarAnalyzers
dotnet_diagnostic.s100.severity  = error      # Methods and properties should be named in PascalCase (https://rules.sonarsource.com/csharp/RSPEC-100/)
dotnet_diagnostic.s1006.severity = error      # Method overrides should not change parameter defaults (https://rules.sonarsource.com/csharp/RSPEC-1006/)
dotnet_diagnostic.s101.severity  = error      # Types should be named in PascalCase (https://rules.sonarsource.com/csharp/RSPEC-101/)
dotnet_diagnostic.s103.severity  = suggestion # Lines should not be too long (https://rules.sonarsource.com/csharp/RSPEC-103/)
dotnet_diagnostic.s104.severity  = suggestion # Files should not have too many lines of code (https://rules.sonarsource.com/csharp/RSPEC-104/)
dotnet_diagnostic.s1048.severity = error      # Finalizers should not throw exceptions (https://rules.sonarsource.com/csharp/RSPEC-1048/)
dotnet_diagnostic.s105.severity  = error      # Tabulation characters should not be used (https://rules.sonarsource.com/csharp/RSPEC-105/)
dotnet_diagnostic.s106.severity  = error      # Standard outputs should not be used directly to log anything (https://rules.sonarsource.com/csharp/RSPEC-106/)
dotnet_diagnostic.s1066.severity = error      # Mergeable "if" statements should be combined (https://rules.sonarsource.com/csharp/RSPEC-1066/)
dotnet_diagnostic.s1067.severity = suggestion # Expressions should not be too complex (https://rules.sonarsource.com/csharp/RSPEC-1067/)
dotnet_diagnostic.s107.severity  = suggestion # Methods should not have too many parameters (https://rules.sonarsource.com/csharp/RSPEC-107/)
dotnet_diagnostic.s1075.severity = error      # URIs should not be hardcoded (https://rules.sonarsource.com/csharp/RSPEC-1075/)
dotnet_diagnostic.s108.severity  = error      # Nested blocks of code should not be left empty (https://rules.sonarsource.com/csharp/RSPEC-108/)
dotnet_diagnostic.s109.severity  = none       # Magic numbers should not be used (https://rules.sonarsource.com/csharp/RSPEC-109/)
dotnet_diagnostic.s110.severity  = error      # Inheritance tree of classes should not be too deep (https://rules.sonarsource.com/csharp/RSPEC-110/)
dotnet_diagnostic.s1104.severity = error      # Fields should not have public accessibility (https://rules.sonarsource.com/csharp/RSPEC-1104/)
dotnet_diagnostic.s1109.severity = error      # A close curly brace should be located at the beginning of a line (https://rules.sonarsource.com/csharp/RSPEC-1109/)
dotnet_diagnostic.s1110.severity = suggestion # Redundant pairs of parentheses should be removed (https://rules.sonarsource.com/csharp/RSPEC-1110/)
dotnet_diagnostic.s1116.severity = none       # (redundant with rcs1259) Empty statements should be removed (https://rules.sonarsource.com/csharp/RSPEC-1116/)
dotnet_diagnostic.s1117.severity = error      # Local variables should not shadow class fields or properties (https://rules.sonarsource.com/csharp/RSPEC-1117/)
dotnet_diagnostic.s1118.severity = error      # Utility classes should not have public constructors (https://rules.sonarsource.com/csharp/RSPEC-1118/)
dotnet_diagnostic.s112.severity  = suggestion # General or reserved exceptions should never be thrown (https://rules.sonarsource.com/csharp/RSPEC-112/)
dotnet_diagnostic.s1121.severity = error      # Assignments should not be made from within sub-expressions (https://rules.sonarsource.com/csharp/RSPEC-1121/)
dotnet_diagnostic.s1123.severity = error      # "Obsolete" attributes should include explanations (https://rules.sonarsource.com/csharp/RSPEC-1123/)
dotnet_diagnostic.s1125.severity = error      # Boolean literals should not be redundant (https://rules.sonarsource.com/csharp/RSPEC-1125/)
dotnet_diagnostic.s1128.severity = none       # (redundant with IDE0005) Unnecessary "using" should be removed (https://rules.sonarsource.com/csharp/RSPEC-1128/)
dotnet_diagnostic.s113.severity  = error      # Files should end with a newline (https://rules.sonarsource.com/csharp/RSPEC-113/)
dotnet_diagnostic.s1133.severity = error      # Deprecated code should be removed (https://rules.sonarsource.com/csharp/RSPEC-1133/)
dotnet_diagnostic.s1134.severity = none       # Track uses of "FIXME" tags (https://rules.sonarsource.com/csharp/RSPEC-1134/)
dotnet_diagnostic.s1135.severity = none       # Track uses of "TODO" tags (https://rules.sonarsource.com/csharp/RSPEC-1135/)
dotnet_diagnostic.s1144.severity = none       # (redundant with RCS1213) Unused private types or members should be removed (https://rules.sonarsource.com/csharp/RSPEC-1144/)
dotnet_diagnostic.s1147.severity = error      # Exit methods should not be called (https://rules.sonarsource.com/csharp/RSPEC-1147/)
dotnet_diagnostic.s1151.severity = error      # "switch case" clauses should not have too many lines of code (https://rules.sonarsource.com/csharp/RSPEC-1151/)
dotnet_diagnostic.s1155.severity = none       # "Any()" should be used to test for emptiness (https://rules.sonarsource.com/csharp/RSPEC-1155/)
dotnet_diagnostic.s1163.severity = error      # Exceptions should not be thrown in finally blocks (https://rules.sonarsource.com/csharp/RSPEC-1163/)
dotnet_diagnostic.s1168.severity = error      # Empty arrays and collections should be returned instead of null (https://rules.sonarsource.com/csharp/RSPEC-1168/)
dotnet_diagnostic.s1172.severity = none       # (redundant with RCS1163) Unused method parameters should be removed (https://rules.sonarsource.com/csharp/RSPEC-1172/)
dotnet_diagnostic.s1185.severity = error      # Overriding members should do more than simply call the same member in the base class (https://rules.sonarsource.com/csharp/RSPEC-1185/)
dotnet_diagnostic.s1186.severity = warning    # Methods should not be empty (https://rules.sonarsource.com/csharp/RSPEC-1186/)
dotnet_diagnostic.s1192.severity = error      # String literals should not be duplicated (https://rules.sonarsource.com/csharp/RSPEC-1192/)
dotnet_diagnostic.s1199.severity = error      # Nested code blocks should not be used (https://rules.sonarsource.com/csharp/RSPEC-1199/)
dotnet_diagnostic.s1200.severity = none       # Classes should not be coupled to too many other classes (https://rules.sonarsource.com/csharp/RSPEC-1200/)
dotnet_diagnostic.s1206.severity = error      # "Equals(Object)" and "GetHashCode()" should be overridden in pairs (https://rules.sonarsource.com/csharp/RSPEC-1206/)
dotnet_diagnostic.s121.severity  = none       # (redundant with IDE0011) Control structures should use curly braces (https://rules.sonarsource.com/csharp/RSPEC-121/)
dotnet_diagnostic.s1210.severity = error      # "Equals" and the comparison operators should be overridden when implementing "IComparable" (https://rules.sonarsource.com/csharp/RSPEC-1210/)
dotnet_diagnostic.s1215.severity = error      # "GC.Collect" should not be called (https://rules.sonarsource.com/csharp/RSPEC-1215/)
dotnet_diagnostic.s122.severity  = error      # Statements should be on separate lines (https://rules.sonarsource.com/csharp/RSPEC-122/)
dotnet_diagnostic.s1226.severity = error      # Method parameters, caught exceptions and foreach variables' initial values should not be ignored (https://rules.sonarsource.com/csharp/RSPEC-1226/)
dotnet_diagnostic.s1227.severity = none       # break statements should not be used except for switch cases (https://rules.sonarsource.com/csharp/RSPEC-1227/)
dotnet_diagnostic.s1244.severity = error      # Floating point numbers should not be tested for equality (https://rules.sonarsource.com/csharp/RSPEC-1244/)
dotnet_diagnostic.s125.severity  = none       # Sections of code should not be commented out (https://rules.sonarsource.com/csharp/RSPEC-125/)
dotnet_diagnostic.s126.severity  = error      # "if ... else if" constructs should end with "else" clauses (https://rules.sonarsource.com/csharp/RSPEC-126/)
dotnet_diagnostic.s1264.severity = none       # A "while" loop should be used instead of a "for" loop (https://rules.sonarsource.com/csharp/RSPEC-1264/)
dotnet_diagnostic.s127.severity  = error      # "for" loop stop conditions should be invariant (https://rules.sonarsource.com/csharp/RSPEC-127/)
dotnet_diagnostic.s1301.severity = none       # "switch" statements should have at least 3 "case" clauses (https://rules.sonarsource.com/csharp/RSPEC-1301/)
dotnet_diagnostic.s1309.severity = none       # Track uses of in-source issue suppressions (https://rules.sonarsource.com/csharp/RSPEC-1309/)
dotnet_diagnostic.s131.severity  = none       # (redundant with IDE0010) "switch/Select" statements should contain a "default/Case Else" clauses (https://rules.sonarsource.com/csharp/RSPEC-131/)
dotnet_diagnostic.s1312.severity = none       # Logger fields should be "private static readonly" (https://rules.sonarsource.com/csharp/RSPEC-1312/)
dotnet_diagnostic.s1313.severity = error      # Using hardcoded IP addresses is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-1313/)
dotnet_diagnostic.s134.severity  = none       # Control flow statements "if", "switch", "for", "foreach", "while", "do"  and "try" should not be nested too deeply (https://rules.sonarsource.com/csharp/RSPEC-134/)
dotnet_diagnostic.s138.severity  = suggestion # Functions should not have too many lines of code (https://rules.sonarsource.com/csharp/RSPEC-138/)
dotnet_diagnostic.s1449.severity = error      # Culture should be specified for "string" operations (https://rules.sonarsource.com/csharp/RSPEC-1449/)
dotnet_diagnostic.s1450.severity = error      # Private fields only used as local variables in methods should become local variables (https://rules.sonarsource.com/csharp/RSPEC-1450/)
dotnet_diagnostic.s1451.severity = none       # Track lack of copyright and license headers (https://rules.sonarsource.com/csharp/RSPEC-1451/)
dotnet_diagnostic.s1479.severity = error      # "switch" statements with many "case" clauses should have only one statement (https://rules.sonarsource.com/csharp/RSPEC-1479/)
dotnet_diagnostic.s1481.severity = none       # (redundant with CS0219) Unused local variables should be removed (https://rules.sonarsource.com/csharp/RSPEC-1481/)
dotnet_diagnostic.s1541.severity = suggestion # Methods and properties should not be too complex (https://rules.sonarsource.com/csharp/RSPEC-1541/)
dotnet_diagnostic.s1607.severity = error      # Tests should not be ignored (https://rules.sonarsource.com/csharp/RSPEC-1607/)
dotnet_diagnostic.s1643.severity = error      # Strings should not be concatenated using '+' in a loop (https://rules.sonarsource.com/csharp/RSPEC-1643/)
dotnet_diagnostic.s1656.severity = error      # Variables should not be self-assigned (https://rules.sonarsource.com/csharp/RSPEC-1656/)
dotnet_diagnostic.s1659.severity = error      # Multiple variables should not be declared on the same line (https://rules.sonarsource.com/csharp/RSPEC-1659/)
dotnet_diagnostic.s1694.severity = none       # An abstract class should have both abstract and concrete methods (https://rules.sonarsource.com/csharp/RSPEC-1694/)
dotnet_diagnostic.s1696.severity = error      # NullReferenceException should not be caught (https://rules.sonarsource.com/csharp/RSPEC-1696/)
dotnet_diagnostic.s1698.severity = none       # "==" should not be used when "Equals" is overridden (https://rules.sonarsource.com/csharp/RSPEC-1698/)
dotnet_diagnostic.s1699.severity = error      # Constructors should only call non-overridable methods (https://rules.sonarsource.com/csharp/RSPEC-1699/)
dotnet_diagnostic.s1751.severity = none       # Loops with at most one iteration should be refactored (https://rules.sonarsource.com/csharp/RSPEC-1751/)
dotnet_diagnostic.s1764.severity = error      # Identical expressions should not be used on both sides of operators (https://rules.sonarsource.com/csharp/RSPEC-1764/)
dotnet_diagnostic.s1821.severity = error      # "switch" statements should not be nested (https://rules.sonarsource.com/csharp/RSPEC-1821/)
dotnet_diagnostic.s1848.severity = error      # Objects should not be created to be dropped immediately without being used (https://rules.sonarsource.com/csharp/RSPEC-1848/)
dotnet_diagnostic.s1854.severity = error      # Unused assignments should be removed (https://rules.sonarsource.com/csharp/RSPEC-1854/)
dotnet_diagnostic.s1858.severity = error      # "ToString()" calls should not be redundant (https://rules.sonarsource.com/csharp/RSPEC-1858/)
dotnet_diagnostic.s1862.severity = error      # Related "if/else if" statements should not have the same condition (https://rules.sonarsource.com/csharp/RSPEC-1862/)
dotnet_diagnostic.s1871.severity = error      # Two branches in a conditional structure should not have exactly the same implementation (https://rules.sonarsource.com/csharp/RSPEC-1871/)
dotnet_diagnostic.s1905.severity = none       # (redundant with IDE0004) Redundant casts should not be used (https://rules.sonarsource.com/csharp/RSPEC-1905/)
dotnet_diagnostic.s1939.severity = error      # Inheritance list should not be redundant (https://rules.sonarsource.com/csharp/RSPEC-1939/)
dotnet_diagnostic.s1940.severity = error      # Boolean checks should not be inverted (https://rules.sonarsource.com/csharp/RSPEC-1940/)
dotnet_diagnostic.s1944.severity = error      # Invalid casts should be avoided (https://rules.sonarsource.com/csharp/RSPEC-1944/)
dotnet_diagnostic.s1994.severity = error      # "for" loop increment clauses should modify the loops' counters (https://rules.sonarsource.com/csharp/RSPEC-1994/)
dotnet_diagnostic.s2053.severity = error      # Password hashing functions should use an unpredictable salt (https://rules.sonarsource.com/csharp/RSPEC-2053/)
dotnet_diagnostic.s2068.severity = error      # Hard-coded credentials are security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-2068/)
dotnet_diagnostic.s2077.severity = error      # Formatting SQL queries is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-2077/)
dotnet_diagnostic.s2092.severity = suggestion # Creating cookies without the "secure" flag is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-2092/)
dotnet_diagnostic.s2094.severity = suggestion # Classes should not be empty (https://rules.sonarsource.com/csharp/RSPEC-2094/)
dotnet_diagnostic.s2114.severity = error      # Collections should not be passed as arguments to their own methods (https://rules.sonarsource.com/csharp/RSPEC-2114/)
dotnet_diagnostic.s2115.severity = error      # A secure password should be used when connecting to a database (https://rules.sonarsource.com/csharp/RSPEC-2115/)
dotnet_diagnostic.s2123.severity = error      # Values should not be uselessly incremented (https://rules.sonarsource.com/csharp/RSPEC-2123/)
dotnet_diagnostic.s2139.severity = none       # Exceptions should be either logged or rethrown but not both (https://rules.sonarsource.com/csharp/RSPEC-2139/)
dotnet_diagnostic.s2148.severity = error      # Underscores should be used to make large numbers readable (https://rules.sonarsource.com/csharp/RSPEC-2148/)
dotnet_diagnostic.s2156.severity = error      # "sealed" classes should not have "protected" members (https://rules.sonarsource.com/csharp/RSPEC-2156/)
dotnet_diagnostic.s2166.severity = error      # Classes named like "Exception" should extend "Exception" or a subclass (https://rules.sonarsource.com/csharp/RSPEC-2166/)
dotnet_diagnostic.s2178.severity = error      # Short-circuit logic should be used in boolean contexts (https://rules.sonarsource.com/csharp/RSPEC-2178/)
dotnet_diagnostic.s2183.severity = suggestion # Integral numbers should not be shifted by zero or more than their number of bits-1 (https://rules.sonarsource.com/csharp/RSPEC-2183/)
dotnet_diagnostic.s2184.severity = suggestion # Results of integer division should not be assigned to floating point variables (https://rules.sonarsource.com/csharp/RSPEC-2184/)
dotnet_diagnostic.s2187.severity = error      # Test classes should contain at least one test case (https://rules.sonarsource.com/csharp/RSPEC-2187/)
dotnet_diagnostic.s2190.severity = suggestion # Loops and recursions should not be infinite (https://rules.sonarsource.com/csharp/RSPEC-2190/)
dotnet_diagnostic.s2197.severity = error      # Modulus results should not be checked for direct equality (https://rules.sonarsource.com/csharp/RSPEC-2197/)
dotnet_diagnostic.s2198.severity = error      # Unnecessary mathematical comparisons should not be made (https://rules.sonarsource.com/csharp/RSPEC-2198/)
dotnet_diagnostic.s2201.severity = error      # Methods without side effects should not have their return values ignored (https://rules.sonarsource.com/csharp/RSPEC-2201/)
dotnet_diagnostic.s2219.severity = suggestion # Runtime type checking should be simplified (https://rules.sonarsource.com/csharp/RSPEC-2219/)
dotnet_diagnostic.s2221.severity = none       # "Exception" should not be caught (https://rules.sonarsource.com/csharp/RSPEC-2221/)
dotnet_diagnostic.s2222.severity = error      # Locks should be released on all paths (https://rules.sonarsource.com/csharp/RSPEC-2222/)
dotnet_diagnostic.s2223.severity = error      # Non-constant static fields should not be visible (https://rules.sonarsource.com/csharp/RSPEC-2223/)
dotnet_diagnostic.s2225.severity = error      # "ToString()" method should not return null (https://rules.sonarsource.com/csharp/RSPEC-2225/)
dotnet_diagnostic.s2234.severity = error      # Arguments should be passed in the same order as the method parameters (https://rules.sonarsource.com/csharp/RSPEC-2234/)
dotnet_diagnostic.s2245.severity = error      # Using pseudorandom number generators (PRNGs) is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-2245/)
dotnet_diagnostic.s2251.severity = error      # A "for" loop update clause should move the counter in the right direction (https://rules.sonarsource.com/csharp/RSPEC-2251/)
dotnet_diagnostic.s2252.severity = error      # For-loop conditions should be true at least once (https://rules.sonarsource.com/csharp/RSPEC-2252/)
dotnet_diagnostic.s2257.severity = error      # Using non-standard cryptographic algorithms is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-2257/)
dotnet_diagnostic.s2259.severity = error      # Null pointers should not be dereferenced (https://rules.sonarsource.com/csharp/RSPEC-2259/)
dotnet_diagnostic.s2275.severity = error      # Composite format strings should not lead to unexpected behavior at runtime (https://rules.sonarsource.com/csharp/RSPEC-2275/)
dotnet_diagnostic.s2290.severity = error      # Field-like events should not be virtual (https://rules.sonarsource.com/csharp/RSPEC-2290/)
dotnet_diagnostic.s2291.severity = error      # Overflow checking should not be disabled for "Enumerable.Sum" (https://rules.sonarsource.com/csharp/RSPEC-2291/)
dotnet_diagnostic.s2292.severity = suggestion # Trivial properties should be auto-implemented (https://rules.sonarsource.com/csharp/RSPEC-2292/)
dotnet_diagnostic.s2302.severity = error      # "nameof" should be used (https://rules.sonarsource.com/csharp/RSPEC-2302/)
dotnet_diagnostic.s2306.severity = error      # "async" and "await" should not be used as identifiers (https://rules.sonarsource.com/csharp/RSPEC-2306/)
dotnet_diagnostic.s2325.severity = none       # (redundant with ca1822) Methods and properties that don't access instance data should be static (https://rules.sonarsource.com/csharp/RSPEC-2325/)
dotnet_diagnostic.s2326.severity = error      # Unused type parameters should be removed (https://rules.sonarsource.com/csharp/RSPEC-2326/)
dotnet_diagnostic.s2327.severity = none       # "try" statements with identical "catch" and/or "finally" blocks should be merged (https://rules.sonarsource.com/csharp/RSPEC-2327/)
dotnet_diagnostic.s2328.severity = suggestion # "GetHashCode" should not reference mutable fields (https://rules.sonarsource.com/csharp/RSPEC-2328/)
dotnet_diagnostic.s2330.severity = error      # Array covariance should not be used (https://rules.sonarsource.com/csharp/RSPEC-2330/)
dotnet_diagnostic.s2333.severity = error      # Redundant modifiers should not be used (https://rules.sonarsource.com/csharp/RSPEC-2333/)
dotnet_diagnostic.s2339.severity = suggestion # Public constant members should not be used (https://rules.sonarsource.com/csharp/RSPEC-2339/)
dotnet_diagnostic.s2342.severity = error      # Enumeration types should comply with a naming convention (https://rules.sonarsource.com/csharp/RSPEC-2342/)
dotnet_diagnostic.s2344.severity = error      # Enumeration type names should not have "Flags" or "Enum" suffixes (https://rules.sonarsource.com/csharp/RSPEC-2344/)
dotnet_diagnostic.s2345.severity = error      # Flags enumerations should explicitly initialize all their members (https://rules.sonarsource.com/csharp/RSPEC-2345/)
dotnet_diagnostic.s2346.severity = error      # Flags enumerations zero-value members should be named "None" (https://rules.sonarsource.com/csharp/RSPEC-2346/)
dotnet_diagnostic.s2357.severity = error      # Fields should be private (https://rules.sonarsource.com/csharp/RSPEC-2357/)
dotnet_diagnostic.s2360.severity = none       # Optional parameters should not be used (https://rules.sonarsource.com/csharp/RSPEC-2360/)
dotnet_diagnostic.s2365.severity = error      # Properties should not make collection or array copies (https://rules.sonarsource.com/csharp/RSPEC-2365/)
dotnet_diagnostic.s2368.severity = error      # Public methods should not have multidimensional array parameters (https://rules.sonarsource.com/csharp/RSPEC-2368/)
dotnet_diagnostic.s2372.severity = error      # Exceptions should not be thrown from property getters (https://rules.sonarsource.com/csharp/RSPEC-2372/)
dotnet_diagnostic.s2376.severity = error      # Write-only properties should not be used (https://rules.sonarsource.com/csharp/RSPEC-2376/)
dotnet_diagnostic.s2386.severity = error      # Mutable fields should not be "public static" (https://rules.sonarsource.com/csharp/RSPEC-2386/)
dotnet_diagnostic.s2387.severity = error      # Child class fields should not shadow parent class fields (https://rules.sonarsource.com/csharp/RSPEC-2387/)
dotnet_diagnostic.s2436.severity = suggestion # Types and methods should not have too many generic parameters (https://rules.sonarsource.com/csharp/RSPEC-2436/)
dotnet_diagnostic.s2437.severity = none       # (causes false positives) Unnecessary bit operations should not be performed (https://rules.sonarsource.com/csharp/RSPEC-2437/)
dotnet_diagnostic.s2445.severity = error      # Blocks should be synchronized on read-only fields (https://rules.sonarsource.com/csharp/RSPEC-2445/)
dotnet_diagnostic.s2479.severity = error      # Whitespace and control characters in string literals should be explicit (https://rules.sonarsource.com/csharp/RSPEC-2479/)
dotnet_diagnostic.s2486.severity = none       # Generic exceptions should not be ignored (https://rules.sonarsource.com/csharp/RSPEC-2486/)
dotnet_diagnostic.s2551.severity = error      # Shared resources should not be used for locking (https://rules.sonarsource.com/csharp/RSPEC-2551/)
dotnet_diagnostic.s2583.severity = error      # Conditionally executed code should be reachable (https://rules.sonarsource.com/csharp/RSPEC-2583/)
dotnet_diagnostic.s2589.severity = error      # Boolean expressions should not be gratuitous (https://rules.sonarsource.com/csharp/RSPEC-2589/)
dotnet_diagnostic.s2612.severity = error      # Setting loose file permissions is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-2612/)
dotnet_diagnostic.s2629.severity = error      # Logging templates should be constant (https://rules.sonarsource.com/csharp/RSPEC-2629/)
dotnet_diagnostic.s2674.severity = error      # The length returned from a stream read should be checked (https://rules.sonarsource.com/csharp/RSPEC-2674/)
dotnet_diagnostic.s2681.severity = error      # Multiline blocks should be enclosed in curly braces (https://rules.sonarsource.com/csharp/RSPEC-2681/)
dotnet_diagnostic.s2688.severity = error      # "NaN" should not be used in comparisons (https://rules.sonarsource.com/csharp/RSPEC-2688/)
dotnet_diagnostic.s2692.severity = error      # "IndexOf" checks should not be for positive numbers (https://rules.sonarsource.com/csharp/RSPEC-2692/)
dotnet_diagnostic.s2696.severity = error      # Instance members should not write to "static" fields (https://rules.sonarsource.com/csharp/RSPEC-2696/)
dotnet_diagnostic.s2699.severity = error      # Tests should include assertions (https://rules.sonarsource.com/csharp/RSPEC-2699/)
dotnet_diagnostic.s2701.severity = error      # Literal boolean values should not be used in assertions (https://rules.sonarsource.com/csharp/RSPEC-2701/)
dotnet_diagnostic.s2737.severity = error      # "catch" clauses should do more than rethrow (https://rules.sonarsource.com/csharp/RSPEC-2737/)
dotnet_diagnostic.s2743.severity = none       # Static fields should not be used in generic types (https://rules.sonarsource.com/csharp/RSPEC-2743/)
dotnet_diagnostic.s2755.severity = error      # XML parsers should not be vulnerable to XXE attacks (https://rules.sonarsource.com/csharp/RSPEC-2755/)
dotnet_diagnostic.s2757.severity = error      # Non-existent operators like "=+" should not be used (https://rules.sonarsource.com/csharp/RSPEC-2757/)
dotnet_diagnostic.s2760.severity = error      # Sequential tests should not check the same condition (https://rules.sonarsource.com/csharp/RSPEC-2760/)
dotnet_diagnostic.s2761.severity = error      # Doubled prefix operators "!!" and "~~" should not be used (https://rules.sonarsource.com/csharp/RSPEC-2761/)
dotnet_diagnostic.s2857.severity = error      # SQL keywords should be delimited by whitespace (https://rules.sonarsource.com/csharp/RSPEC-2857/)
dotnet_diagnostic.s2925.severity = error      # "Thread.Sleep" should not be used in tests (https://rules.sonarsource.com/csharp/RSPEC-2925/)
dotnet_diagnostic.s2930.severity = error      # "IDisposables" should be disposed (https://rules.sonarsource.com/csharp/RSPEC-2930/)
dotnet_diagnostic.s2931.severity = error      # Classes with "IDisposable" members should implement "IDisposable" (https://rules.sonarsource.com/csharp/RSPEC-2931/)
dotnet_diagnostic.s2933.severity = error      # Fields that are only assigned in the constructor should be "readonly" (https://rules.sonarsource.com/csharp/RSPEC-2933/)
dotnet_diagnostic.s2934.severity = error      # Property assignments should not be made for "readonly" fields not constrained to reference types (https://rules.sonarsource.com/csharp/RSPEC-2934/)
dotnet_diagnostic.s2952.severity = error      # Classes should "Dispose" of members from the classes' own "Dispose" methods (https://rules.sonarsource.com/csharp/RSPEC-2952/)
dotnet_diagnostic.s2953.severity = error      # Methods named "Dispose" should implement "IDisposable.Dispose" (https://rules.sonarsource.com/csharp/RSPEC-2953/)
dotnet_diagnostic.s2955.severity = suggestion # Generic parameters not constrained to reference types should not be compared to "null" (https://rules.sonarsource.com/csharp/RSPEC-2955/)
dotnet_diagnostic.s2970.severity = error      # Assertions should be complete (https://rules.sonarsource.com/csharp/RSPEC-2970/)
dotnet_diagnostic.s2971.severity = error      # LINQ expressions should be simplified (https://rules.sonarsource.com/csharp/RSPEC-2971/)
dotnet_diagnostic.s2995.severity = error      # "Object.ReferenceEquals" should not be used for value types (https://rules.sonarsource.com/csharp/RSPEC-2995/)
dotnet_diagnostic.s2996.severity = error      # "ThreadStatic" fields should not be initialized (https://rules.sonarsource.com/csharp/RSPEC-2996/)
dotnet_diagnostic.s2997.severity = error      # "IDisposables" created in a "using" statement should not be returned (https://rules.sonarsource.com/csharp/RSPEC-2997/)
dotnet_diagnostic.s3005.severity = error      # "ThreadStatic" should not be used on non-static fields (https://rules.sonarsource.com/csharp/RSPEC-3005/)
dotnet_diagnostic.s3010.severity = error      # Static fields should not be updated in constructors (https://rules.sonarsource.com/csharp/RSPEC-3010/)
dotnet_diagnostic.s3011.severity = error      # Reflection should not be used to increase accessibility of classes, methods, or fields (https://rules.sonarsource.com/csharp/RSPEC-3011/)
dotnet_diagnostic.s3052.severity = error      # Members should not be initialized to default values (https://rules.sonarsource.com/csharp/RSPEC-3052/)
dotnet_diagnostic.s3059.severity = none       # Types should not have members with visibility set higher than the type's visibility (https://rules.sonarsource.com/csharp/RSPEC-3059/)
dotnet_diagnostic.s3060.severity = error      # "is" should not be used with "this" (https://rules.sonarsource.com/csharp/RSPEC-3060/)
dotnet_diagnostic.s3063.severity = error      # "StringBuilder" data should be used (https://rules.sonarsource.com/csharp/RSPEC-3063/)
dotnet_diagnostic.s3168.severity = error      # "async" methods should not return "void" (https://rules.sonarsource.com/csharp/RSPEC-3168/)
dotnet_diagnostic.s3169.severity = error      # Multiple "OrderBy" calls should not be used (https://rules.sonarsource.com/csharp/RSPEC-3169/)
dotnet_diagnostic.s3172.severity = error      # Delegates should not be subtracted (https://rules.sonarsource.com/csharp/RSPEC-3172/)
dotnet_diagnostic.s3215.severity = error      # "interface" instances should not be cast to concrete types (https://rules.sonarsource.com/csharp/RSPEC-3215/)
dotnet_diagnostic.s3216.severity = none       # "ConfigureAwait(false)" should be used (https://rules.sonarsource.com/csharp/RSPEC-3216/)
dotnet_diagnostic.s3217.severity = error      # "Explicit" conversions of "foreach" loops should not be used (https://rules.sonarsource.com/csharp/RSPEC-3217/)
dotnet_diagnostic.s3218.severity = error      # Inner class members should not shadow outer class "static" or type members (https://rules.sonarsource.com/csharp/RSPEC-3218/)
dotnet_diagnostic.s3220.severity = error      # Method calls should not resolve ambiguously to overloads with "params" (https://rules.sonarsource.com/csharp/RSPEC-3220/)
dotnet_diagnostic.s3234.severity = none       # "GC.SuppressFinalize" should not be invoked for types without destructors (https://rules.sonarsource.com/csharp/RSPEC-3234/)
dotnet_diagnostic.s3235.severity = none       # Redundant parentheses should not be used (https://rules.sonarsource.com/csharp/RSPEC-3235/)
dotnet_diagnostic.s3236.severity = error      # Caller information arguments should not be provided explicitly (https://rules.sonarsource.com/csharp/RSPEC-3236/)
dotnet_diagnostic.s3237.severity = error      # "value" contextual keyword should be used (https://rules.sonarsource.com/csharp/RSPEC-3237/)
dotnet_diagnostic.s3240.severity = none       # The simplest possible condition syntax should be used (https://rules.sonarsource.com/csharp/RSPEC-3240/)
dotnet_diagnostic.s3241.severity = suggestion # Methods should not return values that are never used (https://rules.sonarsource.com/csharp/RSPEC-3241/)
dotnet_diagnostic.s3242.severity = none       # Method parameters should be declared with base types (https://rules.sonarsource.com/csharp/RSPEC-3242/)
dotnet_diagnostic.s3244.severity = error      # Anonymous delegates should not be used to unsubscribe from Events (https://rules.sonarsource.com/csharp/RSPEC-3244/)
dotnet_diagnostic.s3246.severity = suggestion # Generic type parameters should be co/contravariant when possible (https://rules.sonarsource.com/csharp/RSPEC-3246/)
dotnet_diagnostic.s3247.severity = error      # Duplicate casts should not be made (https://rules.sonarsource.com/csharp/RSPEC-3247/)
dotnet_diagnostic.s3249.severity = error      # Classes directly extending "object" should not call "base" in "GetHashCode" or "Equals" (https://rules.sonarsource.com/csharp/RSPEC-3249/)
dotnet_diagnostic.s3251.severity = error      # Implementations should be provided for "partial" methods (https://rules.sonarsource.com/csharp/RSPEC-3251/)
dotnet_diagnostic.s3253.severity = error      # Constructor and destructor declarations should not be redundant (https://rules.sonarsource.com/csharp/RSPEC-3253/)
dotnet_diagnostic.s3254.severity = error      # Default parameter values should not be passed as arguments (https://rules.sonarsource.com/csharp/RSPEC-3254/)
dotnet_diagnostic.s3256.severity = error      # "string.IsNullOrEmpty" should be used (https://rules.sonarsource.com/csharp/RSPEC-3256/)
dotnet_diagnostic.s3257.severity = none       # (weirdly reports on completely different issue than docs say, i.e. unused parameters) Declarations and initializations should be as concise as possible (https://rules.sonarsource.com/csharp/RSPEC-3257/)
dotnet_diagnostic.s3260.severity = error      # Non-derived "private" classes and records should be "sealed" (https://rules.sonarsource.com/csharp/RSPEC-3260/)
dotnet_diagnostic.s3261.severity = error      # Namespaces should not be empty (https://rules.sonarsource.com/csharp/RSPEC-3261/)
dotnet_diagnostic.s3262.severity = error      # "params" should be used on overrides (https://rules.sonarsource.com/csharp/RSPEC-3262/)
dotnet_diagnostic.s3263.severity = error      # Static fields should appear in the order they must be initialized  (https://rules.sonarsource.com/csharp/RSPEC-3263/)
dotnet_diagnostic.s3264.severity = none       # (redundant with RCS1213) Events should be invoked (https://rules.sonarsource.com/csharp/RSPEC-3264/)
dotnet_diagnostic.s3265.severity = error      # Non-flags enums should not be used in bitwise operations (https://rules.sonarsource.com/csharp/RSPEC-3265/)
dotnet_diagnostic.s3267.severity = suggestion # Loops should be simplified with "LINQ" expressions (https://rules.sonarsource.com/csharp/RSPEC-3267/)
dotnet_diagnostic.s3329.severity = error      # Cipher Block Chaining IVs should be unpredictable (https://rules.sonarsource.com/csharp/RSPEC-3329/)
dotnet_diagnostic.s3330.severity = suggestion # Creating cookies without the "HttpOnly" flag is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-3330/)
dotnet_diagnostic.s3343.severity = error      # Caller information parameters should come at the end of the parameter list (https://rules.sonarsource.com/csharp/RSPEC-3343/)
dotnet_diagnostic.s3346.severity = error      # Expressions used in "Debug.Assert" should not produce side effects (https://rules.sonarsource.com/csharp/RSPEC-3346/)
dotnet_diagnostic.s3353.severity = none       # (redundant with RCS1118) Unchanged variables should be marked as "const" (https://rules.sonarsource.com/csharp/RSPEC-3353/)
dotnet_diagnostic.s3358.severity = none       # Ternary operators should not be nested (https://rules.sonarsource.com/csharp/RSPEC-3358/)
dotnet_diagnostic.s3363.severity = error      # Date and time should not be used as a type for primary keys (https://rules.sonarsource.com/csharp/RSPEC-3363/)
dotnet_diagnostic.s3366.severity = error      # "this" should not be exposed from constructors (https://rules.sonarsource.com/csharp/RSPEC-3366/)
dotnet_diagnostic.s3376.severity = error      # Attribute, EventArgs, and Exception type names should end with the type being extended (https://rules.sonarsource.com/csharp/RSPEC-3376/)
dotnet_diagnostic.s3397.severity = error      # "base.Equals" should not be used to check for reference equality in "Equals" if "base" is not "object" (https://rules.sonarsource.com/csharp/RSPEC-3397/)
dotnet_diagnostic.s3398.severity = none       # "private" methods called only by inner classes should be moved to those classes (https://rules.sonarsource.com/csharp/RSPEC-3398/)
dotnet_diagnostic.s3400.severity = none       # Methods should not return constants (https://rules.sonarsource.com/csharp/RSPEC-3400/)
dotnet_diagnostic.s3415.severity = error      # Assertion arguments should be passed in the correct order (https://rules.sonarsource.com/csharp/RSPEC-3415/)
dotnet_diagnostic.s3416.severity = error      # Loggers should be named for their enclosing types (https://rules.sonarsource.com/csharp/RSPEC-3416/)
dotnet_diagnostic.s3427.severity = error      # Method overloads with default parameter values should not overlap (https://rules.sonarsource.com/csharp/RSPEC-3427/)
dotnet_diagnostic.s3431.severity = error      # "[ExpectedException]" should not be used (https://rules.sonarsource.com/csharp/RSPEC-3431/)
dotnet_diagnostic.s3433.severity = none       # Test method signatures should be correct (https://rules.sonarsource.com/csharp/RSPEC-3433/)
dotnet_diagnostic.s3440.severity = error      # Variables should not be checked against the values they're about to be assigned (https://rules.sonarsource.com/csharp/RSPEC-3440/)
dotnet_diagnostic.s3441.severity = error      # Redundant property names should be omitted in anonymous classes (https://rules.sonarsource.com/csharp/RSPEC-3441/)
dotnet_diagnostic.s3442.severity = error      # "abstract" classes should not have "public" constructors (https://rules.sonarsource.com/csharp/RSPEC-3442/)
dotnet_diagnostic.s3443.severity = error      # Type should not be examined on "System.Type" instances (https://rules.sonarsource.com/csharp/RSPEC-3443/)
dotnet_diagnostic.s3444.severity = error      # Interfaces should not simply inherit from base interfaces with colliding members (https://rules.sonarsource.com/csharp/RSPEC-3444/)
dotnet_diagnostic.s3445.severity = error      # Exceptions should not be explicitly rethrown (https://rules.sonarsource.com/csharp/RSPEC-3445/)
dotnet_diagnostic.s3447.severity = error      # "[Optional]" should not be used on "ref" or "out" parameters (https://rules.sonarsource.com/csharp/RSPEC-3447/)
dotnet_diagnostic.s3449.severity = error      # Right operands of shift operators should be integers (https://rules.sonarsource.com/csharp/RSPEC-3449/)
dotnet_diagnostic.s3450.severity = error      # Parameters with "[DefaultParameterValue]" attributes should also be marked "[Optional]" (https://rules.sonarsource.com/csharp/RSPEC-3450/)
dotnet_diagnostic.s3451.severity = error      # "[DefaultValue]" should not be used when "[DefaultParameterValue]" is meant (https://rules.sonarsource.com/csharp/RSPEC-3451/)
dotnet_diagnostic.s3453.severity = error      # Classes should not have only "private" constructors (https://rules.sonarsource.com/csharp/RSPEC-3453/)
dotnet_diagnostic.s3456.severity = error      # "string.ToCharArray()" and "ReadOnlySpan<T>.ToArray()" should not be called redundantly (https://rules.sonarsource.com/csharp/RSPEC-3456/)
dotnet_diagnostic.s3457.severity = error      # Composite format strings should be used correctly (https://rules.sonarsource.com/csharp/RSPEC-3457/)
dotnet_diagnostic.s3458.severity = none       # Empty "case" clauses that fall through to the "default" should be omitted (https://rules.sonarsource.com/csharp/RSPEC-3458/)
dotnet_diagnostic.s3459.severity = error      # Unassigned members should be removed (https://rules.sonarsource.com/csharp/RSPEC-3459/)
dotnet_diagnostic.s3464.severity = error      # Type inheritance should not be recursive (https://rules.sonarsource.com/csharp/RSPEC-3464/)
dotnet_diagnostic.s3466.severity = error      # Optional parameters should be passed to "base" calls (https://rules.sonarsource.com/csharp/RSPEC-3466/)
dotnet_diagnostic.s3532.severity = none       # Empty "default" clauses should be removed (https://rules.sonarsource.com/csharp/RSPEC-3532/)
dotnet_diagnostic.s3597.severity = error      # "ServiceContract" and "OperationContract" attributes should be used together (https://rules.sonarsource.com/csharp/RSPEC-3597/)
dotnet_diagnostic.s3598.severity = error      # One-way "OperationContract" methods should have "void" return type (https://rules.sonarsource.com/csharp/RSPEC-3598/)
dotnet_diagnostic.s3600.severity = error      # "params" should not be introduced on overrides (https://rules.sonarsource.com/csharp/RSPEC-3600/)
dotnet_diagnostic.s3603.severity = error      # Methods with "Pure" attribute should return a value  (https://rules.sonarsource.com/csharp/RSPEC-3603/)
dotnet_diagnostic.s3604.severity = error      # Member initializer values should not be redundant (https://rules.sonarsource.com/csharp/RSPEC-3604/)
dotnet_diagnostic.s3610.severity = error      # Nullable type comparison should not be redundant (https://rules.sonarsource.com/csharp/RSPEC-3610/)
dotnet_diagnostic.s3626.severity = error      # Jump statements should not be redundant (https://rules.sonarsource.com/csharp/RSPEC-3626/)
dotnet_diagnostic.s3655.severity = error      # Empty nullable value should not be accessed (https://rules.sonarsource.com/csharp/RSPEC-3655/)
dotnet_diagnostic.s3717.severity = none       # Track use of "NotImplementedException" (https://rules.sonarsource.com/csharp/RSPEC-3717/)
dotnet_diagnostic.s3776.severity = suggestion # Cognitive Complexity of methods should not be too high (https://rules.sonarsource.com/csharp/RSPEC-3776/)
dotnet_diagnostic.s3869.severity = error      # "SafeHandle.DangerousGetHandle" should not be called (https://rules.sonarsource.com/csharp/RSPEC-3869/)
dotnet_diagnostic.s3871.severity = none       # (redundant with CA1064) Exception types should be "public" (https://rules.sonarsource.com/csharp/RSPEC-3871/)
dotnet_diagnostic.s3872.severity = error      # Parameter names should not duplicate the names of their methods (https://rules.sonarsource.com/csharp/RSPEC-3872/)
dotnet_diagnostic.s3874.severity = error      # "out" and "ref" parameters should not be used (https://rules.sonarsource.com/csharp/RSPEC-3874/)
dotnet_diagnostic.s3875.severity = error      # "operator==" should not be overloaded on reference types (https://rules.sonarsource.com/csharp/RSPEC-3875/)
dotnet_diagnostic.s3876.severity = none       # Strings or integral types should be used for indexers (https://rules.sonarsource.com/csharp/RSPEC-3876/)
dotnet_diagnostic.s3877.severity = error      # Exceptions should not be thrown from unexpected methods (https://rules.sonarsource.com/csharp/RSPEC-3877/)
dotnet_diagnostic.s3878.severity = suggestion # Arrays should not be created for params parameters (https://rules.sonarsource.com/csharp/RSPEC-3878/)
dotnet_diagnostic.s3880.severity = error      # Finalizers should not be empty (https://rules.sonarsource.com/csharp/RSPEC-3880/)
dotnet_diagnostic.s3881.severity = error      # "IDisposable" should be implemented correctly (https://rules.sonarsource.com/csharp/RSPEC-3881/)
dotnet_diagnostic.s3884.severity = error      # "CoSetProxyBlanket" and "CoInitializeSecurity" should not be used (https://rules.sonarsource.com/csharp/RSPEC-3884/)
dotnet_diagnostic.s3885.severity = error      # "Assembly.Load" should be used (https://rules.sonarsource.com/csharp/RSPEC-3885/)
dotnet_diagnostic.s3887.severity = none       # Mutable, non-private fields should not be "readonly" (https://rules.sonarsource.com/csharp/RSPEC-3887/)
dotnet_diagnostic.s3889.severity = error      # "Thread.Resume" and "Thread.Suspend" should not be used (https://rules.sonarsource.com/csharp/RSPEC-3889/)
dotnet_diagnostic.s3897.severity = error      # Classes that provide "Equals(<T>)" should implement "IEquatable<T>" (https://rules.sonarsource.com/csharp/RSPEC-3897/)
dotnet_diagnostic.s3898.severity = none       # Value types should implement "IEquatable<T>" (https://rules.sonarsource.com/csharp/RSPEC-3898/)
dotnet_diagnostic.s3900.severity = suggestion # Arguments of public methods should be validated against null (https://rules.sonarsource.com/csharp/RSPEC-3900/)
dotnet_diagnostic.s3902.severity = error      # "Assembly.GetExecutingAssembly" should not be called (https://rules.sonarsource.com/csharp/RSPEC-3902/)
dotnet_diagnostic.s3903.severity = none       # (redundant with CA1050) Types should be defined in named namespaces (https://rules.sonarsource.com/csharp/RSPEC-3903/)
dotnet_diagnostic.s3904.severity = none       # Assemblies should have version information (https://rules.sonarsource.com/csharp/RSPEC-3904/)
dotnet_diagnostic.s3906.severity = none       # Event Handlers should have the correct signature (https://rules.sonarsource.com/csharp/RSPEC-3906/)
dotnet_diagnostic.s3908.severity = error      # Generic event handlers should be used (https://rules.sonarsource.com/csharp/RSPEC-3908/)
dotnet_diagnostic.s3909.severity = error      # Collections should implement the generic interface (https://rules.sonarsource.com/csharp/RSPEC-3909/)
dotnet_diagnostic.s3923.severity = error      # All branches in a conditional structure should not have exactly the same implementation (https://rules.sonarsource.com/csharp/RSPEC-3923/)
dotnet_diagnostic.s3925.severity = error      # "ISerializable" should be implemented correctly (https://rules.sonarsource.com/csharp/RSPEC-3925/)
dotnet_diagnostic.s3926.severity = error      # Deserialization methods should be provided for "OptionalField" members (https://rules.sonarsource.com/csharp/RSPEC-3926/)
dotnet_diagnostic.s3927.severity = error      # Serialization event handlers should be implemented correctly (https://rules.sonarsource.com/csharp/RSPEC-3927/)
dotnet_diagnostic.s3928.severity = none       # (redundant with MA0015) Parameter names used into ArgumentException constructors should match an existing one  (https://rules.sonarsource.com/csharp/RSPEC-3928/)
dotnet_diagnostic.s3937.severity = error      # Number patterns should be regular (https://rules.sonarsource.com/csharp/RSPEC-3937/)
dotnet_diagnostic.s3949.severity = error      # Calculations should not overflow (https://rules.sonarsource.com/csharp/RSPEC-3949/)
dotnet_diagnostic.s3956.severity = none       # "Generic.List" instances should not be part of public APIs (https://rules.sonarsource.com/csharp/RSPEC-3956/)
dotnet_diagnostic.s3962.severity = error      # "static readonly" constants should be "const" instead (https://rules.sonarsource.com/csharp/RSPEC-3962/)
dotnet_diagnostic.s3963.severity = error      # "static" fields should be initialized inline (https://rules.sonarsource.com/csharp/RSPEC-3963/)
dotnet_diagnostic.s3966.severity = error      # Objects should not be disposed more than once (https://rules.sonarsource.com/csharp/RSPEC-3966/)
dotnet_diagnostic.s3967.severity = error      # Multidimensional arrays should not be used (https://rules.sonarsource.com/csharp/RSPEC-3967/)
dotnet_diagnostic.s3971.severity = error      # "GC.SuppressFinalize" should not be called (https://rules.sonarsource.com/csharp/RSPEC-3971/)
dotnet_diagnostic.s3972.severity = error      # Conditionals should start on new lines (https://rules.sonarsource.com/csharp/RSPEC-3972/)
dotnet_diagnostic.s3973.severity = error      # A conditionally executed single line should be denoted by indentation (https://rules.sonarsource.com/csharp/RSPEC-3973/)
dotnet_diagnostic.s3981.severity = error      # Collection sizes and array length comparisons should make sense (https://rules.sonarsource.com/csharp/RSPEC-3981/)
dotnet_diagnostic.s3984.severity = none       # Exceptions should not be created without being thrown (https://rules.sonarsource.com/csharp/RSPEC-3984/)
dotnet_diagnostic.s3990.severity = error      # Assemblies should be marked as CLS compliant (https://rules.sonarsource.com/csharp/RSPEC-3990/)
dotnet_diagnostic.s3992.severity = error      # Assemblies should explicitly specify COM visibility (https://rules.sonarsource.com/csharp/RSPEC-3992/)
dotnet_diagnostic.s3993.severity = error      # Custom attributes should be marked with "System.AttributeUsageAttribute" (https://rules.sonarsource.com/csharp/RSPEC-3993/)
dotnet_diagnostic.s3994.severity = error      # URI Parameters should not be strings (https://rules.sonarsource.com/csharp/RSPEC-3994/)
dotnet_diagnostic.s3995.severity = error      # URI return values should not be strings (https://rules.sonarsource.com/csharp/RSPEC-3995/)
dotnet_diagnostic.s3996.severity = error      # URI properties should not be strings (https://rules.sonarsource.com/csharp/RSPEC-3996/)
dotnet_diagnostic.s3997.severity = error      # String URI overloads should call "System.Uri" overloads (https://rules.sonarsource.com/csharp/RSPEC-3997/)
dotnet_diagnostic.s3998.severity = error      # Threads should not lock on objects with weak identity (https://rules.sonarsource.com/csharp/RSPEC-3998/)
dotnet_diagnostic.s4000.severity = error      # Pointers to unmanaged memory should not be visible (https://rules.sonarsource.com/csharp/RSPEC-4000/)
dotnet_diagnostic.s4002.severity = error      # Disposable types should declare finalizers (https://rules.sonarsource.com/csharp/RSPEC-4002/)
dotnet_diagnostic.s4004.severity = error      # Collection properties should be readonly (https://rules.sonarsource.com/csharp/RSPEC-4004/)
dotnet_diagnostic.s4005.severity = error      # "System.Uri" arguments should be used instead of strings (https://rules.sonarsource.com/csharp/RSPEC-4005/)
dotnet_diagnostic.s4015.severity = error      # Inherited member visibility should not be decreased (https://rules.sonarsource.com/csharp/RSPEC-4015/)
dotnet_diagnostic.s4016.severity = error      # Enumeration members should not be named "Reserved" (https://rules.sonarsource.com/csharp/RSPEC-4016/)
dotnet_diagnostic.s4017.severity = none       # Method signatures should not contain nested generic types (https://rules.sonarsource.com/csharp/RSPEC-4017/)
dotnet_diagnostic.s4018.severity = none       # All type parameters should be used in the parameter list to enable type inference (https://rules.sonarsource.com/csharp/RSPEC-4018/)
dotnet_diagnostic.s4019.severity = error      # Base class methods should not be hidden (https://rules.sonarsource.com/csharp/RSPEC-4019/)
dotnet_diagnostic.s4022.severity = none       # Enumerations should have "Int32" storage (https://rules.sonarsource.com/csharp/RSPEC-4022/)
dotnet_diagnostic.s4023.severity = none       # Interfaces should not be empty (https://rules.sonarsource.com/csharp/RSPEC-4023/)
dotnet_diagnostic.s4025.severity = error      # Child class fields should not differ from parent class fields only by capitalization (https://rules.sonarsource.com/csharp/RSPEC-4025/)
dotnet_diagnostic.s4026.severity = none       # Assemblies should be marked with "NeutralResourcesLanguageAttribute" (https://rules.sonarsource.com/csharp/RSPEC-4026/)
dotnet_diagnostic.s4027.severity = none       # Exceptions should provide standard constructors (https://rules.sonarsource.com/csharp/RSPEC-4027/)
dotnet_diagnostic.s4035.severity = error      # Classes implementing "IEquatable<T>" should be sealed (https://rules.sonarsource.com/csharp/RSPEC-4035/)
dotnet_diagnostic.s4036.severity = suggestion # Searching OS commands in PATH is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-4036/)
dotnet_diagnostic.s4039.severity = none       # Interface methods should be callable by derived types (https://rules.sonarsource.com/csharp/RSPEC-4039/)
dotnet_diagnostic.s4040.severity = none       # Strings should be normalized to uppercase (https://rules.sonarsource.com/csharp/RSPEC-4040/)
dotnet_diagnostic.s4041.severity = error      # Type names should not match namespaces (https://rules.sonarsource.com/csharp/RSPEC-4041/)
dotnet_diagnostic.s4047.severity = error      # Generics should be used when appropriate (https://rules.sonarsource.com/csharp/RSPEC-4047/)
dotnet_diagnostic.s4049.severity = none       # Properties should be preferred (https://rules.sonarsource.com/csharp/RSPEC-4049/)
dotnet_diagnostic.s4050.severity = error      # Operators should be overloaded consistently (https://rules.sonarsource.com/csharp/RSPEC-4050/)
dotnet_diagnostic.s4052.severity = error      # Types should not extend outdated base types (https://rules.sonarsource.com/csharp/RSPEC-4052/)
dotnet_diagnostic.s4055.severity = none       # Literals should not be passed as localized parameters (https://rules.sonarsource.com/csharp/RSPEC-4055/)
dotnet_diagnostic.s4056.severity = error      # Overloads with a "CultureInfo" or an "IFormatProvider" parameter should be used (https://rules.sonarsource.com/csharp/RSPEC-4056/)
dotnet_diagnostic.s4057.severity = error      # Locales should be set for data types (https://rules.sonarsource.com/csharp/RSPEC-4057/)
dotnet_diagnostic.s4058.severity = none       # (redundant with CA1310) Overloads with a "StringComparison" parameter should be used (https://rules.sonarsource.com/csharp/RSPEC-4058/)
dotnet_diagnostic.s4059.severity = error      # Property names should not match get methods (https://rules.sonarsource.com/csharp/RSPEC-4059/)
dotnet_diagnostic.s4060.severity = error      # Non-abstract attributes should be sealed (https://rules.sonarsource.com/csharp/RSPEC-4060/)
dotnet_diagnostic.s4061.severity = error      # "params" should be used instead of "varargs" (https://rules.sonarsource.com/csharp/RSPEC-4061/)
dotnet_diagnostic.s4069.severity = none       # Operator overloads should have named alternatives (https://rules.sonarsource.com/csharp/RSPEC-4069/)
dotnet_diagnostic.s4070.severity = error      # Non-flags enums should not be marked with "FlagsAttribute" (https://rules.sonarsource.com/csharp/RSPEC-4070/)
dotnet_diagnostic.s4136.severity = error      # Method overloads should be grouped together (https://rules.sonarsource.com/csharp/RSPEC-4136/)
dotnet_diagnostic.s4143.severity = error      # Collection elements should not be replaced unconditionally (https://rules.sonarsource.com/csharp/RSPEC-4143/)
dotnet_diagnostic.s4144.severity = error      # Methods should not have identical implementations (https://rules.sonarsource.com/csharp/RSPEC-4144/)
dotnet_diagnostic.s4158.severity = suggestion # Empty collections should not be accessed or iterated (https://rules.sonarsource.com/csharp/RSPEC-4158/)
dotnet_diagnostic.s4159.severity = error      # Classes should implement their "ExportAttribute" interfaces (https://rules.sonarsource.com/csharp/RSPEC-4159/)
dotnet_diagnostic.s4200.severity = error      # Native methods should be wrapped (https://rules.sonarsource.com/csharp/RSPEC-4200/)
dotnet_diagnostic.s4201.severity = none       # Null checks should not be combined with "is" operator checks (https://rules.sonarsource.com/csharp/RSPEC-4201/)
dotnet_diagnostic.s4210.severity = error      # Windows Forms entry points should be marked with STAThread (https://rules.sonarsource.com/csharp/RSPEC-4210/)
dotnet_diagnostic.s4211.severity = error      # Members should not have conflicting transparency annotations (https://rules.sonarsource.com/csharp/RSPEC-4211/)
dotnet_diagnostic.s4212.severity = error      # Serialization constructors should be secured (https://rules.sonarsource.com/csharp/RSPEC-4212/)
dotnet_diagnostic.s4214.severity = error      # "P/Invoke" methods should not be visible (https://rules.sonarsource.com/csharp/RSPEC-4214/)
dotnet_diagnostic.s4220.severity = error      # Events should have proper arguments (https://rules.sonarsource.com/csharp/RSPEC-4220/)
dotnet_diagnostic.s4225.severity = error      # Extension methods should not extend "object" (https://rules.sonarsource.com/csharp/RSPEC-4225/)
dotnet_diagnostic.s4226.severity = none       # Extensions should be in separate namespaces (https://rules.sonarsource.com/csharp/RSPEC-4226/)
dotnet_diagnostic.s4260.severity = error      # "ConstructorArgument" parameters should exist in constructors (https://rules.sonarsource.com/csharp/RSPEC-4260/)
dotnet_diagnostic.s4261.severity = none       # Methods should be named according to their synchronicities (https://rules.sonarsource.com/csharp/RSPEC-4261/)
dotnet_diagnostic.s4275.severity = error      # Getters and setters should access the expected fields (https://rules.sonarsource.com/csharp/RSPEC-4275/)
dotnet_diagnostic.s4277.severity = error      # "Shared" parts should not be created with "new" (https://rules.sonarsource.com/csharp/RSPEC-4277/)
dotnet_diagnostic.s4347.severity = error      # Secure random number generators should not output predictable values (https://rules.sonarsource.com/csharp/RSPEC-4347/)
dotnet_diagnostic.s4423.severity = error      # Weak SSL/TLS protocols should not be used (https://rules.sonarsource.com/csharp/RSPEC-4423/)
dotnet_diagnostic.s4426.severity = error      # Cryptographic keys should be robust (https://rules.sonarsource.com/csharp/RSPEC-4426/)
dotnet_diagnostic.s4428.severity = error      # "PartCreationPolicyAttribute" should be used with "ExportAttribute" (https://rules.sonarsource.com/csharp/RSPEC-4428/)
dotnet_diagnostic.s4433.severity = error      # LDAP connections should be authenticated (https://rules.sonarsource.com/csharp/RSPEC-4433/)
dotnet_diagnostic.s4456.severity = error      # Parameter validation in yielding methods should be wrapped (https://rules.sonarsource.com/csharp/RSPEC-4456/)
dotnet_diagnostic.s4457.severity = error      # Parameter validation in "async"/"await" methods should be wrapped (https://rules.sonarsource.com/csharp/RSPEC-4457/)
dotnet_diagnostic.s4462.severity = none       # (redundant with MA0045) Calls to "async" methods should not be blocking (https://rules.sonarsource.com/csharp/RSPEC-4462/)
dotnet_diagnostic.s4487.severity = none       # (redundant with IDE0052) Unread "private" fields should be removed (https://rules.sonarsource.com/csharp/RSPEC-4487/)
dotnet_diagnostic.s4502.severity = error      # Disabling CSRF protections is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-4502/)
dotnet_diagnostic.s4507.severity = suggestion # Delivering code in production with debug features activated is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-4507/)
dotnet_diagnostic.s4524.severity = error      # "default" clauses should be first or last (https://rules.sonarsource.com/csharp/RSPEC-4524/)
dotnet_diagnostic.s4545.severity = error      # "DebuggerDisplayAttribute" strings should reference existing members (https://rules.sonarsource.com/csharp/RSPEC-4545/)
dotnet_diagnostic.s4581.severity = error      # "new Guid()" should not be used (https://rules.sonarsource.com/csharp/RSPEC-4581/)
dotnet_diagnostic.s4583.severity = error      # Calls to delegate's method "BeginInvoke" should be paired with calls to "EndInvoke" (https://rules.sonarsource.com/csharp/RSPEC-4583/)
dotnet_diagnostic.s4586.severity = none       # Non-async "Task/Task<T>" methods should not return null (https://rules.sonarsource.com/csharp/RSPEC-4586/)
dotnet_diagnostic.s4635.severity = error      # Start index should be used instead of calling Substring (https://rules.sonarsource.com/csharp/RSPEC-4635/)
dotnet_diagnostic.s4663.severity = error      # Comments should not be empty (https://rules.sonarsource.com/csharp/RSPEC-4663/)
dotnet_diagnostic.s4790.severity = error      # Using weak hashing algorithms is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-4790/)
dotnet_diagnostic.s4792.severity = error      # Configuring loggers is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-4792/)
dotnet_diagnostic.s4830.severity = error      # Server certificates should be verified during SSL/TLS connections (https://rules.sonarsource.com/csharp/RSPEC-4830/)
dotnet_diagnostic.s5034.severity = error      # "ValueTask" should be consumed correctly (https://rules.sonarsource.com/csharp/RSPEC-5034/)
dotnet_diagnostic.s5042.severity = error      # Expanding archive files without controlling resource consumption is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-5042/)
dotnet_diagnostic.s5122.severity = none       # Having a permissive Cross-Origin Resource Sharing policy is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-5122/)
dotnet_diagnostic.s5332.severity = error      # Using clear-text protocols is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-5332/)
dotnet_diagnostic.s5344.severity = error      # Passwords should not be stored in plaintext or with a fast hashing algorithm (https://rules.sonarsource.com/csharp/RSPEC-5344/)
dotnet_diagnostic.s5443.severity = error      # Using publicly writable directories is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-5443/)
dotnet_diagnostic.s5445.severity = error      # Insecure temporary file creation methods should not be used (https://rules.sonarsource.com/csharp/RSPEC-5445/)
dotnet_diagnostic.s5542.severity = error      # Encryption algorithms should be used with secure mode and padding scheme (https://rules.sonarsource.com/csharp/RSPEC-5542/)
dotnet_diagnostic.s5547.severity = error      # Cipher algorithms should be robust (https://rules.sonarsource.com/csharp/RSPEC-5547/)
dotnet_diagnostic.s5659.severity = error      # JWT should be signed and verified with strong cipher algorithms (https://rules.sonarsource.com/csharp/RSPEC-5659/)
dotnet_diagnostic.s5693.severity = error      # Allowing requests with excessive content length is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-5693/)
dotnet_diagnostic.s5753.severity = error      # Disabling ASP.NET "Request Validation" feature is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-5753/)
dotnet_diagnostic.s5766.severity = error      # Deserializing objects without performing data validation is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-5766/)
dotnet_diagnostic.s5773.severity = error      # Types allowed to be deserialized should be restricted (https://rules.sonarsource.com/csharp/RSPEC-5773/)
dotnet_diagnostic.s5856.severity = error      # Regular expressions should be syntactically valid (https://rules.sonarsource.com/csharp/RSPEC-5856/)
dotnet_diagnostic.s6354.severity = error      # Use a testable date/time provider (https://rules.sonarsource.com/csharp/RSPEC-6354/)
dotnet_diagnostic.s6377.severity = error      # XML signatures should be validated securely (https://rules.sonarsource.com/csharp/RSPEC-6377/)
dotnet_diagnostic.s6418.severity = error      # Hard-coded secrets are security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-6418/)
dotnet_diagnostic.s6419.severity = error      # Azure Functions should be stateless (https://rules.sonarsource.com/csharp/RSPEC-6419/)
dotnet_diagnostic.s6420.severity = error      # Client instances should not be recreated on each Azure Function invocation (https://rules.sonarsource.com/csharp/RSPEC-6420/)
dotnet_diagnostic.s6421.severity = error      # Azure Functions should use Structured Error Handling (https://rules.sonarsource.com/csharp/RSPEC-6421/)
dotnet_diagnostic.s6422.severity = error      # Calls to "async" methods should not be blocking in Azure Functions (https://rules.sonarsource.com/csharp/RSPEC-6422/)
dotnet_diagnostic.s6423.severity = error      # Azure Functions should log all failures (https://rules.sonarsource.com/csharp/RSPEC-6423/)
dotnet_diagnostic.s6424.severity = error      # Interfaces for durable entities should satisfy the restrictions (https://rules.sonarsource.com/csharp/RSPEC-6424/)
dotnet_diagnostic.s6444.severity = error      # Not specifying a timeout for regular expressions is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-6444/)
dotnet_diagnostic.s6507.severity = error      # Blocks should not be synchronized on local variables (https://rules.sonarsource.com/csharp/RSPEC-6507/)
dotnet_diagnostic.s6513.severity = none       # "ExcludeFromCodeCoverage" attributes should include a justification (https://rules.sonarsource.com/csharp/RSPEC-6513/)
dotnet_diagnostic.s6561.severity = error      # Avoid using "DateTime.Now" for benchmarking or timing operations (https://rules.sonarsource.com/csharp/RSPEC-6561/)
dotnet_diagnostic.s6562.severity = error      # Always set the "DateTimeKind" when creating new "DateTime" instances (https://rules.sonarsource.com/csharp/RSPEC-6562/)
dotnet_diagnostic.s6563.severity = error      # Use UTC when recording DateTime instants (https://rules.sonarsource.com/csharp/RSPEC-6563/)
dotnet_diagnostic.s6566.severity = error      # Use "DateTimeOffset" instead of "DateTime" (https://rules.sonarsource.com/csharp/RSPEC-6566/)
dotnet_diagnostic.s6575.severity = error      # Use "TimeZoneInfo.FindSystemTimeZoneById" without converting the timezones with "TimezoneConverter" (https://rules.sonarsource.com/csharp/RSPEC-6575/)
dotnet_diagnostic.s6580.severity = error      # Use a format provider when parsing date and time (https://rules.sonarsource.com/csharp/RSPEC-6580/)
dotnet_diagnostic.s6585.severity = none       # Don't hardcode the format when turning dates and times to strings (https://rules.sonarsource.com/csharp/RSPEC-6585/)
dotnet_diagnostic.s6588.severity = error      # Use the "UnixEpoch" field instead of creating "DateTime" instances that point to the beginning of the Unix epoch (https://rules.sonarsource.com/csharp/RSPEC-6588/)
dotnet_diagnostic.s6602.severity = error      # "Find" method should be used instead of the "FirstOrDefault" extension (https://rules.sonarsource.com/csharp/RSPEC-6602/)
dotnet_diagnostic.s6603.severity = error      # The collection-specific "TrueForAll" method should be used instead of the "All" extension (https://rules.sonarsource.com/csharp/RSPEC-6603/)
dotnet_diagnostic.s6605.severity = error      # Collection-specific "Exists" method should be used instead of the "Any" extension (https://rules.sonarsource.com/csharp/RSPEC-6605/)
dotnet_diagnostic.s6607.severity = error      # The collection should be filtered before sorting by using "Where" before "OrderBy" (https://rules.sonarsource.com/csharp/RSPEC-6607/)
dotnet_diagnostic.s6608.severity = error      # Prefer indexing instead of "Enumerable" methods on types implementing "IList" (https://rules.sonarsource.com/csharp/RSPEC-6608/)
dotnet_diagnostic.s6609.severity = error      # "Min/Max" properties of "Set" types should be used instead of the "Enumerable" extension methods (https://rules.sonarsource.com/csharp/RSPEC-6609/)
dotnet_diagnostic.s6610.severity = error      # "StartsWith" and "EndsWith" overloads that take a "char" should be used instead of the ones that take a "string" (https://rules.sonarsource.com/csharp/RSPEC-6610/)
dotnet_diagnostic.s6612.severity = error      # The lambda parameter should be used instead of capturing arguments in "ConcurrentDictionary" methods (https://rules.sonarsource.com/csharp/RSPEC-6612/)
dotnet_diagnostic.s6613.severity = error      # "First" and "Last" properties of "LinkedList" should be used instead of the "First()" and "Last()" extension methods (https://rules.sonarsource.com/csharp/RSPEC-6613/)
dotnet_diagnostic.s6617.severity = error      # "Contains" should be used instead of "Any" for simple equality checks (https://rules.sonarsource.com/csharp/RSPEC-6617/)
dotnet_diagnostic.s6618.severity = none       # "string.Create" should be used instead of "FormattableString" (https://rules.sonarsource.com/csharp/RSPEC-6618/)
dotnet_diagnostic.s6640.severity = error      # Using unsafe code blocks is security-sensitive (https://rules.sonarsource.com/csharp/RSPEC-6640/)
dotnet_diagnostic.s6664.severity = suggestion # The code block contains too many logging calls (https://rules.sonarsource.com/csharp/RSPEC-6664/)
dotnet_diagnostic.s6667.severity = error      # Logging in a catch clause should pass the caught exception as a parameter. (https://rules.sonarsource.com/csharp/RSPEC-6667/)
dotnet_diagnostic.s6668.severity = error      # Logging arguments should be passed to the correct parameter (https://rules.sonarsource.com/csharp/RSPEC-6668/)
dotnet_diagnostic.s6669.severity = error      # Logger field or property name should comply with a naming convention (https://rules.sonarsource.com/csharp/RSPEC-6669/)
dotnet_diagnostic.s6670.severity = error      # "Trace.Write" and "Trace.WriteLine" should not be used (https://rules.sonarsource.com/csharp/RSPEC-6670/)
dotnet_diagnostic.s6672.severity = error      # Generic logger injection should match enclosing type (https://rules.sonarsource.com/csharp/RSPEC-6672/)
dotnet_diagnostic.s6673.severity = error      # Log message template placeholders should be in the right order (https://rules.sonarsource.com/csharp/RSPEC-6673/)
dotnet_diagnostic.s6674.severity = error      # Log message template should be syntactically correct (https://rules.sonarsource.com/csharp/RSPEC-6674/)
dotnet_diagnostic.s6675.severity = error      # "Trace.WriteLineIf" should not be used with "TraceSwitch" levels (https://rules.sonarsource.com/csharp/RSPEC-6675/)
dotnet_diagnostic.s6677.severity = error      # Message template placeholders should be unique (https://rules.sonarsource.com/csharp/RSPEC-6677/)
dotnet_diagnostic.s6678.severity = error      # Use PascalCase for named placeholders (https://rules.sonarsource.com/csharp/RSPEC-6678/)
dotnet_diagnostic.s6781.severity = error      # JWT secret keys should not be disclosed (https://rules.sonarsource.com/csharp/RSPEC-6781/)
dotnet_diagnostic.s6797.severity = error      # Blazor query parameter type should be supported (https://rules.sonarsource.com/csharp/RSPEC-6797/)
dotnet_diagnostic.s6798.severity = error      # [JSInvokable] attribute should only be used on public methods (https://rules.sonarsource.com/csharp/RSPEC-6798/)
dotnet_diagnostic.s6800.severity = error      # Component parameter type should match the route parameter type constraint (https://rules.sonarsource.com/csharp/RSPEC-6800/)
dotnet_diagnostic.s6802.severity = error      # Using lambda expressions in loops should be avoided in Blazor markup section (https://rules.sonarsource.com/csharp/RSPEC-6802/)
dotnet_diagnostic.s6803.severity = error      # Parameters with SupplyParameterFromQuery attribute should be used only in routable components (https://rules.sonarsource.com/csharp/RSPEC-6803/)
dotnet_diagnostic.s6930.severity = error      # Backslash should be avoided in route templates (https://rules.sonarsource.com/csharp/RSPEC-6930/)
dotnet_diagnostic.s6931.severity = error      # ASP.NET controller actions should not have a route template starting with "/" (https://rules.sonarsource.com/csharp/RSPEC-6931/)
dotnet_diagnostic.s6932.severity = error      # Use model binding instead of reading raw request data (https://rules.sonarsource.com/csharp/RSPEC-6932/)
dotnet_diagnostic.s6934.severity = error      # A Route attribute should be added to the controller when a route template is specified at the action level (https://rules.sonarsource.com/csharp/RSPEC-6934/)
dotnet_diagnostic.s6960.severity = error      # Controllers should not have mixed responsibilities (https://rules.sonarsource.com/csharp/RSPEC-6960/)
dotnet_diagnostic.s6961.severity = error      # API Controllers should derive from ControllerBase instead of Controller (https://rules.sonarsource.com/csharp/RSPEC-6961/)
dotnet_diagnostic.s6962.severity = error      # You should pool HTTP connections with HttpClientFactory (https://rules.sonarsource.com/csharp/RSPEC-6962/)
dotnet_diagnostic.s6964.severity = error      # Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting. (https://rules.sonarsource.com/csharp/RSPEC-6964/)
dotnet_diagnostic.s6965.severity = error      # REST API actions should be annotated with an HTTP verb attribute (https://rules.sonarsource.com/csharp/RSPEC-6965/)
dotnet_diagnostic.s6966.severity = error      # Awaitable method should be used (https://rules.sonarsource.com/csharp/RSPEC-6966/)
dotnet_diagnostic.s6967.severity = error      # ModelState.IsValid should be called in controller actions (https://rules.sonarsource.com/csharp/RSPEC-6967/)
dotnet_diagnostic.s6968.severity = error      # Actions that return a value should be annotated with ProducesResponseTypeAttribute containing the return type (https://rules.sonarsource.com/csharp/RSPEC-6968/)
dotnet_diagnostic.s7039.severity = error      # Content Security Policies should be restrictive (https://rules.sonarsource.com/csharp/RSPEC-7039/)
dotnet_diagnostic.s7130.severity = error      # First/Single should be used instead of FirstOrDefault/SingleOrDefault on collections that are known to be non-empty (https://rules.sonarsource.com/csharp/RSPEC-7130/)
dotnet_diagnostic.s7131.severity = error      # A write lock should not be released when a read lock has been acquired and vice versa (https://rules.sonarsource.com/csharp/RSPEC-7131/)
dotnet_diagnostic.s7133.severity = error      # Locks should be released within the same method (https://rules.sonarsource.com/csharp/RSPEC-7133/)
dotnet_diagnostic.s818.severity  = error      # Literal suffixes should be upper case (https://rules.sonarsource.com/csharp/RSPEC-818/)
dotnet_diagnostic.s881.severity  = error      # Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression (https://rules.sonarsource.com/csharp/RSPEC-881/)
dotnet_diagnostic.s907.severity  = error      # "goto" statement should not be used (https://rules.sonarsource.com/csharp/RSPEC-907/)
dotnet_diagnostic.s927.severity  = error      # Parameter names should match base declaration and other partial definitions (https://rules.sonarsource.com/csharp/RSPEC-927/)

[{Program,ProgramHost,Startup,*ServiceCollectionExtensions}.cs]
# in these files it is common to not use return values, mostly due to using `services.Add` methods
dotnet_diagnostic.ide0058.severity = none

[GlobalUsings.cs]
# false positive in global usings files
dotnet_diagnostic.sa1200.severity = none # A C# using directive is placed outside of a namespace element (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1200.md)

# conflicts with formatting from CSharpier
dotnet_diagnostic.sa1216.severity = none # A `using static` directive is positioned at the wrong location (before a regular using directive or after an alias using directive) (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1216.md)

[src/**/*Command.cs]
# these types are used by reflection, so we disable some checks to not get false positives
resharper_class_never_instantiated_global_highlighting = none
resharper_unused_auto_property_accessor_global_highlighting = none
resharper_unused_type_global_highlighting = none

[*Exception.cs]
# our exceptions implement standard constructors which are often not used and would lead to confusing highlighting
resharper_unused_member_global_highlighting = none
resharper_unused_member_local_highlighting = none

[{*Benchmark.cs,*Benchmarks.cs}]
# benchmarks cannot be async, so we are forced to use GetAwaiter().GetResult()
dotnet_diagnostic.ma0045.severity = none # Do not use blocking calls in a sync method (need to make calling method async) (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0045.md)

# in benchmark parameter generators we often use inline arrays and we don't care about performance there
dotnet_diagnostic.ca1861.severity = no

# this weird list of file match expressions is because Rider does not
# seem to respect the simple expression `src/**/*Tests/**/*.cs`, i.e.
# the `**` expression matches "1 or more" instead of "0 or more"
[{src/*Tests/*.cs,src/*Tests/**/*.cs,src/**/*Tests/*.cs,src/**/*Tests/**/*.cs}]
# in test classes we often require nested public types that are accessed via reflection
resharper_member_can_be_private_global_highlighting = none

# we don't really care about performance in test code
resharper_usage_of_default_struct_equality_highlighting = none

# we don't generate XML docs in test projects, but this rule requires it, so we cannot use it
dotnet_diagnostic.ide0005.severity = none

# this causes false positives for eventual sync assertions
dotnet_diagnostic.ide0200.severity = none # Remove unnecessary lambda expression (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0200)

# we don't care about exceptions declared in test projects since nobody should depend on them except the test project itself
dotnet_diagnostic.ca1064.severity = error # Exceptions should be public (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1064)

# this wrongly reports test fixtures, so we disable it for tests
dotnet_diagnostic.ca1515.severity = none # Consider making public types internal (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1515)

# XML comments are not necessary in test projects
dotnet_diagnostic.cs1591.severity = none # Public elements should have XML comments (https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/cs1591)

# our naming conventions require underscores in method names
dotnet_diagnostic.ca1707.severity = none # Identifiers should not contain underscores (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1707)

# we do not care about performance in tests
dotnet_diagnostic.ca1819.severity = none # Properties should not return arrays (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1819)
dotnet_diagnostic.ca1861.severity = none # Avoid constant arrays as arguments (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1861)
dotnet_diagnostic.ca1869.severity = none # Cache and reuse 'JsonSerializerOptions' instances (https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1869)

# we don't care about this for test exceptions
dotnet_diagnostic.rcs1194.severity = none # Implement exception constructors (https://josefpihrt.github.io/docs/roslynator/analyzers/rcs1194)

# this rule complains about XML docs not being generated, which we don't need for test projects
dotnet_diagnostic.sa0001.severity = none

# the type ordering rules often don't match with our approach for co-locating types and members in test classes
dotnet_diagnostic.sa1201.severity = none # An element within a C# code file is out of order in relation to the other elements in the code (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1201.md)
dotnet_diagnostic.sa1202.severity = none # An element within a C# code file is out of order within regard to access level, in relation to other elements in the code (https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1202.md)

# not necessary in tests
dotnet_diagnostic.ma0009.severity = none # Add regex evaluation timeout (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0009.md)

# not necessary in tests
dotnet_diagnostic.ma0109.severity = none # Consider adding an overload with a Span<T> or Memory<T> (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0109.md)

# we don't care about regex performance in tests
dotnet_diagnostic.ma0110.severity = none # Use the Regex source generator (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0110.md)

# we don't care about string interpolation without explicit culture in test projects
dotnet_diagnostic.ma0076.severity = none # Do not use implicit culture-sensitive ToString in interpolated strings (https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0076.md)
